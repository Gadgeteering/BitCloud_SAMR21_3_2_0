###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.4.8167/W32 for ARM        31/Mar/2015  18:40:58
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\thermostat\src\thConsole.c
#    Command line =  
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\thermostat\src\thConsole.c
#        -D BOARD_SAMR21 -D BOARD_QTOUCH_XPRO -D AT86RF233 -D ATSAMR21G18A -D
#        HAL_8MHz -D STACK_TYPE_ALL -D STDLINK_SECURITY_MODE -lC
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects\All_StdlinkSec_SamR21_Atsamr21g18a_Rf233_8Mhz/List\
#        --diag_suppress Pa050,Pe188 -o
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects\All_StdlinkSec_SamR21_Atsamr21g18a_Rf233_8Mhz/Obj\
#        --debug --endian=little --cpu=Cortex-M0+ -e --fpu=None --dlib_config
#        "C:\Program Files\IAR Systems\Embedded Workbench
#        7.30\arm\INC\c\DLib_Config_Full.h" --preinclude
#        MakerulesBc_All_StdlinkSec_Atsamr21g18a_Rf233_Iar.h -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/..\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../dimmableLight/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../dimmerSwitch/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../multiSensor/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../thermostat/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../ias_ace/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../combinedInterface/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../common/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../common/clusters/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/BSP/SAMR21/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/SystemEnvironment/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/lib\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/HAL/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/BSP\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/BSP/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/BSP/QTouch_XPRO/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/NWK/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/NWK/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZDO/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZDO/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/APS/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/APS/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/SystemEnvironment/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ConfigServer/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ConfigServer/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/PersistDataServer/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/PersistDataServer/std/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/PersistDataServer/wl/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Types/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Util/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Timer/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Task/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_ErrH/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Log/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Memory/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Init/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/S_Nv/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/S_XNv/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/D_Nv/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/D_XNv/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/D_XNv/src\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/S_XNv/src\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/Security/TrustCentre/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/Security/ServiceProvider/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/HAL/drivers/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/HAL/drivers/VCP/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/HAL/cortexm0+/atsamr21/common/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZCL/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZCL/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_ENV/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_HWI/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_HWD_PHY/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_HWD_PHY/RF231_RF212/PHY/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_HWD_PHY/RF231_RF212/MAC_HWD/include\
#        -Ohz --use_c++_inline
#    List file    =  
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects\All_StdlinkSec_SamR21_Atsamr21g18a_Rf233_8Mhz/List\thConsole.lst
#    Object file  =  
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects\All_StdlinkSec_SamR21_Atsamr21g18a_Rf233_8Mhz/Obj\thConsole.o
#
###############################################################################

D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\thermostat\src\thConsole.c
      1          /**************************************************************************//**
      2            \file thConsole.c
      3          
      4            \brief
      5              Thermostat console implementation.
      6          
      7            \author
      8              Atmel Corporation: http://www.atmel.com \n
      9              Support email: avr@atmel.com
     10          
     11            Copyright (c) 2008-2015, Atmel Corporation. All rights reserved.
     12            Licensed under Atmel's Limited License Agreement (BitCloudTM).
     13          
     14            \internal
     15              History:
     16              09/09/2014 Unithra.C - Created
     17          ******************************************************************************/
     18          #ifdef APP_DEVICE_TYPE_THERMOSTAT
     19          #if APP_ENABLE_CONSOLE == 1
     20          
     21          /******************************************************************************
     22                              Includes section
     23          ******************************************************************************/
     24          #include <uartManager.h>

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void SYS_DisableTask(SYS_TaskId_t)
   \                     SYS_DisableTask: (+1)
   \   00000000   0x....             LDR      R1,??DataTable62
   \   00000002   0x880A             LDRH     R2,[R1, #+0]
   \   00000004   0x4382             BICS     R2,R2,R0
   \   00000006   0x800A             STRH     R2,[R1, #+0]
   \   00000008   0x4770             BX       LR               ;; return
     25          #include <console.h>
     26          #include <resetReason.h>
     27          #include <zclDevice.h>
     28          #include <sysUtils.h>
     29          #include <pdsDataServer.h>
     30          #include <zdo.h>
     31          #include <zclDevice.h>
     32          #include <ezModeManager.h>
     33          #include <thThermostatCluster.h>
     34          #include <thOccupancySensingCluster.h>
     35          #include <thTimeCluster.h>
     36          #include <thHumidityMeasurementCluster.h>
     37          #include <thTemperatureMeasurementCluster.h>
     38          
     39          /******************************************************************************
     40                              Defines section
     41          ******************************************************************************/
     42          /* This value used in ZLL tests to identify non-ZLL Router */
     43          #define TEST_DEVICE_TYPE_HA_ROUTER 0x03U
     44          #define TEMPERATURE_SCALE 100
     45          
     46          /******************************************************************************
     47                              Types section
     48          ******************************************************************************/
     49          
     50          /******************************************************************************
     51                              Prototypes section
     52          ******************************************************************************/
     53          static void processHelpCmd(const ScanValue_t *args);
     54          static void processResetCmd(const ScanValue_t *args);
     55          static void processReadAttrCmd(const ScanValue_t *args);
     56          static void processWriteAttrCmd(const ScanValue_t *args);
     57          static void processConfigureReportingCmd(const ScanValue_t *args);
     58          static void processInvokeEzModeCmd(const ScanValue_t *args);
     59          static void processResetToFactoryFreshCmd(const ScanValue_t *args);
     60          static void processGetDeviceTypeCmd(const ScanValue_t *args);
     61          static void processPseudoPowerOffCmd(const ScanValue_t *args);
     62          static void processSetPermitJoinCmd(const ScanValue_t *args);
     63          static void processRestartNwkCmd(const ScanValue_t *args);
     64          static void processGetNetworkAddressCmd(const ScanValue_t *args);
     65          static void processTriggerAlarmCmd(const ScanValue_t *args);
     66          static void processSetAlarmMaskCmd(const ScanValue_t *args);
     67          static void zdoPermitJoiningResponse(ZDO_ZdpResp_t *resp);
     68          static void processSetOccupancyStateCmd(const ScanValue_t *args);
     69          static void processSetSensorTypeCmd(const ScanValue_t *args);
     70          static APS_AddrMode_t determineAddressMode(const ScanValue_t *arg);
     71          #ifdef ZCL_THERMOSTAT_CLUSTER_INCLUDE_OPTIONAL_ATTRIBUTES
     72          static void processSetOccupancyCmd(const ScanValue_t *args);
     73          #endif
     74          static void processAttrinitDefault(const ScanValue_t *args);
     75          
     76          /******************************************************************************
     77                              Local variables section
     78          ******************************************************************************/

   \                                 In section .bss, align 8
     79          static ZDO_ZdpReq_t zdpReq;
   \                     zdpReq:
   \   00000000                      DS8 392

   \                                 In section .bss, align 4
     80          static uint8_t readBuffer[USART_RX_BUFFER_LENGTH];
   \                     readBuffer:
   \   00000000                      DS8 52

   \                                 In section .text, align 4, keep-with-next
     81          static const ConsoleCommand_t cmds[] =
   \                     cmds:
   \   00000000   0x........         DC32 ?_0, ?_1, processHelpCmd, ?_2, ?_3, ?_1, processResetCmd, ?_4, ?_5
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000024   0x........         DC32 ?_1, processGetNetworkAddressCmd, ?_6, ?_7, ?_1
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000038   0x........         DC32 processInvokeEzModeCmd, ?_8, ?_9, ?_1
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000048   0x........         DC32 processResetToFactoryFreshCmd, ?_10, ?_11, ?_1
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000058   0x........         DC32 processGetDeviceTypeCmd, ?_12, ?_13, ?_1, processPseudoPowerOffCmd
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   0000006C   0x........         DC32 ?_14, ?_15, ?_16, processSetPermitJoinCmd, ?_17, ?_18, ?_16
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000088   0x........         DC32 processSetOccupancyCmd, ?_19, ?_20, ?_16, processAttrinitDefault
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   0000009C   0x........         DC32 ?_21, ?_22, ?_16, processRestartNwkCmd, ?_23, ?_24, ?_25
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   000000B8   0x........         DC32 processReadAttrCmd, ?_26, ?_27, ?_28, processWriteAttrCmd, ?_29
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   000000D0   0x........         DC32 ?_30, ?_28, processConfigureReportingCmd, ?_31, ?_32, ?_16
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   000000E8   0x........         DC32 processSetOccupancyStateCmd, ?_33, ?_34, ?_16
   \              0x........   
   \              0x........   
   \              0x........   
   \   000000F8   0x........         DC32 processSetSensorTypeCmd, ?_35, ?_36, ?_37, processTriggerAlarmCmd
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   0000010C   0x........         DC32 ?_38, ?_39, ?_40, processSetAlarmMaskCmd, ?_41, 0H, 0H, 0H, 0H
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
     82          {
     83            {"help",   "", processHelpCmd, "->Show help you're reading now:  help\r\n"},
     84            {"reset", "", processResetCmd, "->Reset device\r\n"},
     85            {"getNetworkAddress", "", processGetNetworkAddressCmd, "-> Returns network address: getNetworkAddress\r\n"},
     86            {"invokeEZMode", "", processInvokeEzModeCmd, "->Start finding and binding process\r\n"},
     87            {"resetToFN", "", processResetToFactoryFreshCmd, "->Reset to factory fresh settings: resetToFN\r\n"},
     88            {"getDeviceType", "", processGetDeviceTypeCmd, "-> Request for device type: getDeviceType\r\n"},
     89            {"powerOff", "", processPseudoPowerOffCmd, "-> Powers off device: powerOff\r\n"},
     90            {"setPermitJoin", "d", processSetPermitJoinCmd, "-> Sets Permit Join: setPermitJoin [dur]\r\n"},
     91          #ifdef ZCL_THERMOSTAT_CLUSTER_INCLUDE_OPTIONAL_ATTRIBUTES  
     92            {"setOccupancy", "d", processSetOccupancyCmd, "-> Sets Occupancy [0- UnOccupied/1- Occupied]\r\n"},
     93          #endif
     94            {"clusterAttrInitDefault", "d", processAttrinitDefault, "-> Initializes all attributes to default values [clusterID]\r\n"},
     95            {"restartNwk", "d", processRestartNwkCmd, "-> Restarts network on particular channel [channel]\r\n"},
     96            {"readAttribute", "sdddd", processReadAttrCmd,
     97              "->Read Attribute for specified cluster: readAttribute [addrMode][addr][ep][clusterId][attrId]\r\n"},
     98            {"writeAttribute", "sddddddd", processWriteAttrCmd,
     99              "->Write Attribute for specified cluster: writeAttribute [addrMode][addr][ep][clusterId][attrId][type][attrValue][attrSize]\r\n"},
    100            {"configureReporting", "sddddddd", processConfigureReportingCmd,
    101              "->Sends configure reporting to specified cluster server: configureReporting [addrMode][addr][ep][clusterId][attrId][type][min][max]\r\n"},
    102            {"setOccupancyState", "d", processSetOccupancyStateCmd, "-> Sets the Occupancy state [state]- occupiad - 1,unoccupiad -0\r\n "},
    103            {"setOccupancySensorType", "d", processSetSensorTypeCmd, "-> Sets the OccupancySensor Type [sensorType]- PIR - 0,Ultrasonic-1, PIR + Ultrasonic-20\r\n "},
    104            {"triggerAlarm","ddd", processTriggerAlarmCmd, "-> Triggers alarm condition: triggerAlarm [clusterId][alarmCode][0-raise 1-clear]\r\n"},
    105            {"setAlarmMask","dd", processSetAlarmMaskCmd, "-> Set Alarm Mask: setAlarmMask [clusterId][alarmMask]\r\n"},
    106            {0,0,0,0},
    107          };
    108          
    109          /******************************************************************************
    110                              Implementation section
    111          ******************************************************************************/
    112          /**************************************************************************//**
    113          \brief Sends single char to serial interface
    114          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    115          void consoleTx(char chr)
    116          {
   \                     consoleTx: (+1)
   \   00000000   0xB501             PUSH     {R0,LR}
    117            appSnprintf(&chr);
   \   00000002   0x4668             MOV      R0,SP
   \   00000004   0x.... 0x....      BL       appSnprintf
    118          }
   \   00000008   0xBD01             POP      {R0,PC}          ;; return
    119          
    120          /**************************************************************************//**
    121          \brief Processes single char read from serial interface
    122          
    123          \param[in] char - read char
    124          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    125          void consoleTxStr(const char *str)
    126          {
   \                     consoleTxStr: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    127            appSnprintf(str);
   \   00000002   0x.... 0x....      BL       appSnprintf
    128          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
    129          
    130          /**************************************************************************//**
    131          \brief Initializes console
    132          ******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    133          void initConsole(void)
    134          {
   \                     initConsole: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    135            consoleRegisterCommands(cmds);
   \   00000002   0xBF00             Nop      
   \   00000004   0x....             ADR.N    R0,cmds
   \   00000006   0x.... 0x....      BL       consoleRegisterCommands
    136          }
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return
    137          
    138          /**************************************************************************//**
    139          \brief Processes data received by console
    140          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    141          void processConsole(uint16_t length)
    142          {
   \                     processConsole: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    143            int8_t bytesRead = readDataFromUart(readBuffer, MIN(USART_RX_BUFFER_LENGTH, length));
   \   00000002   0x2833             CMP      R0,#+51
   \   00000004   0xDB00             BLT      ??processConsole_0
   \   00000006   0x2032             MOVS     R0,#+50
   \                     ??processConsole_0: (+1)
   \   00000008   0x....             LDR      R4,??DataTable62_1
   \   0000000A   0xB2C1             UXTB     R1,R0
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0x.... 0x....      BL       readDataFromUart
   \   00000012   0xB245             SXTB     R5,R0
    144          
    145            for (int8_t i = 0; i < bytesRead; i++)
   \   00000014   0x2600             MOVS     R6,#+0
   \   00000016   0xE003             B        ??processConsole_1
    146              consoleRx(readBuffer[i]);
   \                     ??processConsole_2: (+1)
   \   00000018   0x5DA0             LDRB     R0,[R4, R6]
   \   0000001A   0x.... 0x....      BL       consoleRx
   \   0000001E   0x1C76             ADDS     R6,R6,#+1
   \                     ??processConsole_1: (+1)
   \   00000020   0xB276             SXTB     R6,R6
   \   00000022   0x42AE             CMP      R6,R5
   \   00000024   0xDBF8             BLT      ??processConsole_2
    147          }
   \   00000026   0xBD70             POP      {R4-R6,PC}       ;; return
    148          
    149          /**************************************************************************//**
    150          \brief Processes help command
    151          
    152          \param[in] args - array of command arguments
    153          ******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    154          static void processHelpCmd(const ScanValue_t *args)
    155          {
   \                     processHelpCmd: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
    156            (void)args;
    157          
    158            LOG_STRING(commandStr, "Commands: \r\n");
   \   00000004   0x4668             MOV      R0,SP
   \   00000006   0xBF00             Nop      
   \   00000008   0x....             ADR.N    R1,?_42
   \   0000000A   0x2210             MOVS     R2,#+16
   \   0000000C   0x.... 0x....      BL       __aeabi_memcpy4
    159            appSnprintf(commandStr);
   \   00000010   0x4668             MOV      R0,SP
   \   00000012   0x.... 0x....      BL       appSnprintf
    160            for (const ConsoleCommand_t *cmd = cmds; cmd->name; cmd++)
   \   00000016   0xBF00             Nop      
   \   00000018   0x....             ADR.N    R4,cmds
   \   0000001A   0xBF00             Nop      
   \   0000001C   0x....             ADR.N    R5,?_43
   \   0000001E   0xE003             B        ??processHelpCmd_0
    161              appSnprintf("%s\r\n", cmd->name);
   \                     ??processHelpCmd_1: (+1)
   \   00000020   0x0028             MOVS     R0,R5
   \   00000022   0x.... 0x....      BL       appSnprintf
   \   00000026   0x3410             ADDS     R4,R4,#+16
   \                     ??processHelpCmd_0: (+1)
   \   00000028   0x6821             LDR      R1,[R4, #+0]
   \   0000002A   0x2900             CMP      R1,#+0
   \   0000002C   0xD1F8             BNE      ??processHelpCmd_1
    162          }
   \   0000002E   0xB005             ADD      SP,SP,#+20
   \   00000030   0xBD30             POP      {R4,R5,PC}       ;; return
    163          
    164          /**************************************************************************//**
    165          \brief Processes reset command: reset device
    166          
    167          \param[in] args - array of command arguments
    168          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    169          static void processResetCmd(const ScanValue_t *args)
    170          {
   \                     processResetCmd: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    171            (void)args;
    172          
    173            HAL_WarmReset();
   \   00000002   0x.... 0x....      BL       HAL_WarmReset
    174          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
    175          /**************************************************************************//**
    176          \brief Processes get network address command
    177          
    178          \param[in] args - array of command arguments
    179          ******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    180          static void processGetNetworkAddressCmd(const ScanValue_t *args)
    181          {
   \                     processGetNetworkAddressCmd: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    182            (void)args;
    183            appSnprintf("%04x\r\n", NWK_GetShortAddr());
   \   00000002   0x.... 0x....      BL       NWK_GetShortAddr
   \   00000006   0x0001             MOVS     R1,R0
   \   00000008   0x....             ADR.N    R0,?_44
   \   0000000A   0x.... 0x....      BL       appSnprintf
    184          }
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return
    185          /**************************************************************************//**
    186          \brief Processes start finding and binding command
    187          
    188          \param[in] args - array of command arguments
    189          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    190          static void processInvokeEzModeCmd(const ScanValue_t *args)
    191          {
   \                     processInvokeEzModeCmd: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    192            (void)args;
    193            invokeEzMode(NULL);
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x.... 0x....      BL       invokeEzMode
    194          }
   \   00000008   0xBD01             POP      {R0,PC}          ;; return
    195          
    196          /**************************************************************************//**
    197          \brief Processes reset to factory fresh
    198          
    199          \param[in] args - array of command arguments
    200          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    201          static void processResetToFactoryFreshCmd(const ScanValue_t *args)
    202          {
   \                     processResetToFactoryFreshCmd: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    203            (void)args;
    204            PDS_DeleteAll(false);
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x.... 0x....      BL       PDS_DeleteAll
    205            HAL_WarmReset();
   \   00000008   0x.... 0x....      BL       HAL_WarmReset
    206          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return
    207          
    208          /**************************************************************************//**
    209          \brief Processes request for device type obtaining
    210          
    211          \param[in] args - array of command arguments
    212          ******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    213          static void processGetDeviceTypeCmd(const ScanValue_t *args)
    214          {
   \                     processGetDeviceTypeCmd: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
    215            LOG_STRING(deviceFnStatusStr, "DeviceType = %d\r\n");
   \   00000004   0x4668             MOV      R0,SP
   \   00000006   0xBF00             Nop      
   \   00000008   0x....             ADR.N    R1,?_45
   \   0000000A   0x2214             MOVS     R2,#+20
   \   0000000C   0x.... 0x....      BL       __aeabi_memcpy4
    216            appSnprintf(deviceFnStatusStr, TEST_DEVICE_TYPE_HA_ROUTER);
   \   00000010   0x2103             MOVS     R1,#+3
   \   00000012   0x4668             MOV      R0,SP
   \   00000014   0x.... 0x....      BL       appSnprintf
    217            (void)args;
    218          }
   \   00000018   0xB005             ADD      SP,SP,#+20
   \   0000001A   0xBD00             POP      {PC}             ;; return
    219          
    220          /**************************************************************************//**
    221          \brief Processes pseudo power off command
    222          
    223          \param[in] args - array of command arguments
    224          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    225          static void processPseudoPowerOffCmd(const ScanValue_t *args)
    226          {
   \                     processPseudoPowerOffCmd: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    227            /* Disable BitCloud tasks for preventing calls to the radio.
    228               HAL is enabled so it it allows to receive commands through UART. */
    229            SYS_DisableTask(ZDO_TASK_ID);
   \   00000002   0x2010             MOVS     R0,#+16
   \   00000004   0x.... 0x....      BL       SYS_DisableTask
    230            SYS_DisableTask(APS_TASK_ID);
   \   00000008   0x2020             MOVS     R0,#+32
   \   0000000A   0x.... 0x....      BL       SYS_DisableTask
    231            SYS_DisableTask(NWK_TASK_ID);
   \   0000000E   0x2008             MOVS     R0,#+8
   \   00000010   0x.... 0x....      BL       SYS_DisableTask
    232            SYS_DisableTask(MAC_PHY_HWD_TASK_ID);
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0x.... 0x....      BL       SYS_DisableTask
    233            (void)args;
    234          }
   \   0000001A   0xBD01             POP      {R0,PC}          ;; return
    235          
    236          /**************************************************************************//**
    237          \brief Processes Set Permit Join command
    238          
    239          \param[in] args - array of command arguments
    240          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    241          static void processSetPermitJoinCmd(const ScanValue_t *args)
    242          {
   \                     processSetPermitJoinCmd: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
    243            ZDO_MgmtPermitJoiningReq_t *permit = &zdpReq.req.reqPayload.mgmtPermitJoiningReq;
    244          
    245            zdpReq.ZDO_ZdpResp = zdoPermitJoiningResponse;
   \   00000004   0x....             LDR      R5,??DataTable65
   \   00000006   0x....             LDR      R0,??DataTable65_1
   \   00000008   0x2190             MOVS     R1,#+144
   \   0000000A   0x0049             LSLS     R1,R1,#+1        ;; #+288
   \   0000000C   0x5068             STR      R0,[R5, R1]
    246            zdpReq.reqCluster = MGMT_PERMIT_JOINING_CLID;
   \   0000000E   0x002E             MOVS     R6,R5
   \   00000010   0x3680             ADDS     R6,R6,#+128
   \   00000012   0x2036             MOVS     R0,#+54
   \   00000014   0x8030             STRH     R0,[R6, #+0]
    247            zdpReq.dstAddrMode = APS_SHORT_ADDRESS;
   \   00000016   0x2002             MOVS     R0,#+2
   \   00000018   0x70B0             STRB     R0,[R6, #+2]
    248          
    249            zdpReq.dstAddress.shortAddress = NWK_GetShortAddr();
   \   0000001A   0x.... 0x....      BL       NWK_GetShortAddr
   \   0000001E   0x8130             STRH     R0,[R6, #+8]
    250          
    251            permit->permitDuration = args[0].uint8;
   \   00000020   0x0028             MOVS     R0,R5
   \   00000022   0x30D3             ADDS     R0,R0,#+211
   \   00000024   0x7821             LDRB     R1,[R4, #+0]
   \   00000026   0x7001             STRB     R1,[R0, #+0]
    252            permit->tcSignificance = 0x01;
   \   00000028   0x2101             MOVS     R1,#+1
   \   0000002A   0x7041             STRB     R1,[R0, #+1]
    253          
    254            ZDO_ZdpReq(&zdpReq);
   \   0000002C   0x0028             MOVS     R0,R5
   \   0000002E   0x.... 0x....      BL       ZDO_ZdpReq
    255          }
   \   00000032   0xBD70             POP      {R4-R6,PC}       ;; return
    256          #ifdef ZCL_THERMOSTAT_CLUSTER_INCLUDE_OPTIONAL_ATTRIBUTES
    257          /**************************************************************************//**
    258          \brief Processes Set Occupancy command
    259          
    260          \param[in] args - array of command arguments
    261          ******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    262          static void processSetOccupancyCmd(const ScanValue_t *args)
    263          { 
   \                     processSetOccupancyCmd: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    264            if (ZCL_SUCCESS_STATUS == thermostatSetOccupancy((ZCL_ThOccupancy_t)args[0].uint8))
   \   00000004   0x7820             LDRB     R0,[R4, #+0]
   \   00000006   0x.... 0x....      BL       thermostatSetOccupancy
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD104             BNE      ??processSetOccupancyCmd_0
    265              appSnprintf("Occupancy set to :%d\r\n",(ZCL_ThOccupancy_t)args[0].uint8);
   \   0000000E   0x7821             LDRB     R1,[R4, #+0]
   \   00000010   0x....             ADR.N    R0,?_46
   \   00000012   0x.... 0x....      BL       appSnprintf
   \   00000016   0xBD10             POP      {R4,PC}
    266            else
    267              appSnprintf("Occupancy not set: Invalid value\r\n");
   \                     ??processSetOccupancyCmd_0: (+1)
   \   00000018   0x....             ADR.N    R0,?_47
   \   0000001A   0x.... 0x....      BL       appSnprintf
    268          }
   \   0000001E   0xBD10             POP      {R4,PC}          ;; return
    269          #endif
    270          
    271          /**************************************************************************//**
    272          \brief Processes cluster attributes initialization to default
    273          
    274          \param[in] args - array of command arguments
    275          ******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    276          static void processAttrinitDefault(const ScanValue_t *args)
    277          { 
   \                     processAttrinitDefault: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    278            if(THERMOSTAT_CLUSTER_ID == args[0].uint16)
   \   00000002   0x8800             LDRH     R0,[R0, #+0]
   \   00000004   0x....             LDR      R1,??DataTable65_2  ;; 0x201
   \   00000006   0x4288             CMP      R0,R1
   \   00000008   0xD102             BNE      ??processAttrinitDefault_0
    279              thermostatClusterInitAttributes();
   \   0000000A   0x.... 0x....      BL       thermostatClusterInitAttributes
   \   0000000E   0xBD01             POP      {R0,PC}
    280            else
    281              appSnprintf("Invalid Cluster ID\r\n");
   \                     ??processAttrinitDefault_0: (+1)
   \   00000010   0x....             ADR.N    R0,?_48
   \   00000012   0x.... 0x....      BL       appSnprintf
    282          }
   \   00000016   0xBD01             POP      {R0,PC}          ;; return
    283          
    284          /**************************************************************************//**
    285          \brief ZDP permit joining response callback
    286          
    287          \param[in] leaveResp - pointer to response structure
    288          
    289          \return none
    290          ******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    291          static void zdoPermitJoiningResponse(ZDO_ZdpResp_t *resp)
    292          {
   \                     zdoPermitJoiningResponse: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
   \   00000004   0x0004             MOVS     R4,R0
    293            LOG_STRING(permitJoinDoneStr, "setPermitJoinRsp %d\r\n");
   \   00000006   0x4668             MOV      R0,SP
   \   00000008   0x....             ADR.N    R1,?_49
   \   0000000A   0x2218             MOVS     R2,#+24
   \   0000000C   0x.... 0x....      BL       __aeabi_memcpy4
    294            appSnprintf(permitJoinDoneStr, resp->respPayload.status);
   \   00000010   0x7E61             LDRB     R1,[R4, #+25]
   \   00000012   0x4668             MOV      R0,SP
   \   00000014   0x.... 0x....      BL       appSnprintf
    295          }
   \   00000018   0xB006             ADD      SP,SP,#+24
   \   0000001A   0xBD10             POP      {R4,PC}          ;; return
    296          
    297          /**************************************************************************//**
    298          \brief Processes Restart Network command
    299          
    300          \param[in] args - array of command arguments
    301          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    302          static void processRestartNwkCmd(const ScanValue_t *args)
    303          {
   \                     processRestartNwkCmd: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    304            CS_WriteParameter(CS_CHANNEL_MASK_ID, &(uint32_t){1ul << args[0].uint8});
   \   00000002   0x2101             MOVS     R1,#+1
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x4081             LSLS     R1,R1,R0
   \   00000008   0x9100             STR      R1,[SP, #+0]
   \   0000000A   0x4669             MOV      R1,SP
   \   0000000C   0x2019             MOVS     R0,#+25
   \   0000000E   0x.... 0x....      BL       CS_WriteParameter
    305          
    306            appRestart(false);
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x.... 0x....      BL       appRestart
    307          }
   \   00000018   0xBD01             POP      {R0,PC}          ;; return
    308          
    309          /**************************************************************************//**
    310          \brief Processes SetOccupancyState command
    311          
    312          \param[in] args - array of command arguments
    313          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    314          static void processSetOccupancyStateCmd(const ScanValue_t *args)
    315          {
   \                     processSetOccupancyStateCmd: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    316            occupancySensingInitiateSetOccupancyState(args[0].uint8);
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD000             BEQ      ??processSetOccupancyStateCmd_0
   \   00000008   0x2001             MOVS     R0,#+1
   \                     ??processSetOccupancyStateCmd_0: (+1)
   \   0000000A   0x.... 0x....      BL       occupancySensingInitiateSetOccupancyState
    317          }
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return
    318          
    319          /**************************************************************************//**
    320          \brief Processes SetOccupancySensorType command
    321          
    322          \param[in] args - array of command arguments
    323          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    324          static void processSetSensorTypeCmd(const ScanValue_t *args)
    325          {
   \                     processSetSensorTypeCmd: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    326            occupancySensingSetSensorType(args[0].uint8);
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x.... 0x....      BL       occupancySensingSetSensorType
    327          }
   \   00000008   0xBD01             POP      {R0,PC}          ;; return
    328          
    329          /**************************************************************************//**
    330          \brief Processes Read attribute command
    331          
    332          \param[in] args - array of command arguments
    333          ******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    334          static void processReadAttrCmd(const ScanValue_t *args)
    335          {
   \                     processReadAttrCmd: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB08A             SUB      SP,SP,#+40
   \   00000004   0x0004             MOVS     R4,R0
    336            ZCL_Cluster_t *cluster = ZCL_GetCluster(APP_SRC_ENDPOINT_ID, args[3].uint16 /* cluster id */, ZCL_CLUSTER_SIDE_CLIENT);
    337          
    338            if (!cluster)
   \   00000006   0x2201             MOVS     R2,#+1
   \   00000008   0x89A1             LDRH     R1,[R4, #+12]
   \   0000000A   0x2019             MOVS     R0,#+25
   \   0000000C   0x.... 0x....      BL       ZCL_GetCluster
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD104             BNE      ??processReadAttrCmd_0
    339            {
    340              LOG_STRING(unsupportedClusterIdStr, "Unsupported Client Cluster Id \r\n");
   \   00000014   0x4668             MOV      R0,SP
   \   00000016   0xBF00             Nop      
   \   00000018   0x....             ADR.N    R1,?_50
   \   0000001A   0x2224             MOVS     R2,#+36
   \   0000001C   0xE03A             B        ??processReadAttrCmd_1
    341              appSnprintf(unsupportedClusterIdStr);
    342              return;
    343            }
    344          
    345            switch(args[3].uint16) //cluster Id
   \                     ??processReadAttrCmd_0: (+1)
   \   0000001E   0x89A0             LDRH     R0,[R4, #+12]
   \   00000020   0x380A             SUBS     R0,R0,#+10
   \   00000022   0xD012             BEQ      ??processReadAttrCmd_2
   \   00000024   0x21FE             MOVS     R1,#+254
   \   00000026   0x0089             LSLS     R1,R1,#+2        ;; #+1016
   \   00000028   0x1A40             SUBS     R0,R0,R1
   \   0000002A   0xD024             BEQ      ??processReadAttrCmd_3
   \   0000002C   0x1EC0             SUBS     R0,R0,#+3
   \   0000002E   0xD017             BEQ      ??processReadAttrCmd_4
   \   00000030   0x1E40             SUBS     R0,R0,#+1
   \   00000032   0xD12B             BNE      ??processReadAttrCmd_5
    346            {
    347              case OCCUPANCY_SENSING_CLUSTER_ID:
    348                occupancySensingReadAttribute(determineAddressMode(args), args[1].uint16, args[2].uint8,
    349                  args[4].uint16, NULL);
   \   00000034   0x0020             MOVS     R0,R4
   \   00000036   0x.... 0x....      BL       determineAddressMode
   \   0000003A   0x2100             MOVS     R1,#+0
   \   0000003C   0x9100             STR      R1,[SP, #+0]
   \   0000003E   0x8A23             LDRH     R3,[R4, #+16]
   \   00000040   0x7A22             LDRB     R2,[R4, #+8]
   \   00000042   0x88A1             LDRH     R1,[R4, #+4]
   \   00000044   0x.... 0x....      BL       occupancySensingReadAttribute
    350                break;
   \   00000048   0xE029             B        ??processReadAttrCmd_6
    351              case TIME_CLUSTER_ID:
    352                timeReadAttribute(determineAddressMode(args), args[1].uint16, args[2].uint8,
    353                  args[4].uint16, NULL);
   \                     ??processReadAttrCmd_2: (+1)
   \   0000004A   0x0020             MOVS     R0,R4
   \   0000004C   0x.... 0x....      BL       determineAddressMode
   \   00000050   0x2100             MOVS     R1,#+0
   \   00000052   0x9100             STR      R1,[SP, #+0]
   \   00000054   0x8A23             LDRH     R3,[R4, #+16]
   \   00000056   0x7A22             LDRB     R2,[R4, #+8]
   \   00000058   0x88A1             LDRH     R1,[R4, #+4]
   \   0000005A   0x.... 0x....      BL       timeReadAttribute
    354                break;
   \   0000005E   0xE01E             B        ??processReadAttrCmd_6
    355             case HUMIDITY_MEASUREMENT_CLUSTER_ID:
    356                humidityMeasurementReadAttribute(determineAddressMode(args), args[1].uint16, args[2].uint8,
    357                  args[4].uint16, NULL);
   \                     ??processReadAttrCmd_4: (+1)
   \   00000060   0x0020             MOVS     R0,R4
   \   00000062   0x.... 0x....      BL       determineAddressMode
   \   00000066   0x2100             MOVS     R1,#+0
   \   00000068   0x9100             STR      R1,[SP, #+0]
   \   0000006A   0x8A23             LDRH     R3,[R4, #+16]
   \   0000006C   0x7A22             LDRB     R2,[R4, #+8]
   \   0000006E   0x88A1             LDRH     R1,[R4, #+4]
   \   00000070   0x.... 0x....      BL       humidityMeasurementReadAttribute
    358                break;
   \   00000074   0xE013             B        ??processReadAttrCmd_6
    359             case TEMPERATURE_MEASUREMENT_CLUSTER_ID:
    360                thTemperatureMeasurementReadAttribute(determineAddressMode(args), args[1].uint16, args[2].uint8,
    361                  args[4].uint16, NULL);
   \                     ??processReadAttrCmd_3: (+1)
   \   00000076   0x0020             MOVS     R0,R4
   \   00000078   0x.... 0x....      BL       determineAddressMode
   \   0000007C   0x2100             MOVS     R1,#+0
   \   0000007E   0x9100             STR      R1,[SP, #+0]
   \   00000080   0x8A23             LDRH     R3,[R4, #+16]
   \   00000082   0x7A22             LDRB     R2,[R4, #+8]
   \   00000084   0x88A1             LDRH     R1,[R4, #+4]
   \   00000086   0x.... 0x....      BL       thTemperatureMeasurementReadAttribute
    362                break;
   \   0000008A   0xE008             B        ??processReadAttrCmd_6
    363          
    364              default:
    365                {
    366                  LOG_STRING(unsupportedClusterIdStr, "Unsupported Cluster Id \r\n");
   \                     ??processReadAttrCmd_5: (+1)
   \   0000008C   0x4668             MOV      R0,SP
   \   0000008E   0xBF00             Nop      
   \   00000090   0x....             ADR.N    R1,?_51
   \   00000092   0x221C             MOVS     R2,#+28
   \                     ??processReadAttrCmd_1: (+1)
   \   00000094   0x.... 0x....      BL       __aeabi_memcpy4
    367                  appSnprintf(unsupportedClusterIdStr);
   \   00000098   0x4668             MOV      R0,SP
   \   0000009A   0x.... 0x....      BL       appSnprintf
    368                }
    369                break;
    370            }
    371          }
   \                     ??processReadAttrCmd_6: (+1)
   \   0000009E   0xB00A             ADD      SP,SP,#+40
   \   000000A0   0xBD10             POP      {R4,PC}          ;; return
    372          
    373          /**************************************************************************//**
    374          \brief Processes Trigger Alarm command
    375          
    376          \param[in] args - array of command arguments
    377          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    378          static void processTriggerAlarmCmd(const ScanValue_t *args)
    379          {
    380            if (THERMOSTAT_CLUSTER_ID == args[0].uint16)
   \                     processTriggerAlarmCmd: (+1)
   \   00000000   0x8801             LDRH     R1,[R0, #+0]
   \   00000002   0x....             LDR      R2,??DataTable65_2  ;; 0x201
   \   00000004   0x4291             CMP      R1,R2
   \   00000006   0xD000             BEQ      ??processTriggerAlarmCmd_0
   \   00000008   0x4770             BX       LR
    381              thermostatSetAlarmCondition(args[1].uint8, (bool)args[2].uint8);
   \                     ??processTriggerAlarmCmd_0: (+1)
   \   0000000A   0xB580             PUSH     {R7,LR}
   \   0000000C   0x7A01             LDRB     R1,[R0, #+8]
   \   0000000E   0x2900             CMP      R1,#+0
   \   00000010   0xD000             BEQ      ??processTriggerAlarmCmd_1
   \   00000012   0x2101             MOVS     R1,#+1
   \                     ??processTriggerAlarmCmd_1: (+1)
   \   00000014   0x7900             LDRB     R0,[R0, #+4]
   \   00000016   0x.... 0x....      BL       thermostatSetAlarmCondition
    382          }
   \   0000001A   0xBD01             POP      {R0,PC}          ;; return
    383          
    384          /**************************************************************************//**
    385          \brief Processes set alarm mask command
    386          
    387          \param[in] args - array of command arguments
    388          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    389          static void processSetAlarmMaskCmd(const ScanValue_t *args)
    390          {
    391            if (THERMOSTAT_CLUSTER_ID == args[0].uint16)
   \                     processSetAlarmMaskCmd: (+1)
   \   00000000   0x8801             LDRH     R1,[R0, #+0]
   \   00000002   0x....             LDR      R2,??DataTable65_2  ;; 0x201
   \   00000004   0x4291             CMP      R1,R2
   \   00000006   0xD000             BEQ      ??processSetAlarmMaskCmd_0
   \   00000008   0x4770             BX       LR
    392              thermostatSetAlarmMask(args[1].uint8);
   \                     ??processSetAlarmMaskCmd_0: (+1)
   \   0000000A   0xB580             PUSH     {R7,LR}
   \   0000000C   0x7900             LDRB     R0,[R0, #+4]
   \   0000000E   0x.... 0x....      BL       thermostatSetAlarmMask
    393          }
   \   00000012   0xBD01             POP      {R0,PC}          ;; return
    394          /**************************************************************************//**
    395          \brief Determines address mode for command
    396          
    397          \param[in] arg - pointer to command argument with address mode string
    398          
    399          \returns address mode
    400          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    401          static APS_AddrMode_t determineAddressMode(const ScanValue_t *arg)
    402          {
   \                     determineAddressMode: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    403            if (!memcmp("-g", arg->str, 2))
   \   00000002   0x6804             LDR      R4,[R0, #+0]
   \   00000004   0x2202             MOVS     R2,#+2
   \   00000006   0x0021             MOVS     R1,R4
   \   00000008   0x....             ADR      R0,??DataTable66  ;; 0x2D, 0x67, 0x00, 0x00
   \   0000000A   0x.... 0x....      BL       memcmp
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD101             BNE      ??determineAddressMode_0
    404              return APS_GROUP_ADDRESS;
   \   00000012   0x2001             MOVS     R0,#+1
   \   00000014   0xBD10             POP      {R4,PC}
    405          
    406            if (!memcmp("-b", arg->str, 2))
   \                     ??determineAddressMode_0: (+1)
   \   00000016   0x2202             MOVS     R2,#+2
   \   00000018   0x0021             MOVS     R1,R4
   \   0000001A   0x....             ADR      R0,??DataTable66_1  ;; 0x2D, 0x62, 0x00, 0x00
   \   0000001C   0x.... 0x....      BL       memcmp
   \   00000020   0x2800             CMP      R0,#+0
   \   00000022   0xD000             BEQ      ??determineAddressMode_1
    407              return APS_NO_ADDRESS;
    408          
    409            return APS_SHORT_ADDRESS;
   \   00000024   0x2002             MOVS     R0,#+2
   \                     ??determineAddressMode_1: (+1)
   \   00000026   0xBD10             POP      {R4,PC}          ;; return
    410          }
    411          
    412          /**************************************************************************//**
    413          \brief Processes Write attribute command
    414          
    415          \param[in] args - array of command arguments
    416          ******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    417          static void processWriteAttrCmd(const ScanValue_t *args)
    418          {
   \                     processWriteAttrCmd: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB08A             SUB      SP,SP,#+40
   \   00000004   0x0004             MOVS     R4,R0
    419            ZCL_Cluster_t *cluster = ZCL_GetCluster(APP_SRC_ENDPOINT_ID, args[3].uint16 /* cluster id */, ZCL_CLUSTER_SIDE_CLIENT);
    420            if (!cluster)
   \   00000006   0x2201             MOVS     R2,#+1
   \   00000008   0x89A1             LDRH     R1,[R4, #+12]
   \   0000000A   0x2019             MOVS     R0,#+25
   \   0000000C   0x.... 0x....      BL       ZCL_GetCluster
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD104             BNE      ??processWriteAttrCmd_0
    421            {
    422              LOG_STRING(unsupportedClusterIdStr, "Unsupported Client Cluster Id \r\n");
   \   00000014   0x4668             MOV      R0,SP
   \   00000016   0xBF00             Nop      
   \   00000018   0x....             ADR.N    R1,?_54
   \   0000001A   0x2224             MOVS     R2,#+36
   \   0000001C   0xE056             B        ??processWriteAttrCmd_1
    423              appSnprintf(unsupportedClusterIdStr);
    424              return;
    425            }
    426            switch(args[3].uint16) //cluster Id
   \                     ??processWriteAttrCmd_0: (+1)
   \   0000001E   0x89A0             LDRH     R0,[R4, #+12]
   \   00000020   0x380A             SUBS     R0,R0,#+10
   \   00000022   0xD019             BEQ      ??processWriteAttrCmd_2
   \   00000024   0x21FE             MOVS     R1,#+254
   \   00000026   0x0089             LSLS     R1,R1,#+2        ;; #+1016
   \   00000028   0x1A40             SUBS     R0,R0,R1
   \   0000002A   0xD039             BEQ      ??processWriteAttrCmd_3
   \   0000002C   0x1EC0             SUBS     R0,R0,#+3
   \   0000002E   0xD025             BEQ      ??processWriteAttrCmd_4
   \   00000030   0x1E40             SUBS     R0,R0,#+1
   \   00000032   0xD147             BNE      ??processWriteAttrCmd_5
    427            { 
    428              case OCCUPANCY_SENSING_CLUSTER_ID:
    429                occupancySensingWriteAttribute(determineAddressMode(args), args[1].uint16, args[2].uint8,
    430                  args[4].uint16, args[5].uint8, NULL, (void *)&args[6].uint8, args[7].uint8);
   \   00000034   0x0020             MOVS     R0,R4
   \   00000036   0x.... 0x....      BL       determineAddressMode
   \   0000003A   0x7F21             LDRB     R1,[R4, #+28]
   \   0000003C   0x9103             STR      R1,[SP, #+12]
   \   0000003E   0x0021             MOVS     R1,R4
   \   00000040   0x3118             ADDS     R1,R1,#+24
   \   00000042   0x9102             STR      R1,[SP, #+8]
   \   00000044   0x2100             MOVS     R1,#+0
   \   00000046   0x9101             STR      R1,[SP, #+4]
   \   00000048   0x7D21             LDRB     R1,[R4, #+20]
   \   0000004A   0x9100             STR      R1,[SP, #+0]
   \   0000004C   0x8A23             LDRH     R3,[R4, #+16]
   \   0000004E   0x7A22             LDRB     R2,[R4, #+8]
   \   00000050   0x88A1             LDRH     R1,[R4, #+4]
   \   00000052   0x.... 0x....      BL       occupancySensingWriteAttribute
    431                break;
   \   00000056   0xE03E             B        ??processWriteAttrCmd_6
    432              case TIME_CLUSTER_ID:
    433                if(args[5].uint8 == ZCL_8BIT_BITMAP_DATA_TYPE_ID)
    434                {
    435                  timeWriteAttribute(determineAddressMode(args), args[1].uint16, args[2].uint8,
    436                    args[4].uint16, args[5].uint8, NULL, (void *)&args[6].uint8, args[7].uint8);
    437                }
    438                else
    439                {
    440                  timeWriteAttribute(determineAddressMode(args), args[1].uint16, args[2].uint8,
    441                    args[4].uint16, args[5].uint8, NULL, (void *)&args[6].uint32, args[7].uint8);        
   \                     ??processWriteAttrCmd_2: (+1)
   \   00000058   0x0020             MOVS     R0,R4
   \   0000005A   0x.... 0x....      BL       determineAddressMode
   \   0000005E   0x7F21             LDRB     R1,[R4, #+28]
   \   00000060   0x9103             STR      R1,[SP, #+12]
   \   00000062   0x0021             MOVS     R1,R4
   \   00000064   0x3118             ADDS     R1,R1,#+24
   \   00000066   0x9102             STR      R1,[SP, #+8]
   \   00000068   0x2100             MOVS     R1,#+0
   \   0000006A   0x9101             STR      R1,[SP, #+4]
   \   0000006C   0x7D21             LDRB     R1,[R4, #+20]
   \   0000006E   0x9100             STR      R1,[SP, #+0]
   \   00000070   0x8A23             LDRH     R3,[R4, #+16]
   \   00000072   0x7A22             LDRB     R2,[R4, #+8]
   \   00000074   0x88A1             LDRH     R1,[R4, #+4]
   \   00000076   0x.... 0x....      BL       timeWriteAttribute
   \   0000007A   0xE02C             B        ??processWriteAttrCmd_6
    442                }
    443                break;
    444              case HUMIDITY_MEASUREMENT_CLUSTER_ID:
    445                humidityMeasurementWriteAttribute(determineAddressMode(args), args[1].uint16, args[2].uint8,
    446                  args[4].uint16, args[5].uint8, NULL, (void *)&args[6].uint8, args[7].uint8);
   \                     ??processWriteAttrCmd_4: (+1)
   \   0000007C   0x0020             MOVS     R0,R4
   \   0000007E   0x.... 0x....      BL       determineAddressMode
   \   00000082   0x7F21             LDRB     R1,[R4, #+28]
   \   00000084   0x9103             STR      R1,[SP, #+12]
   \   00000086   0x0021             MOVS     R1,R4
   \   00000088   0x3118             ADDS     R1,R1,#+24
   \   0000008A   0x9102             STR      R1,[SP, #+8]
   \   0000008C   0x2100             MOVS     R1,#+0
   \   0000008E   0x9101             STR      R1,[SP, #+4]
   \   00000090   0x7D21             LDRB     R1,[R4, #+20]
   \   00000092   0x9100             STR      R1,[SP, #+0]
   \   00000094   0x8A23             LDRH     R3,[R4, #+16]
   \   00000096   0x7A22             LDRB     R2,[R4, #+8]
   \   00000098   0x88A1             LDRH     R1,[R4, #+4]
   \   0000009A   0x.... 0x....      BL       humidityMeasurementWriteAttribute
    447                break;
   \   0000009E   0xE01A             B        ??processWriteAttrCmd_6
    448              case TEMPERATURE_MEASUREMENT_CLUSTER_ID:
    449                thTemperatureMeasurementWriteAttribute(determineAddressMode(args), args[1].uint16, args[2].uint8,
    450                  args[4].uint16, args[5].uint8, NULL, (void *)&args[6].uint8, args[7].uint8);
   \                     ??processWriteAttrCmd_3: (+1)
   \   000000A0   0x0020             MOVS     R0,R4
   \   000000A2   0x.... 0x....      BL       determineAddressMode
   \   000000A6   0x7F21             LDRB     R1,[R4, #+28]
   \   000000A8   0x9103             STR      R1,[SP, #+12]
   \   000000AA   0x0021             MOVS     R1,R4
   \   000000AC   0x3118             ADDS     R1,R1,#+24
   \   000000AE   0x9102             STR      R1,[SP, #+8]
   \   000000B0   0x2100             MOVS     R1,#+0
   \   000000B2   0x9101             STR      R1,[SP, #+4]
   \   000000B4   0x7D21             LDRB     R1,[R4, #+20]
   \   000000B6   0x9100             STR      R1,[SP, #+0]
   \   000000B8   0x8A23             LDRH     R3,[R4, #+16]
   \   000000BA   0x7A22             LDRB     R2,[R4, #+8]
   \   000000BC   0x88A1             LDRH     R1,[R4, #+4]
   \   000000BE   0x.... 0x....      BL       thTemperatureMeasurementWriteAttribute
    451                break;
   \   000000C2   0xE008             B        ??processWriteAttrCmd_6
    452              default:
    453                {
    454                  LOG_STRING(unsupportedClusterIdStr, "Unsupported Cluster Id \r\n");
   \                     ??processWriteAttrCmd_5: (+1)
   \   000000C4   0x4668             MOV      R0,SP
   \   000000C6   0xBF00             Nop      
   \   000000C8   0x....             ADR.N    R1,?_55
   \   000000CA   0x221C             MOVS     R2,#+28
   \                     ??processWriteAttrCmd_1: (+1)
   \   000000CC   0x.... 0x....      BL       __aeabi_memcpy4
    455                  appSnprintf(unsupportedClusterIdStr);
   \   000000D0   0x4668             MOV      R0,SP
   \   000000D2   0x.... 0x....      BL       appSnprintf
    456                }
    457            }
    458          }
   \                     ??processWriteAttrCmd_6: (+1)
   \   000000D6   0xB00A             ADD      SP,SP,#+40
   \   000000D8   0xBD10             POP      {R4,PC}          ;; return
    459          
    460          /**************************************************************************//**
    461          \brief Processes Configure specified cluster attribute reporting command
    462          
    463          \param[in] args - array of command arguments
    464          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    465          static void processConfigureReportingCmd(const ScanValue_t *args)
    466          {
   \                     processConfigureReportingCmd: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB08A             SUB      SP,SP,#+40
   \   00000004   0x0004             MOVS     R4,R0
    467            ZCL_Cluster_t *cluster = ZCL_GetCluster(APP_SRC_ENDPOINT_ID, args[3].uint16 /* cluster id */, ZCL_CLUSTER_SIDE_CLIENT);
    468          
    469            if (!cluster)
   \   00000006   0x2201             MOVS     R2,#+1
   \   00000008   0x89A1             LDRH     R1,[R4, #+12]
   \   0000000A   0x2019             MOVS     R0,#+25
   \   0000000C   0x.... 0x....      BL       ZCL_GetCluster
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD103             BNE      ??processConfigureReportingCmd_0
    470            {
    471              LOG_STRING(unsupportedClusterIdStr, "Unsupported Client Cluster Id \r\n");
   \   00000014   0x4668             MOV      R0,SP
   \   00000016   0x....             LDR      R1,??DataTable66_2
   \   00000018   0x2224             MOVS     R2,#+36
   \   0000001A   0xE037             B        ??processConfigureReportingCmd_1
    472              appSnprintf(unsupportedClusterIdStr);
    473              return;
    474            }
    475            switch(args[3].uint16) //cluster Id
   \                     ??processConfigureReportingCmd_0: (+1)
   \   0000001C   0x89A0             LDRH     R0,[R4, #+12]
   \   0000001E   0x....             LDR      R1,??DataTable66_3  ;; 0x402
   \   00000020   0x1A40             SUBS     R0,R0,R1
   \   00000022   0xD021             BEQ      ??processConfigureReportingCmd_2
   \   00000024   0x1EC0             SUBS     R0,R0,#+3
   \   00000026   0xD010             BEQ      ??processConfigureReportingCmd_3
   \   00000028   0x1E40             SUBS     R0,R0,#+1
   \   0000002A   0xD12C             BNE      ??processConfigureReportingCmd_4
    476            {
    477              case OCCUPANCY_SENSING_CLUSTER_ID:
    478                occupancySensingConfigureReporting(determineAddressMode(args), args[1].uint16, args[2].uint8,
    479                  args[4].uint16, args[5].uint8, args[6].uint16, args[7].uint16);
   \   0000002C   0x0020             MOVS     R0,R4
   \   0000002E   0x.... 0x....      BL       determineAddressMode
   \   00000032   0x8BA1             LDRH     R1,[R4, #+28]
   \   00000034   0x9102             STR      R1,[SP, #+8]
   \   00000036   0x8B21             LDRH     R1,[R4, #+24]
   \   00000038   0x9101             STR      R1,[SP, #+4]
   \   0000003A   0x7D21             LDRB     R1,[R4, #+20]
   \   0000003C   0x9100             STR      R1,[SP, #+0]
   \   0000003E   0x8A23             LDRH     R3,[R4, #+16]
   \   00000040   0x7A22             LDRB     R2,[R4, #+8]
   \   00000042   0x88A1             LDRH     R1,[R4, #+4]
   \   00000044   0x.... 0x....      BL       occupancySensingConfigureReporting
    480                break;
   \   00000048   0xE025             B        ??processConfigureReportingCmd_5
    481              case HUMIDITY_MEASUREMENT_CLUSTER_ID:
    482                humidityMeasurementConfigureReporting(determineAddressMode(args), args[1].uint16, args[2].uint8,
    483                  args[4].uint16, args[5].uint8, args[6].uint16, args[7].uint16);
   \                     ??processConfigureReportingCmd_3: (+1)
   \   0000004A   0x0020             MOVS     R0,R4
   \   0000004C   0x.... 0x....      BL       determineAddressMode
   \   00000050   0x8BA1             LDRH     R1,[R4, #+28]
   \   00000052   0x9102             STR      R1,[SP, #+8]
   \   00000054   0x8B21             LDRH     R1,[R4, #+24]
   \   00000056   0x9101             STR      R1,[SP, #+4]
   \   00000058   0x7D21             LDRB     R1,[R4, #+20]
   \   0000005A   0x9100             STR      R1,[SP, #+0]
   \   0000005C   0x8A23             LDRH     R3,[R4, #+16]
   \   0000005E   0x7A22             LDRB     R2,[R4, #+8]
   \   00000060   0x88A1             LDRH     R1,[R4, #+4]
   \   00000062   0x.... 0x....      BL       humidityMeasurementConfigureReporting
    484                break;
   \   00000066   0xE016             B        ??processConfigureReportingCmd_5
    485              case TEMPERATURE_MEASUREMENT_CLUSTER_ID:
    486                thTemperatureMeasurementConfigureReporting(determineAddressMode(args), args[1].uint16, args[2].uint8,
    487                  args[4].uint16, args[5].uint8, args[6].uint16, args[7].uint16);
   \                     ??processConfigureReportingCmd_2: (+1)
   \   00000068   0x0020             MOVS     R0,R4
   \   0000006A   0x.... 0x....      BL       determineAddressMode
   \   0000006E   0x8BA1             LDRH     R1,[R4, #+28]
   \   00000070   0x9102             STR      R1,[SP, #+8]
   \   00000072   0x8B21             LDRH     R1,[R4, #+24]
   \   00000074   0x9101             STR      R1,[SP, #+4]
   \   00000076   0x7D21             LDRB     R1,[R4, #+20]
   \   00000078   0x9100             STR      R1,[SP, #+0]
   \   0000007A   0x8A23             LDRH     R3,[R4, #+16]
   \   0000007C   0x7A22             LDRB     R2,[R4, #+8]
   \   0000007E   0x88A1             LDRH     R1,[R4, #+4]
   \   00000080   0x.... 0x....      BL       thTemperatureMeasurementConfigureReporting
    488                break;
   \   00000084   0xE007             B        ??processConfigureReportingCmd_5
    489              default:
    490                {
    491                  LOG_STRING(unsupportedClusterIdStr, "Unsupported Cluster Id \r\n");
   \                     ??processConfigureReportingCmd_4: (+1)
   \   00000086   0x4668             MOV      R0,SP
   \   00000088   0x....             LDR      R1,??DataTable66_4
   \   0000008A   0x221C             MOVS     R2,#+28
   \                     ??processConfigureReportingCmd_1: (+1)
   \   0000008C   0x.... 0x....      BL       __aeabi_memcpy4
    492                  appSnprintf(unsupportedClusterIdStr);
   \   00000090   0x4668             MOV      R0,SP
   \   00000092   0x.... 0x....      BL       appSnprintf
    493                }
    494                break;
    495            }
    496          }
   \                     ??processConfigureReportingCmd_5: (+1)
   \   00000096   0xB00A             ADD      SP,SP,#+40
   \   00000098   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ?_42:
   \   00000000   0x43 0x6F          DC8 "Commands: \015\012"
   \              0x6D 0x6D    
   \              0x61 0x6E    
   \              0x64 0x73    
   \              0x3A 0x20    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_43:
   \   00000000   0x25 0x73          DC8 "%s\015\012"
   \              0x0D 0x0A    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_44:
   \   00000000   0x25 0x30          DC8 "%04x\015\012"
   \              0x34 0x78    
   \              0x0D 0x0A    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_45:
   \   00000000   0x44 0x65          DC8 "DeviceType = %d\015\012"
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x54 0x79    
   \              0x70 0x65    
   \              0x20 0x3D    
   \              0x20 0x25    
   \              0x64 0x0D    
   \              0x0A 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_46:
   \   00000000   0x4F 0x63          DC8 "Occupancy set to :%d\015\012"
   \              0x63 0x75    
   \              0x70 0x61    
   \              0x6E 0x63    
   \              0x79 0x20    
   \              0x73 0x65    
   \              0x74 0x20    
   \              0x74 0x6F    
   \              0x20 0x3A    
   \              0x25 0x64    
   \              0x0D 0x0A    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_47:
   \   00000000   0x4F 0x63          DC8 "Occupancy not set: Invalid value\015\012"
   \              0x63 0x75    
   \              0x70 0x61    
   \              0x6E 0x63    
   \              0x79 0x20    
   \              0x6E 0x6F    
   \              0x74 0x20    
   \              0x73 0x65    
   \              0x74 0x3A    
   \              0x20 0x49    
   \              0x6E 0x76    
   \              0x61 0x6C    
   \              0x69 0x64    
   \              0x20 0x76    
   \              0x61 0x6C    
   \              0x75 0x65    
   \              0x0D 0x0A    
   \              0x00         
   \   00000023   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62:
   \   00000000   0x........         DC32     SYS_taskMask

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_1:
   \   00000000   0x........         DC32     readBuffer

   \                                 In section .text, align 4, keep-with-next
   \                     ?_48:
   \   00000000   0x49 0x6E          DC8 "Invalid Cluster ID\015\012"
   \              0x76 0x61    
   \              0x6C 0x69    
   \              0x64 0x20    
   \              0x43 0x6C    
   \              0x75 0x73    
   \              0x74 0x65    
   \              0x72 0x20    
   \              0x49 0x44    
   \              0x0D 0x0A    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x68 0x65          DC8 "help"
   \              0x6C 0x70    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 1, keep-with-next
   \                     ?_1:
   \   00000000   0x00               DC8 ""

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x2D 0x3E          DC8 "->Show help you're reading now:  help\015\012"
   \              0x53 0x68    
   \              0x6F 0x77    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x70 0x20    
   \              0x79 0x6F    
   \              0x75 0x27    
   \              0x72 0x65    
   \              0x20 0x72    
   \              0x65 0x61    
   \              0x64 0x69    
   \              0x6E 0x67    
   \              0x20 0x6E    
   \              0x6F 0x77    
   \              0x3A 0x20    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x70 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_3:
   \   00000000   0x72 0x65          DC8 "reset"
   \              0x73 0x65    
   \              0x74 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_4:
   \   00000000   0x2D 0x3E          DC8 "->Reset device\015\012"
   \              0x52 0x65    
   \              0x73 0x65    
   \              0x74 0x20    
   \              0x64 0x65    
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x0D 0x0A    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_5:
   \   00000000   0x67 0x65          DC8 "getNetworkAddress"
   \              0x74 0x4E    
   \              0x65 0x74    
   \              0x77 0x6F    
   \              0x72 0x6B    
   \              0x41 0x64    
   \              0x64 0x72    
   \              0x65 0x73    
   \              0x73 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_6:
   \   00000000   0x2D 0x3E          DC8 "-> Returns network address: getNetworkAddress\015\012"
   \              0x20 0x52    
   \              0x65 0x74    
   \              0x75 0x72    
   \              0x6E 0x73    
   \              0x20 0x6E    
   \              0x65 0x74    
   \              0x77 0x6F    
   \              0x72 0x6B    
   \              0x20 0x61    
   \              0x64 0x64    
   \              0x72 0x65    
   \              0x73 0x73    
   \              0x3A 0x20    
   \              0x67 0x65    
   \              0x74 0x4E    
   \              0x65 0x74    
   \              0x77 0x6F    
   \              0x72 0x6B    
   \              0x41 0x64    
   \              0x64 0x72    
   \              0x65 0x73    
   \              0x73 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_7:
   \   00000000   0x69 0x6E          DC8 "invokeEZMode"
   \              0x76 0x6F    
   \              0x6B 0x65    
   \              0x45 0x5A    
   \              0x4D 0x6F    
   \              0x64 0x65    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_8:
   \   00000000   0x2D 0x3E          DC8 "->Start finding and binding process\015\012"
   \              0x53 0x74    
   \              0x61 0x72    
   \              0x74 0x20    
   \              0x66 0x69    
   \              0x6E 0x64    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x61 0x6E    
   \              0x64 0x20    
   \              0x62 0x69    
   \              0x6E 0x64    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x70 0x72    
   \              0x6F 0x63    
   \              0x65 0x73    
   \              0x73 0x0D    
   \              0x0A 0x00    
   \   00000026   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_9:
   \   00000000   0x72 0x65          DC8 "resetToFN"
   \              0x73 0x65    
   \              0x74 0x54    
   \              0x6F 0x46    
   \              0x4E 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_10:
   \   00000000   0x2D 0x3E          DC8 "->Reset to factory fresh settings: resetToFN\015\012"
   \              0x52 0x65    
   \              0x73 0x65    
   \              0x74 0x20    
   \              0x74 0x6F    
   \              0x20 0x66    
   \              0x61 0x63    
   \              0x74 0x6F    
   \              0x72 0x79    
   \              0x20 0x66    
   \              0x72 0x65    
   \              0x73 0x68    
   \              0x20 0x73    
   \              0x65 0x74    
   \              0x74 0x69    
   \              0x6E 0x67    
   \              0x73 0x3A    
   \              0x20 0x72    
   \              0x65 0x73    
   \              0x65 0x74    
   \              0x54 0x6F    
   \              0x46 0x4E    
   \              0x0D 0x0A    
   \              0x00         
   \   0000002F   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_11:
   \   00000000   0x67 0x65          DC8 "getDeviceType"
   \              0x74 0x44    
   \              0x65 0x76    
   \              0x69 0x63    
   \              0x65 0x54    
   \              0x79 0x70    
   \              0x65 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_12:
   \   00000000   0x2D 0x3E          DC8 "-> Request for device type: getDeviceType\015\012"
   \              0x20 0x52    
   \              0x65 0x71    
   \              0x75 0x65    
   \              0x73 0x74    
   \              0x20 0x66    
   \              0x6F 0x72    
   \              0x20 0x64    
   \              0x65 0x76    
   \              0x69 0x63    
   \              0x65 0x20    
   \              0x74 0x79    
   \              0x70 0x65    
   \              0x3A 0x20    
   \              0x67 0x65    
   \              0x74 0x44    
   \              0x65 0x76    
   \              0x69 0x63    
   \              0x65 0x54    
   \              0x79 0x70    
   \              0x65 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_13:
   \   00000000   0x70 0x6F          DC8 "powerOff"
   \              0x77 0x65    
   \              0x72 0x4F    
   \              0x66 0x66    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_14:
   \   00000000   0x2D 0x3E          DC8 "-> Powers off device: powerOff\015\012"
   \              0x20 0x50    
   \              0x6F 0x77    
   \              0x65 0x72    
   \              0x73 0x20    
   \              0x6F 0x66    
   \              0x66 0x20    
   \              0x64 0x65    
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x3A 0x20    
   \              0x70 0x6F    
   \              0x77 0x65    
   \              0x72 0x4F    
   \              0x66 0x66    
   \              0x0D 0x0A    
   \              0x00         
   \   00000021   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_15:
   \   00000000   0x73 0x65          DC8 "setPermitJoin"
   \              0x74 0x50    
   \              0x65 0x72    
   \              0x6D 0x69    
   \              0x74 0x4A    
   \              0x6F 0x69    
   \              0x6E 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     ?_16:
   \   00000000   0x64 0x00          DC8 "d"

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_17:
   \   00000000   0x2D 0x3E          DC8 "-> Sets Permit Join: setPermitJoin [dur]\015\012"
   \              0x20 0x53    
   \              0x65 0x74    
   \              0x73 0x20    
   \              0x50 0x65    
   \              0x72 0x6D    
   \              0x69 0x74    
   \              0x20 0x4A    
   \              0x6F 0x69    
   \              0x6E 0x3A    
   \              0x20 0x73    
   \              0x65 0x74    
   \              0x50 0x65    
   \              0x72 0x6D    
   \              0x69 0x74    
   \              0x4A 0x6F    
   \              0x69 0x6E    
   \              0x20 0x5B    
   \              0x64 0x75    
   \              0x72 0x5D    
   \              0x0D 0x0A    
   \              0x00         
   \   0000002B   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_18:
   \   00000000   0x73 0x65          DC8 "setOccupancy"
   \              0x74 0x4F    
   \              0x63 0x63    
   \              0x75 0x70    
   \              0x61 0x6E    
   \              0x63 0x79    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_19:
   \   00000000   0x2D 0x3E          DC8 "-> Sets Occupancy [0- UnOccupied/1- Occupied]\015\012"
   \              0x20 0x53    
   \              0x65 0x74    
   \              0x73 0x20    
   \              0x4F 0x63    
   \              0x63 0x75    
   \              0x70 0x61    
   \              0x6E 0x63    
   \              0x79 0x20    
   \              0x5B 0x30    
   \              0x2D 0x20    
   \              0x55 0x6E    
   \              0x4F 0x63    
   \              0x63 0x75    
   \              0x70 0x69    
   \              0x65 0x64    
   \              0x2F 0x31    
   \              0x2D 0x20    
   \              0x4F 0x63    
   \              0x63 0x75    
   \              0x70 0x69    
   \              0x65 0x64    
   \              0x5D 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_20:
   \   00000000   0x63 0x6C          DC8 "clusterAttrInitDefault"
   \              0x75 0x73    
   \              0x74 0x65    
   \              0x72 0x41    
   \              0x74 0x74    
   \              0x72 0x49    
   \              0x6E 0x69    
   \              0x74 0x44    
   \              0x65 0x66    
   \              0x61 0x75    
   \              0x6C 0x74    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_21:
   \   00000000   0x2D 0x3E          DC8 2DH, 3EH, 20H, 49H, 6EH, 69H, 74H, 69H
   \              0x20 0x49    
   \              0x6E 0x69    
   \              0x74 0x69    
   \   00000008   0x61 0x6C          DC8 61H, 6CH, 69H, 7AH, 65H, 73H, 20H, 61H
   \              0x69 0x7A    
   \              0x65 0x73    
   \              0x20 0x61    
   \   00000010   0x6C 0x6C          DC8 6CH, 6CH, 20H, 61H, 74H, 74H, 72H, 69H
   \              0x20 0x61    
   \              0x74 0x74    
   \              0x72 0x69    
   \   00000018   0x62 0x75          DC8 62H, 75H, 74H, 65H, 73H, 20H, 74H, 6FH
   \              0x74 0x65    
   \              0x73 0x20    
   \              0x74 0x6F    
   \   00000020   0x20 0x64          DC8 20H, 64H, 65H, 66H, 61H, 75H, 6CH, 74H
   \              0x65 0x66    
   \              0x61 0x75    
   \              0x6C 0x74    
   \   00000028   0x20 0x76          DC8 20H, 76H, 61H, 6CH, 75H, 65H, 73H, 20H
   \              0x61 0x6C    
   \              0x75 0x65    
   \              0x73 0x20    
   \   00000030   0x5B 0x63          DC8 5BH, 63H, 6CH, 75H, 73H, 74H, 65H, 72H
   \              0x6C 0x75    
   \              0x73 0x74    
   \              0x65 0x72    
   \   00000038   0x49 0x44          DC8 49H, 44H, 5DH, 0DH, 0AH, 0
   \              0x5D 0x0D    
   \              0x0A 0x00    
   \   0000003E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_22:
   \   00000000   0x72 0x65          DC8 "restartNwk"
   \              0x73 0x74    
   \              0x61 0x72    
   \              0x74 0x4E    
   \              0x77 0x6B    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_23:
   \   00000000   0x2D 0x3E          DC8 2DH, 3EH, 20H, 52H, 65H, 73H, 74H, 61H
   \              0x20 0x52    
   \              0x65 0x73    
   \              0x74 0x61    
   \   00000008   0x72 0x74          DC8 72H, 74H, 73H, 20H, 6EH, 65H, 74H, 77H
   \              0x73 0x20    
   \              0x6E 0x65    
   \              0x74 0x77    
   \   00000010   0x6F 0x72          DC8 6FH, 72H, 6BH, 20H, 6FH, 6EH, 20H, 70H
   \              0x6B 0x20    
   \              0x6F 0x6E    
   \              0x20 0x70    
   \   00000018   0x61 0x72          DC8 61H, 72H, 74H, 69H, 63H, 75H, 6CH, 61H
   \              0x74 0x69    
   \              0x63 0x75    
   \              0x6C 0x61    
   \   00000020   0x72 0x20          DC8 72H, 20H, 63H, 68H, 61H, 6EH, 6EH, 65H
   \              0x63 0x68    
   \              0x61 0x6E    
   \              0x6E 0x65    
   \   00000028   0x6C 0x20          DC8 6CH, 20H, 5BH, 63H, 68H, 61H, 6EH, 6EH
   \              0x5B 0x63    
   \              0x68 0x61    
   \              0x6E 0x6E    
   \   00000030   0x65 0x6C          DC8 65H, 6CH, 5DH, 0DH, 0AH, 0
   \              0x5D 0x0D    
   \              0x0A 0x00    
   \   00000036   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_24:
   \   00000000   0x72 0x65          DC8 "readAttribute"
   \              0x61 0x64    
   \              0x41 0x74    
   \              0x74 0x72    
   \              0x69 0x62    
   \              0x75 0x74    
   \              0x65 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_25:
   \   00000000   0x73 0x64          DC8 "sdddd"
   \              0x64 0x64    
   \              0x64 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_26:
   \   00000000   0x2D 0x3E          DC8 2DH, 3EH, 52H, 65H, 61H, 64H, 20H, 41H
   \              0x52 0x65    
   \              0x61 0x64    
   \              0x20 0x41    
   \   00000008   0x74 0x74          DC8 74H, 74H, 72H, 69H, 62H, 75H, 74H, 65H
   \              0x72 0x69    
   \              0x62 0x75    
   \              0x74 0x65    
   \   00000010   0x20 0x66          DC8 20H, 66H, 6FH, 72H, 20H, 73H, 70H, 65H
   \              0x6F 0x72    
   \              0x20 0x73    
   \              0x70 0x65    
   \   00000018   0x63 0x69          DC8 63H, 69H, 66H, 69H, 65H, 64H, 20H, 63H
   \              0x66 0x69    
   \              0x65 0x64    
   \              0x20 0x63    
   \   00000020   0x6C 0x75          DC8 6CH, 75H, 73H, 74H, 65H, 72H, 3AH, 20H
   \              0x73 0x74    
   \              0x65 0x72    
   \              0x3A 0x20    
   \   00000028   0x72 0x65          DC8 72H, 65H, 61H, 64H, 41H, 74H, 74H, 72H
   \              0x61 0x64    
   \              0x41 0x74    
   \              0x74 0x72    
   \   00000030   0x69 0x62          DC8 69H, 62H, 75H, 74H, 65H, 20H, 5BH, 61H
   \              0x75 0x74    
   \              0x65 0x20    
   \              0x5B 0x61    
   \   00000038   0x64 0x64          DC8 64H, 64H, 72H, 4DH, 6FH, 64H, 65H, 5DH
   \              0x72 0x4D    
   \              0x6F 0x64    
   \              0x65 0x5D    
   \   00000040   0x5B 0x61          DC8 5BH, 61H, 64H, 64H, 72H, 5DH, 5BH, 65H
   \              0x64 0x64    
   \              0x72 0x5D    
   \              0x5B 0x65    
   \   00000048   0x70 0x5D          DC8 70H, 5DH, 5BH, 63H, 6CH, 75H, 73H, 74H
   \              0x5B 0x63    
   \              0x6C 0x75    
   \              0x73 0x74    
   \   00000050   0x65 0x72          DC8 65H, 72H, 49H, 64H, 5DH, 5BH, 61H, 74H
   \              0x49 0x64    
   \              0x5D 0x5B    
   \              0x61 0x74    
   \   00000058   0x74 0x72          DC8 74H, 72H, 49H, 64H, 5DH, 0DH, 0AH, 0
   \              0x49 0x64    
   \              0x5D 0x0D    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_49:
   \   00000000   0x73 0x65          DC8 "setPermitJoinRsp %d\015\012"
   \              0x74 0x50    
   \              0x65 0x72    
   \              0x6D 0x69    
   \              0x74 0x4A    
   \              0x6F 0x69    
   \              0x6E 0x52    
   \              0x73 0x70    
   \              0x20 0x25    
   \              0x64 0x0D    
   \              0x0A 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_50:
   \   00000000   0x55 0x6E          DC8 "Unsupported Client Cluster Id \015\012"
   \              0x73 0x75    
   \              0x70 0x70    
   \              0x6F 0x72    
   \              0x74 0x65    
   \              0x64 0x20    
   \              0x43 0x6C    
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x20 0x43    
   \              0x6C 0x75    
   \              0x73 0x74    
   \              0x65 0x72    
   \              0x20 0x49    
   \              0x64 0x20    
   \              0x0D 0x0A    
   \              0x00         
   \   00000021   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_51:
   \   00000000   0x55 0x6E          DC8 "Unsupported Cluster Id \015\012"
   \              0x73 0x75    
   \              0x70 0x70    
   \              0x6F 0x72    
   \              0x74 0x65    
   \              0x64 0x20    
   \              0x43 0x6C    
   \              0x75 0x73    
   \              0x74 0x65    
   \              0x72 0x20    
   \              0x49 0x64    
   \              0x20 0x0D    
   \              0x0A 0x00    
   \   0000001A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable65:
   \   00000000   0x........         DC32     zdpReq

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable65_1:
   \   00000000   0x........         DC32     zdoPermitJoiningResponse

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable65_2:
   \   00000000   0x00000201         DC32     0x201

   \                                 In section .text, align 4, keep-with-next
   \                     ?_54:
   \   00000000   0x55 0x6E          DC8 "Unsupported Client Cluster Id \015\012"
   \              0x73 0x75    
   \              0x70 0x70    
   \              0x6F 0x72    
   \              0x74 0x65    
   \              0x64 0x20    
   \              0x43 0x6C    
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x20 0x43    
   \              0x6C 0x75    
   \              0x73 0x74    
   \              0x65 0x72    
   \              0x20 0x49    
   \              0x64 0x20    
   \              0x0D 0x0A    
   \              0x00         
   \   00000021   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_55:
   \   00000000   0x55 0x6E          DC8 "Unsupported Cluster Id \015\012"
   \              0x73 0x75    
   \              0x70 0x70    
   \              0x6F 0x72    
   \              0x74 0x65    
   \              0x64 0x20    
   \              0x43 0x6C    
   \              0x75 0x73    
   \              0x74 0x65    
   \              0x72 0x20    
   \              0x49 0x64    
   \              0x20 0x0D    
   \              0x0A 0x00    
   \   0000001A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable66:
   \   00000000   0x2D 0x67          DC8      0x2D, 0x67, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable66_1:
   \   00000000   0x2D 0x62          DC8      0x2D, 0x62, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable66_2:
   \   00000000   0x........         DC32     ?_56

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable66_3:
   \   00000000   0x00000402         DC32     0x402

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable66_4:
   \   00000000   0x........         DC32     ?_57

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_27:
   \   00000000   0x77 0x72          DC8 "writeAttribute"
   \              0x69 0x74    
   \              0x65 0x41    
   \              0x74 0x74    
   \              0x72 0x69    
   \              0x62 0x75    
   \              0x74 0x65    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_28:
   \   00000000   0x73 0x64          DC8 "sddddddd"
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_29:
   \   00000000   0x2D 0x3E          DC8 2DH, 3EH, 57H, 72H, 69H, 74H, 65H, 20H
   \              0x57 0x72    
   \              0x69 0x74    
   \              0x65 0x20    
   \   00000008   0x41 0x74          DC8 41H, 74H, 74H, 72H, 69H, 62H, 75H, 74H
   \              0x74 0x72    
   \              0x69 0x62    
   \              0x75 0x74    
   \   00000010   0x65 0x20          DC8 65H, 20H, 66H, 6FH, 72H, 20H, 73H, 70H
   \              0x66 0x6F    
   \              0x72 0x20    
   \              0x73 0x70    
   \   00000018   0x65 0x63          DC8 65H, 63H, 69H, 66H, 69H, 65H, 64H, 20H
   \              0x69 0x66    
   \              0x69 0x65    
   \              0x64 0x20    
   \   00000020   0x63 0x6C          DC8 63H, 6CH, 75H, 73H, 74H, 65H, 72H, 3AH
   \              0x75 0x73    
   \              0x74 0x65    
   \              0x72 0x3A    
   \   00000028   0x20 0x77          DC8 20H, 77H, 72H, 69H, 74H, 65H, 41H, 74H
   \              0x72 0x69    
   \              0x74 0x65    
   \              0x41 0x74    
   \   00000030   0x74 0x72          DC8 74H, 72H, 69H, 62H, 75H, 74H, 65H, 20H
   \              0x69 0x62    
   \              0x75 0x74    
   \              0x65 0x20    
   \   00000038   0x5B 0x61          DC8 5BH, 61H, 64H, 64H, 72H, 4DH, 6FH, 64H
   \              0x64 0x64    
   \              0x72 0x4D    
   \              0x6F 0x64    
   \   00000040   0x65 0x5D          DC8 65H, 5DH, 5BH, 61H, 64H, 64H, 72H, 5DH
   \              0x5B 0x61    
   \              0x64 0x64    
   \              0x72 0x5D    
   \   00000048   0x5B 0x65          DC8 5BH, 65H, 70H, 5DH, 5BH, 63H, 6CH, 75H
   \              0x70 0x5D    
   \              0x5B 0x63    
   \              0x6C 0x75    
   \   00000050   0x73 0x74          DC8 73H, 74H, 65H, 72H, 49H, 64H, 5DH, 5BH
   \              0x65 0x72    
   \              0x49 0x64    
   \              0x5D 0x5B    
   \   00000058   0x61 0x74          DC8 61H, 74H, 74H, 72H, 49H, 64H, 5DH, 5BH
   \              0x74 0x72    
   \              0x49 0x64    
   \              0x5D 0x5B    
   \   00000060   0x74 0x79          DC8 74H, 79H, 70H, 65H, 5DH, 5BH, 61H, 74H
   \              0x70 0x65    
   \              0x5D 0x5B    
   \              0x61 0x74    
   \   00000068   0x74 0x72          DC8 74H, 72H, 56H, 61H, 6CH, 75H, 65H, 5DH
   \              0x56 0x61    
   \              0x6C 0x75    
   \              0x65 0x5D    
   \   00000070   0x5B 0x61          DC8 5BH, 61H, 74H, 74H, 72H, 53H, 69H, 7AH
   \              0x74 0x74    
   \              0x72 0x53    
   \              0x69 0x7A    
   \   00000078   0x65 0x5D          DC8 65H, 5DH, 0DH, 0AH, 0
   \              0x0D 0x0A    
   \              0x00         
   \   0000007D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_30:
   \   00000000   0x63 0x6F          DC8 "configureReporting"
   \              0x6E 0x66    
   \              0x69 0x67    
   \              0x75 0x72    
   \              0x65 0x52    
   \              0x65 0x70    
   \              0x6F 0x72    
   \              0x74 0x69    
   \              0x6E 0x67    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_31:
   \   00000000   0x2D 0x3E          DC8 2DH, 3EH, 53H, 65H, 6EH, 64H, 73H, 20H
   \              0x53 0x65    
   \              0x6E 0x64    
   \              0x73 0x20    
   \   00000008   0x63 0x6F          DC8 63H, 6FH, 6EH, 66H, 69H, 67H, 75H, 72H
   \              0x6E 0x66    
   \              0x69 0x67    
   \              0x75 0x72    
   \   00000010   0x65 0x20          DC8 65H, 20H, 72H, 65H, 70H, 6FH, 72H, 74H
   \              0x72 0x65    
   \              0x70 0x6F    
   \              0x72 0x74    
   \   00000018   0x69 0x6E          DC8 69H, 6EH, 67H, 20H, 74H, 6FH, 20H, 73H
   \              0x67 0x20    
   \              0x74 0x6F    
   \              0x20 0x73    
   \   00000020   0x70 0x65          DC8 70H, 65H, 63H, 69H, 66H, 69H, 65H, 64H
   \              0x63 0x69    
   \              0x66 0x69    
   \              0x65 0x64    
   \   00000028   0x20 0x63          DC8 20H, 63H, 6CH, 75H, 73H, 74H, 65H, 72H
   \              0x6C 0x75    
   \              0x73 0x74    
   \              0x65 0x72    
   \   00000030   0x20 0x73          DC8 20H, 73H, 65H, 72H, 76H, 65H, 72H, 3AH
   \              0x65 0x72    
   \              0x76 0x65    
   \              0x72 0x3A    
   \   00000038   0x20 0x63          DC8 20H, 63H, 6FH, 6EH, 66H, 69H, 67H, 75H
   \              0x6F 0x6E    
   \              0x66 0x69    
   \              0x67 0x75    
   \   00000040   0x72 0x65          DC8 72H, 65H, 52H, 65H, 70H, 6FH, 72H, 74H
   \              0x52 0x65    
   \              0x70 0x6F    
   \              0x72 0x74    
   \   00000048   0x69 0x6E          DC8 69H, 6EH, 67H, 20H, 5BH, 61H, 64H, 64H
   \              0x67 0x20    
   \              0x5B 0x61    
   \              0x64 0x64    
   \   00000050   0x72 0x4D          DC8 72H, 4DH, 6FH, 64H, 65H, 5DH, 5BH, 61H
   \              0x6F 0x64    
   \              0x65 0x5D    
   \              0x5B 0x61    
   \   00000058   0x64 0x64          DC8 64H, 64H, 72H, 5DH, 5BH, 65H, 70H, 5DH
   \              0x72 0x5D    
   \              0x5B 0x65    
   \              0x70 0x5D    
   \   00000060   0x5B 0x63          DC8 5BH, 63H, 6CH, 75H, 73H, 74H, 65H, 72H
   \              0x6C 0x75    
   \              0x73 0x74    
   \              0x65 0x72    
   \   00000068   0x49 0x64          DC8 49H, 64H, 5DH, 5BH, 61H, 74H, 74H, 72H
   \              0x5D 0x5B    
   \              0x61 0x74    
   \              0x74 0x72    
   \   00000070   0x49 0x64          DC8 49H, 64H, 5DH, 5BH, 74H, 79H, 70H, 65H
   \              0x5D 0x5B    
   \              0x74 0x79    
   \              0x70 0x65    
   \   00000078   0x5D 0x5B          DC8 5DH, 5BH, 6DH, 69H, 6EH, 5DH, 5BH, 6DH
   \              0x6D 0x69    
   \              0x6E 0x5D    
   \              0x5B 0x6D    
   \   00000080   0x61 0x78          DC8 61H, 78H, 5DH, 0DH, 0AH, 0
   \              0x5D 0x0D    
   \              0x0A 0x00    
   \   00000086   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_32:
   \   00000000   0x73 0x65          DC8 "setOccupancyState"
   \              0x74 0x4F    
   \              0x63 0x63    
   \              0x75 0x70    
   \              0x61 0x6E    
   \              0x63 0x79    
   \              0x53 0x74    
   \              0x61 0x74    
   \              0x65 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_33:
   \   00000000   0x2D 0x3E          DC8 2DH, 3EH, 20H, 53H, 65H, 74H, 73H, 20H
   \              0x20 0x53    
   \              0x65 0x74    
   \              0x73 0x20    
   \   00000008   0x74 0x68          DC8 74H, 68H, 65H, 20H, 4FH, 63H, 63H, 75H
   \              0x65 0x20    
   \              0x4F 0x63    
   \              0x63 0x75    
   \   00000010   0x70 0x61          DC8 70H, 61H, 6EH, 63H, 79H, 20H, 73H, 74H
   \              0x6E 0x63    
   \              0x79 0x20    
   \              0x73 0x74    
   \   00000018   0x61 0x74          DC8 61H, 74H, 65H, 20H, 5BH, 73H, 74H, 61H
   \              0x65 0x20    
   \              0x5B 0x73    
   \              0x74 0x61    
   \   00000020   0x74 0x65          DC8 74H, 65H, 5DH, 2DH, 20H, 6FH, 63H, 63H
   \              0x5D 0x2D    
   \              0x20 0x6F    
   \              0x63 0x63    
   \   00000028   0x75 0x70          DC8 75H, 70H, 69H, 61H, 64H, 20H, 2DH, 20H
   \              0x69 0x61    
   \              0x64 0x20    
   \              0x2D 0x20    
   \   00000030   0x31 0x2C          DC8 31H, 2CH, 75H, 6EH, 6FH, 63H, 63H, 75H
   \              0x75 0x6E    
   \              0x6F 0x63    
   \              0x63 0x75    
   \   00000038   0x70 0x69          DC8 70H, 69H, 61H, 64H, 20H, 2DH, 30H, 0DH
   \              0x61 0x64    
   \              0x20 0x2D    
   \              0x30 0x0D    
   \   00000040   0x0A 0x20          DC8 0AH, 20H, 0
   \              0x00         
   \   00000043   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_34:
   \   00000000   0x73 0x65          DC8 "setOccupancySensorType"
   \              0x74 0x4F    
   \              0x63 0x63    
   \              0x75 0x70    
   \              0x61 0x6E    
   \              0x63 0x79    
   \              0x53 0x65    
   \              0x6E 0x73    
   \              0x6F 0x72    
   \              0x54 0x79    
   \              0x70 0x65    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_35:
   \   00000000   0x2D 0x3E          DC8 2DH, 3EH, 20H, 53H, 65H, 74H, 73H, 20H
   \              0x20 0x53    
   \              0x65 0x74    
   \              0x73 0x20    
   \   00000008   0x74 0x68          DC8 74H, 68H, 65H, 20H, 4FH, 63H, 63H, 75H
   \              0x65 0x20    
   \              0x4F 0x63    
   \              0x63 0x75    
   \   00000010   0x70 0x61          DC8 70H, 61H, 6EH, 63H, 79H, 53H, 65H, 6EH
   \              0x6E 0x63    
   \              0x79 0x53    
   \              0x65 0x6E    
   \   00000018   0x73 0x6F          DC8 73H, 6FH, 72H, 20H, 54H, 79H, 70H, 65H
   \              0x72 0x20    
   \              0x54 0x79    
   \              0x70 0x65    
   \   00000020   0x20 0x5B          DC8 20H, 5BH, 73H, 65H, 6EH, 73H, 6FH, 72H
   \              0x73 0x65    
   \              0x6E 0x73    
   \              0x6F 0x72    
   \   00000028   0x54 0x79          DC8 54H, 79H, 70H, 65H, 5DH, 2DH, 20H, 50H
   \              0x70 0x65    
   \              0x5D 0x2D    
   \              0x20 0x50    
   \   00000030   0x49 0x52          DC8 49H, 52H, 20H, 2DH, 20H, 30H, 2CH, 55H
   \              0x20 0x2D    
   \              0x20 0x30    
   \              0x2C 0x55    
   \   00000038   0x6C 0x74          DC8 6CH, 74H, 72H, 61H, 73H, 6FH, 6EH, 69H
   \              0x72 0x61    
   \              0x73 0x6F    
   \              0x6E 0x69    
   \   00000040   0x63 0x2D          DC8 63H, 2DH, 31H, 2CH, 20H, 50H, 49H, 52H
   \              0x31 0x2C    
   \              0x20 0x50    
   \              0x49 0x52    
   \   00000048   0x20 0x2B          DC8 20H, 2BH, 20H, 55H, 6CH, 74H, 72H, 61H
   \              0x20 0x55    
   \              0x6C 0x74    
   \              0x72 0x61    
   \   00000050   0x73 0x6F          DC8 73H, 6FH, 6EH, 69H, 63H, 2DH, 32H, 30H
   \              0x6E 0x69    
   \              0x63 0x2D    
   \              0x32 0x30    
   \   00000058   0x0D 0x0A          DC8 0DH, 0AH, 20H, 0
   \              0x20 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_36:
   \   00000000   0x74 0x72          DC8 "triggerAlarm"
   \              0x69 0x67    
   \              0x67 0x65    
   \              0x72 0x41    
   \              0x6C 0x61    
   \              0x72 0x6D    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_37:
   \   00000000   0x64 0x64          DC8 "ddd"
   \              0x64 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_38:
   \   00000000   0x2D 0x3E          DC8 2DH, 3EH, 20H, 54H, 72H, 69H, 67H, 67H
   \              0x20 0x54    
   \              0x72 0x69    
   \              0x67 0x67    
   \   00000008   0x65 0x72          DC8 65H, 72H, 73H, 20H, 61H, 6CH, 61H, 72H
   \              0x73 0x20    
   \              0x61 0x6C    
   \              0x61 0x72    
   \   00000010   0x6D 0x20          DC8 6DH, 20H, 63H, 6FH, 6EH, 64H, 69H, 74H
   \              0x63 0x6F    
   \              0x6E 0x64    
   \              0x69 0x74    
   \   00000018   0x69 0x6F          DC8 69H, 6FH, 6EH, 3AH, 20H, 74H, 72H, 69H
   \              0x6E 0x3A    
   \              0x20 0x74    
   \              0x72 0x69    
   \   00000020   0x67 0x67          DC8 67H, 67H, 65H, 72H, 41H, 6CH, 61H, 72H
   \              0x65 0x72    
   \              0x41 0x6C    
   \              0x61 0x72    
   \   00000028   0x6D 0x20          DC8 6DH, 20H, 5BH, 63H, 6CH, 75H, 73H, 74H
   \              0x5B 0x63    
   \              0x6C 0x75    
   \              0x73 0x74    
   \   00000030   0x65 0x72          DC8 65H, 72H, 49H, 64H, 5DH, 5BH, 61H, 6CH
   \              0x49 0x64    
   \              0x5D 0x5B    
   \              0x61 0x6C    
   \   00000038   0x61 0x72          DC8 61H, 72H, 6DH, 43H, 6FH, 64H, 65H, 5DH
   \              0x6D 0x43    
   \              0x6F 0x64    
   \              0x65 0x5D    
   \   00000040   0x5B 0x30          DC8 5BH, 30H, 2DH, 72H, 61H, 69H, 73H, 65H
   \              0x2D 0x72    
   \              0x61 0x69    
   \              0x73 0x65    
   \   00000048   0x20 0x31          DC8 20H, 31H, 2DH, 63H, 6CH, 65H, 61H, 72H
   \              0x2D 0x63    
   \              0x6C 0x65    
   \              0x61 0x72    
   \   00000050   0x5D 0x0D          DC8 5DH, 0DH, 0AH, 0
   \              0x0A 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_39:
   \   00000000   0x73 0x65          DC8 "setAlarmMask"
   \              0x74 0x41    
   \              0x6C 0x61    
   \              0x72 0x6D    
   \              0x4D 0x61    
   \              0x73 0x6B    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_40:
   \   00000000   0x64 0x64          DC8 "dd"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_41:
   \   00000000   0x2D 0x3E          DC8 2DH, 3EH, 20H, 53H, 65H, 74H, 20H, 41H
   \              0x20 0x53    
   \              0x65 0x74    
   \              0x20 0x41    
   \   00000008   0x6C 0x61          DC8 6CH, 61H, 72H, 6DH, 20H, 4DH, 61H, 73H
   \              0x72 0x6D    
   \              0x20 0x4D    
   \              0x61 0x73    
   \   00000010   0x6B 0x3A          DC8 6BH, 3AH, 20H, 73H, 65H, 74H, 41H, 6CH
   \              0x20 0x73    
   \              0x65 0x74    
   \              0x41 0x6C    
   \   00000018   0x61 0x72          DC8 61H, 72H, 6DH, 4DH, 61H, 73H, 6BH, 20H
   \              0x6D 0x4D    
   \              0x61 0x73    
   \              0x6B 0x20    
   \   00000020   0x5B 0x63          DC8 5BH, 63H, 6CH, 75H, 73H, 74H, 65H, 72H
   \              0x6C 0x75    
   \              0x73 0x74    
   \              0x65 0x72    
   \   00000028   0x49 0x64          DC8 49H, 64H, 5DH, 5BH, 61H, 6CH, 61H, 72H
   \              0x5D 0x5B    
   \              0x61 0x6C    
   \              0x61 0x72    
   \   00000030   0x6D 0x4D          DC8 6DH, 4DH, 61H, 73H, 6BH, 5DH, 0DH, 0AH
   \              0x61 0x73    
   \              0x6B 0x5D    
   \              0x0D 0x0A    
   \   00000038   0x00               DC8 0
   \   00000039   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_52:
   \   00000000   0x2D 0x67          DC8 "-g"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_53:
   \   00000000   0x2D 0x62          DC8 "-b"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_56:
   \   00000000   0x55 0x6E          DC8 "Unsupported Client Cluster Id \015\012"
   \              0x73 0x75    
   \              0x70 0x70    
   \              0x6F 0x72    
   \              0x74 0x65    
   \              0x64 0x20    
   \              0x43 0x6C    
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x20 0x43    
   \              0x6C 0x75    
   \              0x73 0x74    
   \              0x65 0x72    
   \              0x20 0x49    
   \              0x64 0x20    
   \              0x0D 0x0A    
   \              0x00         
   \   00000021   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_57:
   \   00000000   0x55 0x6E          DC8 "Unsupported Cluster Id \015\012"
   \              0x73 0x75    
   \              0x70 0x70    
   \              0x6F 0x72    
   \              0x74 0x65    
   \              0x64 0x20    
   \              0x43 0x6C    
   \              0x75 0x73    
   \              0x74 0x65    
   \              0x72 0x20    
   \              0x49 0x64    
   \              0x20 0x0D    
   \              0x0A 0x00    
   \   0000001A   0x00 0x00          DC8 0, 0
    497          
    498          #endif // APP_ENABLE_CONSOLE == 1
    499          #endif // APP_DEVICE_TYPE_THERMOSTAT
    500          
    501          // eof thConsole.c

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   SYS_DisableTask
       8   consoleTx
         8   -> appSnprintf
       8   consoleTxStr
         8   -> appSnprintf
       8   determineAddressMode
         8   -> memcmp
       8   initConsole
         8   -> consoleRegisterCommands
       8   processAttrinitDefault
         8   -> appSnprintf
         8   -> thermostatClusterInitAttributes
      48   processConfigureReportingCmd
        48   -> ZCL_GetCluster
        48   -> __aeabi_memcpy4
        48   -> appSnprintf
        48   -> determineAddressMode
        48   -> humidityMeasurementConfigureReporting
        48   -> occupancySensingConfigureReporting
        48   -> thTemperatureMeasurementConfigureReporting
      16   processConsole
        16   -> consoleRx
        16   -> readDataFromUart
      24   processGetDeviceTypeCmd
        24   -> __aeabi_memcpy4
        24   -> appSnprintf
       8   processGetNetworkAddressCmd
         8   -> NWK_GetShortAddr
         8   -> appSnprintf
      32   processHelpCmd
        32   -> __aeabi_memcpy4
        32   -> appSnprintf
       8   processInvokeEzModeCmd
         8   -> invokeEzMode
       8   processPseudoPowerOffCmd
         8   -> SYS_DisableTask
      48   processReadAttrCmd
        48   -> ZCL_GetCluster
        48   -> __aeabi_memcpy4
        48   -> appSnprintf
        48   -> determineAddressMode
        48   -> humidityMeasurementReadAttribute
        48   -> occupancySensingReadAttribute
        48   -> thTemperatureMeasurementReadAttribute
        48   -> timeReadAttribute
       8   processResetCmd
         8   -> HAL_WarmReset
       8   processResetToFactoryFreshCmd
         8   -> HAL_WarmReset
         8   -> PDS_DeleteAll
       8   processRestartNwkCmd
         8   -> CS_WriteParameter
         8   -> appRestart
       8   processSetAlarmMaskCmd
         8   -> thermostatSetAlarmMask
       8   processSetOccupancyCmd
         8   -> appSnprintf
         8   -> thermostatSetOccupancy
       8   processSetOccupancyStateCmd
         8   -> occupancySensingInitiateSetOccupancyState
      16   processSetPermitJoinCmd
        16   -> NWK_GetShortAddr
        16   -> ZDO_ZdpReq
       8   processSetSensorTypeCmd
         8   -> occupancySensingSetSensorType
       8   processTriggerAlarmCmd
         8   -> thermostatSetAlarmCondition
      48   processWriteAttrCmd
        48   -> ZCL_GetCluster
        48   -> __aeabi_memcpy4
        48   -> appSnprintf
        48   -> determineAddressMode
        48   -> humidityMeasurementWriteAttribute
        48   -> occupancySensingWriteAttribute
        48   -> thTemperatureMeasurementWriteAttribute
        48   -> timeWriteAttribute
      32   zdoPermitJoiningResponse
        32   -> __aeabi_memcpy4
        32   -> appSnprintf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable62
       4  ??DataTable62_1
       4  ??DataTable65
       4  ??DataTable65_1
       4  ??DataTable65_2
       4  ??DataTable66
       4  ??DataTable66_1
       4  ??DataTable66_2
       4  ??DataTable66_3
       4  ??DataTable66_4
       8  ?_0
       1  ?_1
      48  ?_10
      16  ?_11
      44  ?_12
      12  ?_13
      36  ?_14
      16  ?_15
       2  ?_16
      44  ?_17
      16  ?_18
      48  ?_19
      40  ?_2
      24  ?_20
      64  ?_21
      12  ?_22
      56  ?_23
      16  ?_24
       8  ?_25
      96  ?_26
      16  ?_27
      12  ?_28
     128  ?_29
       8  ?_3
      20  ?_30
     136  ?_31
      20  ?_32
      68  ?_33
      24  ?_34
      92  ?_35
      16  ?_36
       4  ?_37
      84  ?_38
      16  ?_39
      20  ?_4
       4  ?_40
      60  ?_41
      16  ?_42
       8  ?_43
       8  ?_44
      20  ?_45
      24  ?_46
      36  ?_47
      24  ?_48
      24  ?_49
      20  ?_5
      36  ?_50
      28  ?_51
       4  ?_52
       4  ?_53
      36  ?_54
      28  ?_55
      36  ?_56
      28  ?_57
      48  ?_6
      16  ?_7
      40  ?_8
      12  ?_9
      10  SYS_DisableTask
     304  cmds
      10  consoleTx
       8  consoleTxStr
      40  determineAddressMode
      12  initConsole
      24  processAttrinitDefault
     154  processConfigureReportingCmd
      40  processConsole
      28  processGetDeviceTypeCmd
      16  processGetNetworkAddressCmd
      50  processHelpCmd
      10  processInvokeEzModeCmd
      28  processPseudoPowerOffCmd
     162  processReadAttrCmd
       8  processResetCmd
      14  processResetToFactoryFreshCmd
      26  processRestartNwkCmd
      20  processSetAlarmMaskCmd
      32  processSetOccupancyCmd
      16  processSetOccupancyStateCmd
      52  processSetPermitJoinCmd
      10  processSetSensorTypeCmd
      28  processTriggerAlarmCmd
     218  processWriteAttrCmd
      52  readBuffer
      28  zdoPermitJoiningResponse
     392  zdpReq

 
   444 bytes in section .bss
 1 543 bytes in section .rodata
 1 676 bytes in section .text
 
 1 676 bytes of CODE  memory
 1 543 bytes of CONST memory
   444 bytes of DATA  memory

Errors: none
Warnings: none
