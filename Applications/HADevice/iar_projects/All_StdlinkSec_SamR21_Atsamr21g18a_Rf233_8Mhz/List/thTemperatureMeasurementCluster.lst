###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.4.8167/W32 for ARM        31/Mar/2015  18:41:06
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\thermostat\src\thTemperatureMeasurementCluster.c
#    Command line =  
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\thermostat\src\thTemperatureMeasurementCluster.c
#        -D BOARD_SAMR21 -D BOARD_QTOUCH_XPRO -D AT86RF233 -D ATSAMR21G18A -D
#        HAL_8MHz -D STACK_TYPE_ALL -D STDLINK_SECURITY_MODE -lC
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects\All_StdlinkSec_SamR21_Atsamr21g18a_Rf233_8Mhz/List\
#        --diag_suppress Pa050,Pe188 -o
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects\All_StdlinkSec_SamR21_Atsamr21g18a_Rf233_8Mhz/Obj\
#        --debug --endian=little --cpu=Cortex-M0+ -e --fpu=None --dlib_config
#        "C:\Program Files\IAR Systems\Embedded Workbench
#        7.30\arm\INC\c\DLib_Config_Full.h" --preinclude
#        MakerulesBc_All_StdlinkSec_Atsamr21g18a_Rf233_Iar.h -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/..\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../dimmableLight/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../dimmerSwitch/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../multiSensor/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../thermostat/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../ias_ace/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../combinedInterface/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../common/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../common/clusters/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/BSP/SAMR21/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/SystemEnvironment/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/lib\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/HAL/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/BSP\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/BSP/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/BSP/QTouch_XPRO/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/NWK/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/NWK/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZDO/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZDO/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/APS/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/APS/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/SystemEnvironment/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ConfigServer/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ConfigServer/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/PersistDataServer/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/PersistDataServer/std/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/PersistDataServer/wl/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Types/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Util/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Timer/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Task/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_ErrH/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Log/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Memory/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Init/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/S_Nv/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/S_XNv/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/D_Nv/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/D_XNv/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/D_XNv/src\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/S_XNv/src\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/Security/TrustCentre/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/Security/ServiceProvider/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/HAL/drivers/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/HAL/drivers/VCP/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/HAL/cortexm0+/atsamr21/common/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZCL/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZCL/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_ENV/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_HWI/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_HWD_PHY/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_HWD_PHY/RF231_RF212/PHY/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_HWD_PHY/RF231_RF212/MAC_HWD/include\
#        -Ohz --use_c++_inline
#    List file    =  
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects\All_StdlinkSec_SamR21_Atsamr21g18a_Rf233_8Mhz/List\thTemperatureMeasurementCluster.lst
#    Object file  =  
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects\All_StdlinkSec_SamR21_Atsamr21g18a_Rf233_8Mhz/Obj\thTemperatureMeasurementCluster.o
#
###############################################################################

D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\thermostat\src\thTemperatureMeasurementCluster.c
      1          /**************************************************************************//**
      2            \file thTemperatureMeasurementCluster.c
      3          
      4            \brief
      5              Thermostat Temperature Measurement cluster implementation.
      6          
      7            \author
      8              Atmel Corporation: http://www.atmel.com \n
      9              Support email: avr@atmel.com
     10          
     11            Copyright (c) 2008-2015, Atmel Corporation. All rights reserved.
     12            Licensed under Atmel's Limited License Agreement (BitCloudTM).
     13          
     14            \internal
     15              History:
     16              21.11.14 Parthasarathy G - Created.
     17          ******************************************************************************/
     18          #if defined APP_DEVICE_TYPE_THERMOSTAT
     19          
     20          /******************************************************************************
     21                              Includes section
     22          ******************************************************************************/
     23          #include <thTemperatureMeasurementCluster.h>
     24          #include <uartManager.h>
     25          #include <commandManager.h>
     26          
     27          /******************************************************************************
     28                              Definition(s) section
     29          ******************************************************************************/
     30          #define TEMPERATURE_REPORT_PERIOD   20000UL
     31          
     32          /******************************************************************************
     33                              Global variables
     34          ******************************************************************************/
     35          ZCL_TemperatureMeasurementClusterAttributes_t thTemperatureMeasurementClusterServerAttributes =
     36          {
     37            ZCL_DEFINE_TEMPERATURE_MEASUREMENT_CLUSTER_SERVER_ATTRIBUTES(TEMPERATURE_MEASUREMENT_VAL_MIN_REPORT_PERIOD, TEMPERATURE_MEASUREMENT_VAL_MAX_REPORT_PERIOD)
     38          };
     39          
     40          /******************************************************************************
     41                              Local variables section
     42          ******************************************************************************/

   \                                 In section .bss, align 4
     43          static AttibuteReadCallback_t   readAttributeCallback;
   \                     readAttributeCallback:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     44          static AttributeWriteCallback_t writeAttributeCallback;
   \                     writeAttributeCallback:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
   \                     thTemperatureMeasurementClusterServerAttributes:
   \   00000000   0x0000             DC16 0
   \   00000002   0x29 0x33          DC8 41, 51
   \   00000004   0x0000 0x0000      DC16 0, 0, 30, 40, 0, 0, 0, 1, 2, 1
   \              0x001E 0x0028
   \              0x0000 0x0000
   \              0x0000 0x0001
   \              0x0002 0x0001
   \   00000018   0x29 0x12          DC8 41, 18
   \   0000001A   0x0000 0x954D      DC16 0, -27315, 32766, 2
   \              0x7FFE 0x0002
   \   00000022   0x29 0x12          DC8 41, 18
   \   00000024   0x0000 0x954E      DC16 0, -27314, 32767, 3
   \              0x7FFF 0x0003
   \   0000002C   0x21 0x13          DC8 33, 19
   \   0000002E   0x0000 0x0000      DC16 0, 0, 30, 40, 0, 0, 0, 0, 2048
   \              0x001E 0x0028
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0800       
   \   00000040   0x00000000         DC32 0H
   \   00000044   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000048   0x00004E20         DC32 20000
   \   0000004C   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000050   0x........         DC32 thTempeartureMeasurementUpdateMeasuredValue
     45          
     46          static HAL_AppTimer_t readTemperatureimer =
     47          {
     48            .interval = TEMPERATURE_REPORT_PERIOD,
     49            .mode     = TIMER_REPEAT_MODE,
     50            .callback = thTempeartureMeasurementUpdateMeasuredValue,
     51          };
     52          
     53          /******************************************************************************
     54                              Prototypes section
     55          ******************************************************************************/
     56          static void ZCL_ReadAttributeResp(ZCL_Notify_t *ntfy);
     57          static void ZCL_WriteAttributeResp(ZCL_Notify_t *ntfy);
     58          
     59          static void thTemperatureMeasurementReportInd(ZCL_Addressing_t *addressing, uint8_t reportLength, uint8_t *reportPayload);
     60          static void ZCL_ConfigureReportingResp(ZCL_Notify_t *ntfy);
     61          
     62          /******************************************************************************
     63                              Implementation section
     64          ******************************************************************************/
     65          /**************************************************************************//**
     66          \brief Initializes Temperature Measurement cluster
     67          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     68          void thTemperatureMeasurementClusterInit(void)
     69          {
   \                     thTemperatureMeasurementClusterInit: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     70            ZCL_Cluster_t *cluster = ZCL_GetCluster(APP_SRC_ENDPOINT_ID, TEMPERATURE_MEASUREMENT_CLUSTER_ID, ZCL_CLUSTER_SIDE_CLIENT);
   \   00000002   0x....             LDR      R4,??DataTable14  ;; 0x402
   \   00000004   0x2201             MOVS     R2,#+1
   \   00000006   0x0021             MOVS     R1,R4
   \   00000008   0x2019             MOVS     R0,#+25
   \   0000000A   0x.... 0x....      BL       ZCL_GetCluster
     71          
     72            if (cluster)
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD001             BEQ      ??thTemperatureMeasurementClusterInit_0
     73              cluster->ZCL_ReportInd = thTemperatureMeasurementReportInd;
   \   00000012   0x....             LDR      R1,??DataTable14_1
   \   00000014   0x6141             STR      R1,[R0, #+20]
     74          
     75            cluster = ZCL_GetCluster(APP_SRC_ENDPOINT_ID, TEMPERATURE_MEASUREMENT_CLUSTER_ID, ZCL_CLUSTER_SIDE_SERVER);
     76          
     77            if (cluster)
   \                     ??thTemperatureMeasurementClusterInit_0: (+1)
   \   00000016   0x2200             MOVS     R2,#+0
   \   00000018   0x0021             MOVS     R1,R4
   \   0000001A   0x2019             MOVS     R0,#+25
   \   0000001C   0x.... 0x....      BL       ZCL_GetCluster
   \   00000020   0x2800             CMP      R0,#+0
   \   00000022   0xD00C             BEQ      ??thTemperatureMeasurementClusterInit_1
     78            {
     79              thTemperatureMeasurementClusterServerAttributes.measuredValue.value = APP_TEMPERATURE_MEASUREMENT_MEASURED_VALUE_ATTRIBUTE_VALUE;
   \   00000024   0x....             LDR      R0,??DataTable14_2
   \   00000026   0x21A0             MOVS     R1,#+160
   \   00000028   0x01C9             LSLS     R1,R1,#+7        ;; #+20480
   \   0000002A   0x8081             STRH     R1,[R0, #+4]
     80              thTemperatureMeasurementClusterServerAttributes.minMeasuredValue.value = APP_TEMPERATURE_MEASUREMENT_MIN_MEASURED_VALUE_ATTRIBUTE_VALUE;
   \   0000002C   0x....             LDR      R1,??DataTable14_3  ;; 0xffff954d
   \   0000002E   0x8341             STRH     R1,[R0, #+26]
     81              thTemperatureMeasurementClusterServerAttributes.maxMeasuredValue.value = APP_TEMPERATURE_MEASUREMENT_MAX_MEASURED_VALUE_ATTRIBUTE_VALUE;
   \   00000030   0x0C49             LSRS     R1,R1,#+17
   \   00000032   0x8481             STRH     R1,[R0, #+36]
     82              thTemperatureMeasurementClusterServerAttributes.tolerance.value = APP_TEMPERATURE_MEASUREMENT_TOLERANCE_ATTRIBUTE_VALUE;//to be updated
   \   00000034   0x08A1             LSRS     R1,R4,#+2
   \   00000036   0x85C1             STRH     R1,[R0, #+46]
     83              HAL_StartAppTimer(&readTemperatureimer);
   \   00000038   0x3040             ADDS     R0,R0,#+64
   \   0000003A   0x.... 0x....      BL       HAL_StartAppTimer
     84            }
     85          }
   \                     ??thTemperatureMeasurementClusterInit_1: (+1)
   \   0000003E   0xBD10             POP      {R4,PC}          ;; return
     86          
     87          /**************************************************************************//**
     88          \brief Update the measured Value
     89          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     90          void thTempeartureMeasurementUpdateMeasuredValue(void)
     91          {
   \                     thTempeartureMeasurementUpdateMeasuredValue: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     92            int16_t measuredValue;
     93          
     94            measuredValue = thTemperatureMeasurementClusterServerAttributes.measuredValue.value - APP_TEMPERATURE_MEASUREMENT_MEASURED_VALUE_PERIODIC_CHANGE;
   \   00000002   0x....             LDR      R0,??DataTable14_2
   \   00000004   0x8881             LDRH     R1,[R0, #+4]
   \   00000006   0x22FA             MOVS     R2,#+250
   \   00000008   0x0092             LSLS     R2,R2,#+2        ;; #+1000
   \   0000000A   0x1A89             SUBS     R1,R1,R2
     95          
     96            if (measuredValue < thTemperatureMeasurementClusterServerAttributes.minMeasuredValue.value)
   \   0000000C   0x221A             MOVS     R2,#+26
   \   0000000E   0x5E82             LDRSH    R2,[R0, R2]
   \   00000010   0xB209             SXTH     R1,R1
   \   00000012   0x4291             CMP      R1,R2
   \   00000014   0xDA01             BGE      ??thTempeartureMeasurementUpdateMeasuredValue_0
     97              thTemperatureMeasurementClusterServerAttributes.measuredValue.value =  thTemperatureMeasurementClusterServerAttributes.maxMeasuredValue.value;
   \   00000016   0x2124             MOVS     R1,#+36
   \   00000018   0x5E41             LDRSH    R1,[R0, R1]
     98            else
     99              thTemperatureMeasurementClusterServerAttributes.measuredValue.value = measuredValue;
   \                     ??thTempeartureMeasurementUpdateMeasuredValue_0: (+1)
   \   0000001A   0x8081             STRH     R1,[R0, #+4]
    100          
    101            ZCL_ReportOnChangeIfNeeded(&thTemperatureMeasurementClusterServerAttributes.measuredValue);
   \   0000001C   0x.... 0x....      BL       ZCL_ReportOnChangeIfNeeded
    102          }
   \   00000020   0xBD01             POP      {R0,PC}          ;; return
    103          
    104          /**************************************************************************//**
    105          \brief Update the tolerance value
    106          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    107          void thTempeartureMeasurementUpdateTolerance(void)
    108          {
   \                     thTempeartureMeasurementUpdateTolerance: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    109            thTemperatureMeasurementClusterServerAttributes.tolerance.value = 0;
   \   00000002   0x....             LDR      R0,??DataTable14_2
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x85C1             STRH     R1,[R0, #+46]
    110            ZCL_ReportOnChangeIfNeeded(&thTemperatureMeasurementClusterServerAttributes.tolerance);
   \   00000008   0x302A             ADDS     R0,R0,#+42
   \   0000000A   0x.... 0x....      BL       ZCL_ReportOnChangeIfNeeded
    111          }
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return
    112          
    113          /**************************************************************************//**
    114          \brief Sends Read Attribute command unicastly
    115          
    116          \param[in] mode - address mode;
    117          \param[in] addr - short address of destination node;
    118          \param[in] ep   - destination endpoint;
    119          \param[in] attr - attribute id;
    120          \param[in] cb   - callback function
    121          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    122          void thTemperatureMeasurementReadAttribute(APS_AddrMode_t mode,ShortAddr_t addr, Endpoint_t ep,
    123            uint16_t attr, AttibuteReadCallback_t cb)
    124          {
   \                     thTemperatureMeasurementReadAttribute: (+1)
   \   00000000   0xB5F1             PUSH     {R0,R4-R7,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
   \   00000004   0x000F             MOVS     R7,R1
   \   00000006   0x0015             MOVS     R5,R2
   \   00000008   0x001E             MOVS     R6,R3
    125            ZCL_Request_t *req;
    126            ZCL_NextElement_t element;
    127            ZCL_ReadAttributeReq_t readAttrReqElement;
    128          
    129            if (!(req = getFreeCommand()))
   \   0000000A   0x.... 0x....      BL       getFreeCommand
   \   0000000E   0x0004             MOVS     R4,R0
   \   00000010   0xD023             BEQ      ??thTemperatureMeasurementReadAttribute_0
    130              return;
    131          
    132            readAttributeCallback = cb;
   \   00000012   0x980C             LDR      R0,[SP, #+48]
   \   00000014   0x....             LDR      R1,??DataTable14_4
   \   00000016   0x6008             STR      R0,[R1, #+0]
    133          
    134            readAttrReqElement.id = attr;
   \   00000018   0x4668             MOV      R0,SP
   \   0000001A   0x8086             STRH     R6,[R0, #+4]
    135          
    136            element.payloadLength = 0;
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0xAE02             ADD      R6,SP,#+8
   \   00000020   0x7070             STRB     R0,[R6, #+1]
    137            element.payload = req->requestPayload;
   \   00000022   0x6CE1             LDR      R1,[R4, #+76]
   \   00000024   0x9103             STR      R1,[SP, #+12]
    138            element.id = ZCL_READ_ATTRIBUTES_COMMAND_ID;
   \   00000026   0x7030             STRB     R0,[R6, #+0]
    139            element.content = &readAttrReqElement;
   \   00000028   0xA801             ADD      R0,SP,#+4
   \   0000002A   0x9004             STR      R0,[SP, #+16]
    140            ZCL_PutNextElement(&element);
   \   0000002C   0xA802             ADD      R0,SP,#+8
   \   0000002E   0x.... 0x....      BL       ZCL_PutNextElement
    141          
    142            fillCommandRequest(req, ZCL_READ_ATTRIBUTES_COMMAND_ID, element.payloadLength);
   \   00000032   0x7872             LDRB     R2,[R6, #+1]
   \   00000034   0x2100             MOVS     R1,#+0
   \   00000036   0x0020             MOVS     R0,R4
   \   00000038   0x.... 0x....      BL       fillCommandRequest
    143            fillDstAddressing(&req->dstAddressing, mode, addr, ep, TEMPERATURE_MEASUREMENT_CLUSTER_ID);
   \   0000003C   0x....             LDR      R0,??DataTable14  ;; 0x402
   \   0000003E   0x9000             STR      R0,[SP, #+0]
   \   00000040   0x002B             MOVS     R3,R5
   \   00000042   0x003A             MOVS     R2,R7
   \   00000044   0x4668             MOV      R0,SP
   \   00000046   0x7E01             LDRB     R1,[R0, #+24]
   \   00000048   0x0020             MOVS     R0,R4
   \   0000004A   0x3020             ADDS     R0,R0,#+32
   \   0000004C   0x.... 0x....      BL       fillDstAddressing
    144            req->ZCL_Notify = ZCL_ReadAttributeResp;
   \   00000050   0x....             LDR      R0,??DataTable14_5
   \   00000052   0x61A0             STR      R0,[R4, #+24]
    145          
    146            commandManagerSendAttribute(req);
   \   00000054   0x0020             MOVS     R0,R4
   \   00000056   0x.... 0x....      BL       commandManagerSendAttribute
    147          }
   \                     ??thTemperatureMeasurementReadAttribute_0: (+1)
   \   0000005A   0xB007             ADD      SP,SP,#+28
   \   0000005C   0xBDF0             POP      {R4-R7,PC}       ;; return
    148          
    149          /**************************************************************************//**
    150          \brief Sends Write Attribute command unicastly
    151          
    152          \param[in] mode - address mode;
    153          \param[in] addr - short address of destination node;
    154          \param[in] attr - attribute id;
    155          \param[in] ep   - destination endpoint;
    156          \param[in] type - attribute type;
    157          \param[in] cb   - callback function;
    158          \param[in] data - the pointer to memory with value to be written;
    159          \param[in] size - size of data parameter in octets
    160          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    161          void thTemperatureMeasurementWriteAttribute(APS_AddrMode_t mode, ShortAddr_t addr, Endpoint_t ep,
    162            uint16_t attr, uint8_t type, AttributeWriteCallback_t cb, void *data, uint8_t size)
    163          {
   \                     thTemperatureMeasurementWriteAttribute: (+1)
   \   00000000   0xB5F1             PUSH     {R0,R4-R7,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x000F             MOVS     R7,R1
   \   00000006   0x0015             MOVS     R5,R2
   \   00000008   0x001E             MOVS     R6,R3
    164            ZCL_Request_t *req;
    165            ZCL_WriteAttributeReq_t writeAttrReq;
    166          
    167            if (!(req = getFreeCommand()))
   \   0000000A   0x.... 0x....      BL       getFreeCommand
   \   0000000E   0x0004             MOVS     R4,R0
   \   00000010   0xD027             BEQ      ??thTemperatureMeasurementWriteAttribute_0
    168              return;
    169          
    170            writeAttributeCallback = cb;
   \   00000012   0x9809             LDR      R0,[SP, #+36]
   \   00000014   0x....             LDR      R1,??DataTable14_6
   \   00000016   0x6008             STR      R0,[R1, #+0]
    171          
    172            writeAttrReq.id = attr;
   \   00000018   0x4668             MOV      R0,SP
   \   0000001A   0x8086             STRH     R6,[R0, #+4]
    173            writeAttrReq.type = type;
   \   0000001C   0x9808             LDR      R0,[SP, #+32]
   \   0000001E   0xA901             ADD      R1,SP,#+4
   \   00000020   0x7088             STRB     R0,[R1, #+2]
    174            memcpy(req->requestPayload, (uint8_t *)&writeAttrReq, sizeof(ZCL_WriteAttributeReq_t) - sizeof(uint8_t));
   \   00000022   0x2203             MOVS     R2,#+3
   \   00000024   0x6CE0             LDR      R0,[R4, #+76]
   \   00000026   0x.... 0x....      BL       __aeabi_memcpy
   \   0000002A   0x9E0B             LDR      R6,[SP, #+44]
    175            memcpy(req->requestPayload + sizeof(ZCL_WriteAttributeReq_t) - sizeof(uint8_t), (uint8_t *)data, size);
   \   0000002C   0x0032             MOVS     R2,R6
   \   0000002E   0x990A             LDR      R1,[SP, #+40]
   \   00000030   0x6CE0             LDR      R0,[R4, #+76]
   \   00000032   0x1CC0             ADDS     R0,R0,#+3
   \   00000034   0x.... 0x....      BL       __aeabi_memcpy
    176          
    177            fillCommandRequest(req, ZCL_WRITE_ATTRIBUTES_COMMAND_ID, size + sizeof(ZCL_WriteAttributeReq_t) - sizeof(uint8_t));
   \   00000038   0x1CF6             ADDS     R6,R6,#+3
   \   0000003A   0xB2F2             UXTB     R2,R6
   \   0000003C   0x2102             MOVS     R1,#+2
   \   0000003E   0x0020             MOVS     R0,R4
   \   00000040   0x.... 0x....      BL       fillCommandRequest
    178            fillDstAddressing(&req->dstAddressing, mode, addr, ep, TEMPERATURE_MEASUREMENT_CLUSTER_ID);
   \   00000044   0x....             LDR      R0,??DataTable14  ;; 0x402
   \   00000046   0x9000             STR      R0,[SP, #+0]
   \   00000048   0x002B             MOVS     R3,R5
   \   0000004A   0x003A             MOVS     R2,R7
   \   0000004C   0x4668             MOV      R0,SP
   \   0000004E   0x7A01             LDRB     R1,[R0, #+8]
   \   00000050   0x0020             MOVS     R0,R4
   \   00000052   0x3020             ADDS     R0,R0,#+32
   \   00000054   0x.... 0x....      BL       fillDstAddressing
    179            req->ZCL_Notify = ZCL_WriteAttributeResp;
   \   00000058   0x....             LDR      R0,??DataTable14_7
   \   0000005A   0x61A0             STR      R0,[R4, #+24]
    180          
    181            commandManagerSendAttribute(req);
   \   0000005C   0x0020             MOVS     R0,R4
   \   0000005E   0x.... 0x....      BL       commandManagerSendAttribute
    182          }
   \                     ??thTemperatureMeasurementWriteAttribute_0: (+1)
   \   00000062   0xBDF7             POP      {R0-R2,R4-R7,PC}  ;; return
    183          
    184          /**************************************************************************//**
    185          \brief Sends the Configure Reporting for Temperature Measurement cluster
    186          
    187          \param[in] mode - address mode;
    188          \param[in] addr - short address of destination node;
    189          \param[in] ep   - destination endpoint;
    190          \param[in] min  - the minimum reporting interval;
    191          \param[in] max  - the maximum reporting interval
    192          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    193          void thTemperatureMeasurementConfigureReporting(APS_AddrMode_t mode, ShortAddr_t addr, Endpoint_t ep,
    194            ZCL_AttributeId_t attrId, uint8_t attrType, ZCL_ReportTime_t min, ZCL_ReportTime_t max)
    195          {
   \                     thTemperatureMeasurementConfigureReporting: (+1)
   \   00000000   0xB5F1             PUSH     {R0,R4-R7,LR}
   \   00000002   0xB088             SUB      SP,SP,#+32
   \   00000004   0x000F             MOVS     R7,R1
   \   00000006   0x0015             MOVS     R5,R2
   \   00000008   0x001E             MOVS     R6,R3
    196            ZCL_Request_t *req;
    197            ZCL_NextElement_t element;
    198            ZCL_ConfigureReportingReq_t configureReportingReq;
    199          
    200            if (!(req = getFreeCommand()))
   \   0000000A   0x.... 0x....      BL       getFreeCommand
   \   0000000E   0x0004             MOVS     R4,R0
   \   00000010   0xD02A             BEQ      ??thTemperatureMeasurementConfigureReporting_0
    201              return;
    202          
    203            configureReportingReq.direction            = ZCL_FRAME_CONTROL_DIRECTION_CLIENT_TO_SERVER;
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0xA904             ADD      R1,SP,#+16
   \   00000016   0x7008             STRB     R0,[R1, #+0]
    204            configureReportingReq.attributeId          = attrId;
   \   00000018   0x704E             STRB     R6,[R1, #+1]
   \   0000001A   0x0A36             LSRS     R6,R6,#+8
   \   0000001C   0x708E             STRB     R6,[R1, #+2]
    205            configureReportingReq.attributeType        = attrType;
   \   0000001E   0x9A0E             LDR      R2,[SP, #+56]
   \   00000020   0x70CA             STRB     R2,[R1, #+3]
    206            configureReportingReq.minReportingInterval = min;
   \   00000022   0x9A0F             LDR      R2,[SP, #+60]
   \   00000024   0x808A             STRH     R2,[R1, #+4]
    207            configureReportingReq.maxReportingInterval = max;
   \   00000026   0x9A10             LDR      R2,[SP, #+64]
   \   00000028   0x80CA             STRH     R2,[R1, #+6]
    208          
    209            element.payloadLength = 0;
   \   0000002A   0xAE01             ADD      R6,SP,#+4
   \   0000002C   0x7070             STRB     R0,[R6, #+1]
    210            element.payload = req->requestPayload;
   \   0000002E   0x6CE0             LDR      R0,[R4, #+76]
   \   00000030   0x9002             STR      R0,[SP, #+8]
    211            element.id = ZCL_CONFIGURE_REPORTING_COMMAND_ID;
   \   00000032   0x2006             MOVS     R0,#+6
   \   00000034   0x7030             STRB     R0,[R6, #+0]
    212            element.content = &configureReportingReq;
   \   00000036   0xA804             ADD      R0,SP,#+16
   \   00000038   0x9003             STR      R0,[SP, #+12]
    213            ZCL_PutNextElement(&element);
   \   0000003A   0xA801             ADD      R0,SP,#+4
   \   0000003C   0x.... 0x....      BL       ZCL_PutNextElement
    214          
    215            fillCommandRequest(req, ZCL_CONFIGURE_REPORTING_COMMAND_ID, element.payloadLength);
   \   00000040   0x7872             LDRB     R2,[R6, #+1]
   \   00000042   0x2106             MOVS     R1,#+6
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0x.... 0x....      BL       fillCommandRequest
    216            fillDstAddressing(&req->dstAddressing, mode, addr, ep, TEMPERATURE_MEASUREMENT_CLUSTER_ID);
   \   0000004A   0x....             LDR      R0,??DataTable14  ;; 0x402
   \   0000004C   0x9000             STR      R0,[SP, #+0]
   \   0000004E   0x002B             MOVS     R3,R5
   \   00000050   0x003A             MOVS     R2,R7
   \   00000052   0xA808             ADD      R0,SP,#+32
   \   00000054   0x7801             LDRB     R1,[R0, #+0]
   \   00000056   0x0020             MOVS     R0,R4
   \   00000058   0x3020             ADDS     R0,R0,#+32
   \   0000005A   0x.... 0x....      BL       fillDstAddressing
    217            req->ZCL_Notify = ZCL_ConfigureReportingResp;
   \   0000005E   0x....             LDR      R0,??DataTable14_8
   \   00000060   0x61A0             STR      R0,[R4, #+24]
    218          
    219            commandManagerSendAttribute(req);
   \   00000062   0x0020             MOVS     R0,R4
   \   00000064   0x.... 0x....      BL       commandManagerSendAttribute
    220          }
   \                     ??thTemperatureMeasurementConfigureReporting_0: (+1)
   \   00000068   0xB009             ADD      SP,SP,#+36
   \   0000006A   0xBDF0             POP      {R4-R7,PC}       ;; return
    221          
    222          /**************************************************************************//**
    223          \brief Report attribute indication handler
    224          
    225          \param[in] addressing - pointer to addressing information;
    226          \param[in] reportLength - data payload length;
    227          \param[in] reportPayload - data pointer
    228          ******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    229          static void thTemperatureMeasurementReportInd(ZCL_Addressing_t *addressing, uint8_t reportLength, uint8_t *reportPayload)
    230          {
   \                     thTemperatureMeasurementReportInd: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB08D             SUB      SP,SP,#+52
    231            ZCL_Report_t *rep = (ZCL_Report_t *)reportPayload;
    232            int16_t reportValue;
    233          
    234            memcpy(&reportValue, &rep->value[0], sizeof(int16_t));
   \   00000004   0x1CD2             ADDS     R2,R2,#+3
   \   00000006   0x4668             MOV      R0,SP
   \   00000008   0x7811             LDRB     R1,[R2, #0]
   \   0000000A   0x7001             STRB     R1,[R0, #0]
   \   0000000C   0x7851             LDRB     R1,[R2, #+1]
   \   0000000E   0x7041             STRB     R1,[R0, #+1]
    235            LOG_STRING(reportAttrIndStr, "<-Temperature Measurement Attr Report: t = %d\r\n");
   \   00000010   0xA801             ADD      R0,SP,#+4
   \   00000012   0xBF00             Nop      
   \   00000014   0x....             ADR.N    R1,?_0
   \   00000016   0x2230             MOVS     R2,#+48
   \   00000018   0x.... 0x....      BL       __aeabi_memcpy4
    236            appSnprintf(reportAttrIndStr, reportValue);
   \   0000001C   0x9900             LDR      R1,[SP, #+0]
   \   0000001E   0xB209             SXTH     R1,R1
   \   00000020   0xA801             ADD      R0,SP,#+4
   \   00000022   0x.... 0x....      BL       appSnprintf
    237          
    238            (void)addressing, (void)reportLength, (void)rep;
    239          }
   \   00000026   0xB00D             ADD      SP,SP,#+52
   \   00000028   0xBD00             POP      {PC}             ;; return
    240          
    241          /**************************************************************************//**
    242          \brief Indication of read attribute response
    243          
    244          \param[in] resp - pointer to response
    245          ******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    246          static void ZCL_ReadAttributeResp(ZCL_Notify_t *ntfy)
    247          {
   \                     ZCL_ReadAttributeResp: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB0AA             SUB      SP,SP,#+168
   \   00000004   0x0004             MOVS     R4,R0
    248            ZCL_NextElement_t element;
    249            ZCL_ReadAttributeResp_t *readAttributeResp;
    250            int16_t attributeValue;
    251          
    252            if (ZCL_SUCCESS_STATUS == ntfy->status)
   \   00000006   0x7820             LDRB     R0,[R4, #+0]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD133             BNE      ??ZCL_ReadAttributeResp_0
    253            {
    254              element.id            = ZCL_READ_ATTRIBUTES_RESPONSE_COMMAND_ID;
   \   0000000C   0xA801             ADD      R0,SP,#+4
   \   0000000E   0x2101             MOVS     R1,#+1
   \   00000010   0x7001             STRB     R1,[R0, #+0]
    255              element.payloadLength = ntfy->responseLength;
   \   00000012   0x7A21             LDRB     R1,[R4, #+8]
   \   00000014   0x7041             STRB     R1,[R0, #+1]
    256              element.payload       = ntfy->responsePayload;
   \   00000016   0x68E0             LDR      R0,[R4, #+12]
   \   00000018   0x9002             STR      R0,[SP, #+8]
    257              element.content       = NULL;
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x9003             STR      R0,[SP, #+12]
    258          
    259              ZCL_GetNextElement(&element);
   \   0000001E   0xA801             ADD      R0,SP,#+4
   \   00000020   0x.... 0x....      BL       ZCL_GetNextElement
    260              readAttributeResp = (ZCL_ReadAttributeResp_t *) element.content;
   \   00000024   0x9C03             LDR      R4,[SP, #+12]
    261          
    262              if (readAttributeCallback)
   \   00000026   0x....             LDR      R0,??DataTable14_4
   \   00000028   0x6801             LDR      R1,[R0, #+0]
   \   0000002A   0x0008             MOVS     R0,R1
   \   0000002C   0xD001             BEQ      ??ZCL_ReadAttributeResp_1
    263                readAttributeCallback((void *)&readAttributeResp->value[0]);
   \   0000002E   0x1D20             ADDS     R0,R4,#+4
   \   00000030   0x4788             BLX      R1
    264          
    265              if(ZCL_SUCCESS_STATUS == readAttributeResp->status)
   \                     ??ZCL_ReadAttributeResp_1: (+1)
   \   00000032   0x78A0             LDRB     R0,[R4, #+2]
   \   00000034   0x2800             CMP      R0,#+0
   \   00000036   0xD116             BNE      ??ZCL_ReadAttributeResp_2
    266              {
    267                memcpy(&attributeValue, &readAttributeResp->value[0], sizeof(uint16_t));
   \   00000038   0x1D20             ADDS     R0,R4,#+4
   \   0000003A   0x4669             MOV      R1,SP
   \   0000003C   0x7802             LDRB     R2,[R0, #0]
   \   0000003E   0x700A             STRB     R2,[R1, #0]
   \   00000040   0x7842             LDRB     R2,[R0, #+1]
   \   00000042   0x704A             STRB     R2,[R1, #+1]
    268                LOG_STRING(readAttrSuccessStr, " <-Read Temperature Measurement attribute (0x%x) response: success\r\n  t = %d\r\n");
   \   00000044   0xA815             ADD      R0,SP,#+84
   \   00000046   0xBF00             Nop      
   \   00000048   0x....             ADR.N    R1,?_1
   \   0000004A   0x2250             MOVS     R2,#+80
   \   0000004C   0x.... 0x....      BL       __aeabi_memcpy4
    269                appSnprintf(readAttrSuccessStr, (unsigned)readAttributeResp->id, attributeValue);
   \   00000050   0x7821             LDRB     R1,[R4, #+0]
   \   00000052   0x7860             LDRB     R0,[R4, #+1]
   \   00000054   0x0600             LSLS     R0,R0,#+24
   \   00000056   0x0C00             LSRS     R0,R0,#+16
   \   00000058   0x4301             ORRS     R1,R1,R0
   \   0000005A   0x9A00             LDR      R2,[SP, #+0]
   \   0000005C   0xB212             SXTH     R2,R2
   \   0000005E   0xA815             ADD      R0,SP,#+84
   \   00000060   0x.... 0x....      BL       appSnprintf
   \   00000064   0xE010             B        ??ZCL_ReadAttributeResp_3
    270              }
    271              else
    272              {
    273                LOG_STRING(readAttrFailStr, " +Read Temperature Measurement attribute failed: status = 0x%2x\r\n");
   \                     ??ZCL_ReadAttributeResp_2: (+1)
   \   00000066   0xA804             ADD      R0,SP,#+16
   \   00000068   0x....             ADR.N    R1,?_2
   \   0000006A   0x2244             MOVS     R2,#+68
   \   0000006C   0x.... 0x....      BL       __aeabi_memcpy4
    274                appSnprintf(readAttrFailStr, (unsigned)readAttributeResp->status);
   \   00000070   0x78A1             LDRB     R1,[R4, #+2]
   \   00000072   0xE006             B        ??ZCL_ReadAttributeResp_4
    275              }
    276            }
    277            else
    278            {
    279              LOG_STRING(readAttrFailStr, " +Read Temperature Measurement attribute failed: status = 0x%2x\r\n");
   \                     ??ZCL_ReadAttributeResp_0: (+1)
   \   00000074   0xA804             ADD      R0,SP,#+16
   \   00000076   0xBF00             Nop      
   \   00000078   0x....             ADR.N    R1,?_3
   \   0000007A   0x2244             MOVS     R2,#+68
   \   0000007C   0x.... 0x....      BL       __aeabi_memcpy4
    280              appSnprintf(readAttrFailStr, (unsigned)ntfy->status);
   \   00000080   0x7821             LDRB     R1,[R4, #+0]
   \                     ??ZCL_ReadAttributeResp_4: (+1)
   \   00000082   0xA804             ADD      R0,SP,#+16
   \   00000084   0x.... 0x....      BL       appSnprintf
    281            }
    282          }
   \                     ??ZCL_ReadAttributeResp_3: (+1)
   \   00000088   0xB02A             ADD      SP,SP,#+168
   \   0000008A   0xBD10             POP      {R4,PC}          ;; return
    283          
    284          /**************************************************************************//**
    285          \brief Indication of write attribute response
    286          
    287          \param[in] resp - pointer to response
    288          ******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    289          static void ZCL_WriteAttributeResp(ZCL_Notify_t *ntfy)
    290          {
   \                     ZCL_WriteAttributeResp: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB0A4             SUB      SP,SP,#+144
   \   00000004   0x0004             MOVS     R4,R0
    291            ZCL_NextElement_t element;
    292            ZCL_WriteAttributeResp_t *writeAttributeResp;
    293          
    294            if (ZCL_SUCCESS_STATUS == ntfy->status)
   \   00000006   0x7820             LDRB     R0,[R4, #+0]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD121             BNE      ??ZCL_WriteAttributeResp_0
    295            {
    296              element.id            = ZCL_WRITE_ATTRIBUTES_RESPONSE_COMMAND_ID;
   \   0000000C   0x4668             MOV      R0,SP
   \   0000000E   0x2104             MOVS     R1,#+4
   \   00000010   0x7001             STRB     R1,[R0, #+0]
    297              element.payloadLength = ntfy->responseLength;
   \   00000012   0x7A21             LDRB     R1,[R4, #+8]
   \   00000014   0x7041             STRB     R1,[R0, #+1]
    298              element.payload       = ntfy->responsePayload;
   \   00000016   0x68E0             LDR      R0,[R4, #+12]
   \   00000018   0x9001             STR      R0,[SP, #+4]
    299              element.content       = NULL;
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x9002             STR      R0,[SP, #+8]
    300          
    301              ZCL_GetNextElement(&element);
   \   0000001E   0x4668             MOV      R0,SP
   \   00000020   0x.... 0x....      BL       ZCL_GetNextElement
    302              writeAttributeResp = (ZCL_WriteAttributeResp_t *) element.content;
   \   00000024   0x9C02             LDR      R4,[SP, #+8]
    303          
    304              if (writeAttributeCallback)
   \   00000026   0x....             LDR      R0,??DataTable14_6
   \   00000028   0x6800             LDR      R0,[R0, #+0]
   \   0000002A   0x0001             MOVS     R1,R0
   \   0000002C   0xD000             BEQ      ??ZCL_WriteAttributeResp_1
    305                writeAttributeCallback();
   \   0000002E   0x4780             BLX      R0
    306          
    307              if(ZCL_SUCCESS_STATUS == writeAttributeResp->status)
   \                     ??ZCL_WriteAttributeResp_1: (+1)
   \   00000030   0x7820             LDRB     R0,[R4, #+0]
   \   00000032   0x2800             CMP      R0,#+0
   \   00000034   0xD108             BNE      ??ZCL_WriteAttributeResp_2
    308              {
    309                LOG_STRING(writeAttrSuccessStr, " <-Write Temperature Measurement attribute response: success\r\n");
   \   00000036   0xA814             ADD      R0,SP,#+80
   \   00000038   0x....             ADR.N    R1,?_4
   \   0000003A   0x2240             MOVS     R2,#+64
   \   0000003C   0x.... 0x....      BL       __aeabi_memcpy4
    310                appSnprintf(writeAttrSuccessStr);
   \   00000040   0xA814             ADD      R0,SP,#+80
   \   00000042   0x.... 0x....      BL       appSnprintf
   \   00000046   0xE00D             B        ??ZCL_WriteAttributeResp_3
    311              }
    312              else
    313              {
    314                LOG_STRING(writeAttrFailStrTwo, " +Write Temperature Measurement attribute failed: status = 0x%x\r\n");
   \                     ??ZCL_WriteAttributeResp_2: (+1)
   \   00000048   0xA803             ADD      R0,SP,#+12
   \   0000004A   0xBF00             Nop      
   \   0000004C   0x....             ADR.N    R1,?_5
   \   0000004E   0xE002             B        ??ZCL_WriteAttributeResp_4
    315                appSnprintf(writeAttrFailStrTwo, (unsigned)writeAttributeResp->status);
    316              }
    317            }
    318            else
    319            {
    320              LOG_STRING(writeAttrFailStrTwo, " +Write Temperature Measurement attribute failed: status = 0x%x\r\n");
   \                     ??ZCL_WriteAttributeResp_0: (+1)
   \   00000050   0xA803             ADD      R0,SP,#+12
   \   00000052   0xBF00             Nop      
   \   00000054   0x....             ADR.N    R1,?_6
   \                     ??ZCL_WriteAttributeResp_4: (+1)
   \   00000056   0x2244             MOVS     R2,#+68
   \   00000058   0x.... 0x....      BL       __aeabi_memcpy4
    321              appSnprintf(writeAttrFailStrTwo, (unsigned)ntfy->status);
   \   0000005C   0x7821             LDRB     R1,[R4, #+0]
   \   0000005E   0xA803             ADD      R0,SP,#+12
   \   00000060   0x.... 0x....      BL       appSnprintf
    322            }
    323          }
   \                     ??ZCL_WriteAttributeResp_3: (+1)
   \   00000064   0xB024             ADD      SP,SP,#+144
   \   00000066   0xBD10             POP      {R4,PC}          ;; return
    324          
    325          /**************************************************************************//**
    326          \brief Indication of configure reporting response
    327          
    328          \param[in] resp - pointer to response
    329          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    330          static void ZCL_ConfigureReportingResp(ZCL_Notify_t *ntfy)
    331          {
    332            (void)ntfy;
    333          }
   \                     ZCL_ConfigureReportingResp: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   0x00000402         DC32     0x402

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_1:
   \   00000000   0x........         DC32     thTemperatureMeasurementReportInd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_2:
   \   00000000   0x........         DC32     thTemperatureMeasurementClusterServerAttributes

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_3:
   \   00000000   0xFFFF954D         DC32     0xffff954d

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_4:
   \   00000000   0x........         DC32     readAttributeCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_5:
   \   00000000   0x........         DC32     ZCL_ReadAttributeResp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_6:
   \   00000000   0x........         DC32     writeAttributeCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_7:
   \   00000000   0x........         DC32     ZCL_WriteAttributeResp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_8:
   \   00000000   0x........         DC32     ZCL_ConfigureReportingResp

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x3C 0x2D          DC8 "<-Temperature Measurement Attr Report: t = %d\015\012"
   \              0x54 0x65    
   \              0x6D 0x70    
   \              0x65 0x72    
   \              0x61 0x74    
   \              0x75 0x72    
   \              0x65 0x20    
   \              0x4D 0x65    
   \              0x61 0x73    
   \              0x75 0x72    
   \              0x65 0x6D    
   \              0x65 0x6E    
   \              0x74 0x20    
   \              0x41 0x74    
   \              0x74 0x72    
   \              0x20 0x52    
   \              0x65 0x70    
   \              0x6F 0x72    
   \              0x74 0x3A    
   \              0x20 0x74    
   \              0x20 0x3D    
   \              0x20 0x25    
   \              0x64 0x0D    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x20 0x3C          DC8 20H, 3CH, 2DH, 52H, 65H, 61H, 64H, 20H
   \              0x2D 0x52    
   \              0x65 0x61    
   \              0x64 0x20    
   \   00000008   0x54 0x65          DC8 54H, 65H, 6DH, 70H, 65H, 72H, 61H, 74H
   \              0x6D 0x70    
   \              0x65 0x72    
   \              0x61 0x74    
   \   00000010   0x75 0x72          DC8 75H, 72H, 65H, 20H, 4DH, 65H, 61H, 73H
   \              0x65 0x20    
   \              0x4D 0x65    
   \              0x61 0x73    
   \   00000018   0x75 0x72          DC8 75H, 72H, 65H, 6DH, 65H, 6EH, 74H, 20H
   \              0x65 0x6D    
   \              0x65 0x6E    
   \              0x74 0x20    
   \   00000020   0x61 0x74          DC8 61H, 74H, 74H, 72H, 69H, 62H, 75H, 74H
   \              0x74 0x72    
   \              0x69 0x62    
   \              0x75 0x74    
   \   00000028   0x65 0x20          DC8 65H, 20H, 28H, 30H, 78H, 25H, 78H, 29H
   \              0x28 0x30    
   \              0x78 0x25    
   \              0x78 0x29    
   \   00000030   0x20 0x72          DC8 20H, 72H, 65H, 73H, 70H, 6FH, 6EH, 73H
   \              0x65 0x73    
   \              0x70 0x6F    
   \              0x6E 0x73    
   \   00000038   0x65 0x3A          DC8 65H, 3AH, 20H, 73H, 75H, 63H, 63H, 65H
   \              0x20 0x73    
   \              0x75 0x63    
   \              0x63 0x65    
   \   00000040   0x73 0x73          DC8 73H, 73H, 0DH, 0AH, 20H, 20H, 74H, 20H
   \              0x0D 0x0A    
   \              0x20 0x20    
   \              0x74 0x20    
   \   00000048   0x3D 0x20          DC8 3DH, 20H, 25H, 64H, 0DH, 0AH, 0
   \              0x25 0x64    
   \              0x0D 0x0A    
   \              0x00         
   \   0000004F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x20 0x2B          DC8 20H, 2BH, 52H, 65H, 61H, 64H, 20H, 54H
   \              0x52 0x65    
   \              0x61 0x64    
   \              0x20 0x54    
   \   00000008   0x65 0x6D          DC8 65H, 6DH, 70H, 65H, 72H, 61H, 74H, 75H
   \              0x70 0x65    
   \              0x72 0x61    
   \              0x74 0x75    
   \   00000010   0x72 0x65          DC8 72H, 65H, 20H, 4DH, 65H, 61H, 73H, 75H
   \              0x20 0x4D    
   \              0x65 0x61    
   \              0x73 0x75    
   \   00000018   0x72 0x65          DC8 72H, 65H, 6DH, 65H, 6EH, 74H, 20H, 61H
   \              0x6D 0x65    
   \              0x6E 0x74    
   \              0x20 0x61    
   \   00000020   0x74 0x74          DC8 74H, 74H, 72H, 69H, 62H, 75H, 74H, 65H
   \              0x72 0x69    
   \              0x62 0x75    
   \              0x74 0x65    
   \   00000028   0x20 0x66          DC8 20H, 66H, 61H, 69H, 6CH, 65H, 64H, 3AH
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x3A    
   \   00000030   0x20 0x73          DC8 20H, 73H, 74H, 61H, 74H, 75H, 73H, 20H
   \              0x74 0x61    
   \              0x74 0x75    
   \              0x73 0x20    
   \   00000038   0x3D 0x20          DC8 3DH, 20H, 30H, 78H, 25H, 32H, 78H, 0DH
   \              0x30 0x78    
   \              0x25 0x32    
   \              0x78 0x0D    
   \   00000040   0x0A 0x00          DC8 0AH, 0
   \   00000042   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_3:
   \   00000000   0x20 0x2B          DC8 20H, 2BH, 52H, 65H, 61H, 64H, 20H, 54H
   \              0x52 0x65    
   \              0x61 0x64    
   \              0x20 0x54    
   \   00000008   0x65 0x6D          DC8 65H, 6DH, 70H, 65H, 72H, 61H, 74H, 75H
   \              0x70 0x65    
   \              0x72 0x61    
   \              0x74 0x75    
   \   00000010   0x72 0x65          DC8 72H, 65H, 20H, 4DH, 65H, 61H, 73H, 75H
   \              0x20 0x4D    
   \              0x65 0x61    
   \              0x73 0x75    
   \   00000018   0x72 0x65          DC8 72H, 65H, 6DH, 65H, 6EH, 74H, 20H, 61H
   \              0x6D 0x65    
   \              0x6E 0x74    
   \              0x20 0x61    
   \   00000020   0x74 0x74          DC8 74H, 74H, 72H, 69H, 62H, 75H, 74H, 65H
   \              0x72 0x69    
   \              0x62 0x75    
   \              0x74 0x65    
   \   00000028   0x20 0x66          DC8 20H, 66H, 61H, 69H, 6CH, 65H, 64H, 3AH
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x3A    
   \   00000030   0x20 0x73          DC8 20H, 73H, 74H, 61H, 74H, 75H, 73H, 20H
   \              0x74 0x61    
   \              0x74 0x75    
   \              0x73 0x20    
   \   00000038   0x3D 0x20          DC8 3DH, 20H, 30H, 78H, 25H, 32H, 78H, 0DH
   \              0x30 0x78    
   \              0x25 0x32    
   \              0x78 0x0D    
   \   00000040   0x0A 0x00          DC8 0AH, 0
   \   00000042   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_4:
   \   00000000   0x20 0x3C          DC8 20H, 3CH, 2DH, 57H, 72H, 69H, 74H, 65H
   \              0x2D 0x57    
   \              0x72 0x69    
   \              0x74 0x65    
   \   00000008   0x20 0x54          DC8 20H, 54H, 65H, 6DH, 70H, 65H, 72H, 61H
   \              0x65 0x6D    
   \              0x70 0x65    
   \              0x72 0x61    
   \   00000010   0x74 0x75          DC8 74H, 75H, 72H, 65H, 20H, 4DH, 65H, 61H
   \              0x72 0x65    
   \              0x20 0x4D    
   \              0x65 0x61    
   \   00000018   0x73 0x75          DC8 73H, 75H, 72H, 65H, 6DH, 65H, 6EH, 74H
   \              0x72 0x65    
   \              0x6D 0x65    
   \              0x6E 0x74    
   \   00000020   0x20 0x61          DC8 20H, 61H, 74H, 74H, 72H, 69H, 62H, 75H
   \              0x74 0x74    
   \              0x72 0x69    
   \              0x62 0x75    
   \   00000028   0x74 0x65          DC8 74H, 65H, 20H, 72H, 65H, 73H, 70H, 6FH
   \              0x20 0x72    
   \              0x65 0x73    
   \              0x70 0x6F    
   \   00000030   0x6E 0x73          DC8 6EH, 73H, 65H, 3AH, 20H, 73H, 75H, 63H
   \              0x65 0x3A    
   \              0x20 0x73    
   \              0x75 0x63    
   \   00000038   0x63 0x65          DC8 63H, 65H, 73H, 73H, 0DH, 0AH, 0
   \              0x73 0x73    
   \              0x0D 0x0A    
   \              0x00         
   \   0000003F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_5:
   \   00000000   0x20 0x2B          DC8 20H, 2BH, 57H, 72H, 69H, 74H, 65H, 20H
   \              0x57 0x72    
   \              0x69 0x74    
   \              0x65 0x20    
   \   00000008   0x54 0x65          DC8 54H, 65H, 6DH, 70H, 65H, 72H, 61H, 74H
   \              0x6D 0x70    
   \              0x65 0x72    
   \              0x61 0x74    
   \   00000010   0x75 0x72          DC8 75H, 72H, 65H, 20H, 4DH, 65H, 61H, 73H
   \              0x65 0x20    
   \              0x4D 0x65    
   \              0x61 0x73    
   \   00000018   0x75 0x72          DC8 75H, 72H, 65H, 6DH, 65H, 6EH, 74H, 20H
   \              0x65 0x6D    
   \              0x65 0x6E    
   \              0x74 0x20    
   \   00000020   0x61 0x74          DC8 61H, 74H, 74H, 72H, 69H, 62H, 75H, 74H
   \              0x74 0x72    
   \              0x69 0x62    
   \              0x75 0x74    
   \   00000028   0x65 0x20          DC8 65H, 20H, 66H, 61H, 69H, 6CH, 65H, 64H
   \              0x66 0x61    
   \              0x69 0x6C    
   \              0x65 0x64    
   \   00000030   0x3A 0x20          DC8 3AH, 20H, 73H, 74H, 61H, 74H, 75H, 73H
   \              0x73 0x74    
   \              0x61 0x74    
   \              0x75 0x73    
   \   00000038   0x20 0x3D          DC8 20H, 3DH, 20H, 30H, 78H, 25H, 78H, 0DH
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x78 0x0D    
   \   00000040   0x0A 0x00          DC8 0AH, 0
   \   00000042   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_6:
   \   00000000   0x20 0x2B          DC8 20H, 2BH, 57H, 72H, 69H, 74H, 65H, 20H
   \              0x57 0x72    
   \              0x69 0x74    
   \              0x65 0x20    
   \   00000008   0x54 0x65          DC8 54H, 65H, 6DH, 70H, 65H, 72H, 61H, 74H
   \              0x6D 0x70    
   \              0x65 0x72    
   \              0x61 0x74    
   \   00000010   0x75 0x72          DC8 75H, 72H, 65H, 20H, 4DH, 65H, 61H, 73H
   \              0x65 0x20    
   \              0x4D 0x65    
   \              0x61 0x73    
   \   00000018   0x75 0x72          DC8 75H, 72H, 65H, 6DH, 65H, 6EH, 74H, 20H
   \              0x65 0x6D    
   \              0x65 0x6E    
   \              0x74 0x20    
   \   00000020   0x61 0x74          DC8 61H, 74H, 74H, 72H, 69H, 62H, 75H, 74H
   \              0x74 0x72    
   \              0x69 0x62    
   \              0x75 0x74    
   \   00000028   0x65 0x20          DC8 65H, 20H, 66H, 61H, 69H, 6CH, 65H, 64H
   \              0x66 0x61    
   \              0x69 0x6C    
   \              0x65 0x64    
   \   00000030   0x3A 0x20          DC8 3AH, 20H, 73H, 74H, 61H, 74H, 75H, 73H
   \              0x73 0x74    
   \              0x61 0x74    
   \              0x75 0x73    
   \   00000038   0x20 0x3D          DC8 20H, 3DH, 20H, 30H, 78H, 25H, 78H, 0DH
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x78 0x0D    
   \   00000040   0x0A 0x00          DC8 0AH, 0
   \   00000042   0x00 0x00          DC8 0, 0
    334          
    335          #endif // APP_DEVICE_TYPE_THERMOSTAT
    336          
    337          // eof thTemperatureMeasurementCluster.c

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   ZCL_ConfigureReportingResp
     176   ZCL_ReadAttributeResp
       176   -- Indirect call
       176   -> ZCL_GetNextElement
       176   -> __aeabi_memcpy4
       176   -> appSnprintf
     152   ZCL_WriteAttributeResp
       152   -- Indirect call
       152   -> ZCL_GetNextElement
       152   -> __aeabi_memcpy4
       152   -> appSnprintf
       8   thTempeartureMeasurementUpdateMeasuredValue
         8   -> ZCL_ReportOnChangeIfNeeded
       8   thTempeartureMeasurementUpdateTolerance
         8   -> ZCL_ReportOnChangeIfNeeded
       8   thTemperatureMeasurementClusterInit
         8   -> HAL_StartAppTimer
         8   -> ZCL_GetCluster
      56   thTemperatureMeasurementConfigureReporting
        56   -> ZCL_PutNextElement
        56   -> commandManagerSendAttribute
        56   -> fillCommandRequest
        56   -> fillDstAddressing
        56   -> getFreeCommand
      48   thTemperatureMeasurementReadAttribute
        48   -> ZCL_PutNextElement
        48   -> commandManagerSendAttribute
        48   -> fillCommandRequest
        48   -> fillDstAddressing
        48   -> getFreeCommand
      56   thTemperatureMeasurementReportInd
        56   -> __aeabi_memcpy4
        56   -> appSnprintf
      32   thTemperatureMeasurementWriteAttribute
        32   -> __aeabi_memcpy
        32   -> commandManagerSendAttribute
        32   -> fillCommandRequest
        32   -> fillDstAddressing
        32   -> getFreeCommand


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable14
       4  ??DataTable14_1
       4  ??DataTable14_2
       4  ??DataTable14_3
       4  ??DataTable14_4
       4  ??DataTable14_5
       4  ??DataTable14_6
       4  ??DataTable14_7
       4  ??DataTable14_8
      48  ?_0
      80  ?_1
      68  ?_2
      68  ?_3
      64  ?_4
      68  ?_5
      68  ?_6
       2  ZCL_ConfigureReportingResp
     140  ZCL_ReadAttributeResp
     104  ZCL_WriteAttributeResp
       4  readAttributeCallback
      34  thTempeartureMeasurementUpdateMeasuredValue
      16  thTempeartureMeasurementUpdateTolerance
      64  thTemperatureMeasurementClusterInit
      84  thTemperatureMeasurementClusterServerAttributes
          readTemperatureimer
     108  thTemperatureMeasurementConfigureReporting
      94  thTemperatureMeasurementReadAttribute
      42  thTemperatureMeasurementReportInd
     100  thTemperatureMeasurementWriteAttribute
       4  writeAttributeCallback

 
     8 bytes in section .bss
    84 bytes in section .data
 1 204 bytes in section .text
 
 1 204 bytes of CODE memory
    92 bytes of DATA memory

Errors: none
Warnings: none
