###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.4.8167/W32 for ARM        31/Mar/2015  18:41:00
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\thermostat\src\thFanControlCluster.c
#    Command line =  
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\thermostat\src\thFanControlCluster.c
#        -D BOARD_SAMR21 -D BOARD_QTOUCH_XPRO -D AT86RF233 -D ATSAMR21G18A -D
#        HAL_8MHz -D STACK_TYPE_ALL -D STDLINK_SECURITY_MODE -lC
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects\All_StdlinkSec_SamR21_Atsamr21g18a_Rf233_8Mhz/List\
#        --diag_suppress Pa050,Pe188 -o
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects\All_StdlinkSec_SamR21_Atsamr21g18a_Rf233_8Mhz/Obj\
#        --debug --endian=little --cpu=Cortex-M0+ -e --fpu=None --dlib_config
#        "C:\Program Files\IAR Systems\Embedded Workbench
#        7.30\arm\INC\c\DLib_Config_Full.h" --preinclude
#        MakerulesBc_All_StdlinkSec_Atsamr21g18a_Rf233_Iar.h -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/..\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../dimmableLight/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../dimmerSwitch/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../multiSensor/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../thermostat/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../ias_ace/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../combinedInterface/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../common/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../common/clusters/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/BSP/SAMR21/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/SystemEnvironment/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/lib\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/HAL/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/BSP\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/BSP/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/BSP/QTouch_XPRO/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/NWK/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/NWK/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZDO/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZDO/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/APS/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/APS/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/SystemEnvironment/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ConfigServer/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ConfigServer/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/PersistDataServer/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/PersistDataServer/std/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/PersistDataServer/wl/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Types/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Util/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Timer/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Task/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_ErrH/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Log/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Memory/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Init/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/S_Nv/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/S_XNv/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/D_Nv/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/D_XNv/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/D_XNv/src\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/S_XNv/src\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/Security/TrustCentre/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/Security/ServiceProvider/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/HAL/drivers/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/HAL/drivers/VCP/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/HAL/cortexm0+/atsamr21/common/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZCL/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZCL/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_ENV/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_HWI/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_HWD_PHY/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_HWD_PHY/RF231_RF212/PHY/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_HWD_PHY/RF231_RF212/MAC_HWD/include\
#        -Ohz --use_c++_inline
#    List file    =  
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects\All_StdlinkSec_SamR21_Atsamr21g18a_Rf233_8Mhz/List\thFanControlCluster.lst
#    Object file  =  
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects\All_StdlinkSec_SamR21_Atsamr21g18a_Rf233_8Mhz/Obj\thFanControlCluster.o
#
###############################################################################

D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\thermostat\src\thFanControlCluster.c
      1          /**************************************************************************//**
      2            \file thFanControlCluster.c
      3          
      4            \brief
      5              Thermostat Fan Control cluster implementation.
      6          
      7            \author
      8              Atmel Corporation: http://www.atmel.com \n
      9              Support email: avr@atmel.com
     10          
     11            Copyright (c) 2008-2015, Atmel Corporation. All rights reserved.
     12            Licensed under Atmel's Limited License Agreement (BitCloudTM).
     13          
     14            \internal
     15              History:
     16              06.11.14 Viswanadham Kotla - Created.
     17          ******************************************************************************/
     18          #ifdef APP_DEVICE_TYPE_THERMOSTAT
     19          
     20          /******************************************************************************
     21                              Includes section
     22          ******************************************************************************/
     23          #include <thfanControlCluster.h>
     24          #if APP_ENABLE_CONSOLE == 1
     25          #include <uartManager.h>
     26          #endif
     27          #include <commandManager.h>
     28          #include <zclAttributes.h>
     29          #include <haClusters.h>
     30          
     31          /******************************************************************************
     32                              Global variables
     33          ******************************************************************************/

   \                                 In section .data, align 4
     34          ZCL_FanControlClusterServerAttributes_t thFanControlClusterServerAttributes =
   \                     thFanControlClusterServerAttributes:
   \   00000000   0x0000             DC16 0
   \   00000002   0x30 0x10          DC8 48, 16, 0, 0, 6
   \              0x00 0x00    
   \              0x06         
   \   00000007   0x0001             DC16 1
   \   00000009   0x30 0x10          DC8 48, 16, 0, 0, 4, 0, 0
   \              0x00 0x00    
   \              0x04 0x00    
   \              0x00         
   \   00000010   0x00               DC8 0
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         
   \   00000014   0x00000000         DC32 0H
   \   00000018   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000020   0x........         DC32 thFanControlEventListener
     35          {
     36            ZCL_DEFINE_FAN_CONTROL_CLUSTER_SERVER_ATTRIBUTES()
     37          };
     38          
     39          /******************************************************************************
     40                              Prototypes section
     41          ******************************************************************************/
     42          
     43          static void thFanControlAttrEventInd(ZCL_Addressing_t *addressing, ZCL_AttributeId_t attributeId, ZCL_AttributeEvent_t event);
     44          static void thFanControlEventListener(SYS_EventId_t eventId, SYS_EventData_t data);
     45          static void thFanControlsetFanOnOff(ZCL_FanControlFanMode_t fanState);
     46          
     47          /******************************************************************************
     48                              Local variables
     49          ******************************************************************************/
     50          static SYS_EventReceiver_t thFanControlEvent = { .func = thFanControlEventListener};
     51          static ZCL_FanControlFanMode_t fanMotorControl = ZCL_FC_FAN_MODE_OFF;
     52          /*****************************************************************************/
     53          
     54          /******************************************************************************
     55                              Implementation section
     56          ******************************************************************************/
     57          /**************************************************************************//**
     58          \brief Initializes Fan Control cluster
     59          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     60          void fanControlClusterInit(void)
     61          {
   \                     fanControlClusterInit: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     62            ZCL_Cluster_t *cluster = ZCL_GetCluster(APP_SRC_ENDPOINT_ID, FAN_CONTROL_CLUSTER_ID, ZCL_CLUSTER_SIDE_SERVER);  
   \   00000002   0x2200             MOVS     R2,#+0
   \   00000004   0x....             LDR      R1,??DataTable7  ;; 0x202
   \   00000006   0x2019             MOVS     R0,#+25
   \   00000008   0x.... 0x....      BL       ZCL_GetCluster
     63          
     64            if (cluster)
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD001             BEQ      ??fanControlClusterInit_0
     65            {
     66              cluster->ZCL_AttributeEventInd = thFanControlAttrEventInd;
   \   00000010   0x....             LDR      R1,??DataTable7_1
   \   00000012   0x61C1             STR      R1,[R0, #+28]
     67            }
     68            thFanControlClusterServerAttributes.fanMode.value = ZCL_FAN_CONTROL_CL_FAN_MODE_SER_ATTR_DEFAULT_VAL;
   \                     ??fanControlClusterInit_0: (+1)
   \   00000014   0x....             LDR      R1,??DataTable7_2
   \   00000016   0x2005             MOVS     R0,#+5
   \   00000018   0x7108             STRB     R0,[R1, #+4]
     69            thFanControlClusterServerAttributes.fanModeSequence.value = ZCL_FAN_CONTROL_CL_FAN_SEQUENCE_OPERATION_SER_ATTR_DEFAULT_VAL;
   \   0000001A   0x2002             MOVS     R0,#+2
   \   0000001C   0x72C8             STRB     R0,[R1, #+11]
     70            SYS_SubscribeToEvent(BC_ZCL_EVENT_ACTION_REQUEST, &thFanControlEvent);
   \   0000001E   0x3114             ADDS     R1,R1,#+20
   \   00000020   0x203A             MOVS     R0,#+58
   \   00000022   0x.... 0x....      BL       SYS_SubscribeToEvent
     71          }
   \   00000026   0xBD01             POP      {R0,PC}          ;; return
     72          
     73          /**************************************************************************//**
     74          \brief Attribute Event indication handler(to indicate when attr values have
     75                  read or written)
     76          
     77          \param[in] addressing - pointer to addressing information;
     78          \param[in] reportLength - data payload length;
     79          \param[in] reportPayload - data pointer
     80          ******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
     81          static void thFanControlAttrEventInd(ZCL_Addressing_t *addressing, ZCL_AttributeId_t attributeId, ZCL_AttributeEvent_t event)
     82          {
   \                     thFanControlAttrEventInd: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
   \   00000004   0x000C             MOVS     R4,R1
   \   00000006   0x0015             MOVS     R5,R2
     83          #if APP_ENABLE_CONSOLE == 1
     84            LOG_STRING(AttrEventIndStr, "<-Attr ID 0x%x event 0x%x\r\n");
   \   00000008   0x4668             MOV      R0,SP
   \   0000000A   0xBF00             Nop      
   \   0000000C   0x....             ADR.N    R1,?_0
   \   0000000E   0x221C             MOVS     R2,#+28
   \   00000010   0x.... 0x....      BL       __aeabi_memcpy4
     85            appSnprintf(AttrEventIndStr, attributeId, event);
   \   00000014   0x002A             MOVS     R2,R5
   \   00000016   0x0021             MOVS     R1,R4
   \   00000018   0x4668             MOV      R0,SP
   \   0000001A   0x.... 0x....      BL       appSnprintf
     86          #endif
     87            if ( (attributeId == ZCL_FAN_CONTROL_CLUSTER_FAN_MODE_SERVER_ATTRIBUTE_ID) 
     88                     && (event == ZCL_WRITE_ATTRIBUTE_EVENT) )
   \   0000001E   0x2C00             CMP      R4,#+0
   \   00000020   0xD111             BNE      ??thFanControlAttrEventInd_0
   \   00000022   0x2D01             CMP      R5,#+1
   \   00000024   0xD10F             BNE      ??thFanControlAttrEventInd_0
     89            {
     90              switch(thFanControlClusterServerAttributes.fanMode.value)
   \   00000026   0x....             LDR      R1,??DataTable7_2
   \   00000028   0x7908             LDRB     R0,[R1, #+4]
   \   0000002A   0x0002             MOVS     R2,R0
   \   0000002C   0xD009             BEQ      ??thFanControlAttrEventInd_1
   \   0000002E   0x1E42             SUBS     R2,R0,#+1
   \   00000030   0x2A02             CMP      R2,#+2
   \   00000032   0xD904             BLS      ??thFanControlAttrEventInd_2
   \   00000034   0x1ED2             SUBS     R2,R2,#+3
   \   00000036   0xD004             BEQ      ??thFanControlAttrEventInd_1
   \   00000038   0x1E52             SUBS     R2,R2,#+1
   \   0000003A   0xD104             BNE      ??thFanControlAttrEventInd_0
     91              {
     92                case ZCL_FC_FAN_MODE_LOW:
     93                case ZCL_FC_FAN_MODE_MEDIUM:
     94                case ZCL_FC_FAN_MODE_HIGH:
     95                  fanMotorControl = thFanControlClusterServerAttributes.fanMode.value;
     96                  break;
     97                case ZCL_FC_FAN_MODE_AUTO:
     98                  /*Specification does not define this case, hence setting it to medium
     99                  User may change for actual fan control*/
    100                  fanMotorControl = ZCL_FC_FAN_MODE_MEDIUM;      
   \   0000003C   0x2002             MOVS     R0,#+2
   \                     ??thFanControlAttrEventInd_2: (+1)
   \   0000003E   0x7408             STRB     R0,[R1, #+16]
    101                  break;
   \   00000040   0xE001             B        ??thFanControlAttrEventInd_0
    102                case ZCL_FC_FAN_MODE_OFF:
    103                case ZCL_FC_FAN_MODE_ON:
    104                  thFanControlsetFanOnOff(thFanControlClusterServerAttributes.fanMode.value);
   \                     ??thFanControlAttrEventInd_1: (+1)
   \   00000042   0x.... 0x....      BL       thFanControlsetFanOnOff
    105                  break;
    106              }
    107            }
    108            (void)addressing;
    109          }
   \                     ??thFanControlAttrEventInd_0: (+1)
   \   00000046   0xB007             ADD      SP,SP,#+28
   \   00000048   0xBD30             POP      {R4,R5,PC}       ;; return
    110          
    111          /**************************************************************************//**
    112            \brief  ZCL action request event handler, 
    113                    handles the ZCL_ACTION_WRITE_ATTR_REQUEST for attribute specific validation
    114          
    115            \param[in] ev - must be BC_ZCL_EVENT_ACTION_REQUEST.
    116            \param[in] data - this field must contain pointer to the BcZCLActionReq_t structure,
    117          
    118            \return None.
    119           ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    120          static void thFanControlEventListener(SYS_EventId_t eventId, SYS_EventData_t data)
    121          {
    122            BcZCLActionReq_t *const actionReq = (BcZCLActionReq_t*)data;  
    123            ZCL_FanControlFanMode_t requestedValue = 0;
    124          
    125            if (BC_ZCL_EVENT_ACTION_REQUEST != eventId)
   \                     thFanControlEventListener: (+1)
   \   00000000   0x283A             CMP      R0,#+58
   \   00000002   0xD127             BNE      ??thFanControlEventListener_0
    126              return;
    127            
    128            if (ZCL_ACTION_WRITE_ATTR_REQUEST != actionReq->action)
   \   00000004   0x8808             LDRH     R0,[R1, #+0]
   \   00000006   0x2801             CMP      R0,#+1
   \   00000008   0xD124             BNE      ??thFanControlEventListener_0
    129              return;
    130          
    131            ZCLActionWriteAttrReq_t *const zclWriteAttrReq = (ZCLActionWriteAttrReq_t*)actionReq->context;
   \   0000000A   0x6848             LDR      R0,[R1, #+4]
    132            if( (FAN_CONTROL_CLUSTER_ID != zclWriteAttrReq->clusterId) || 
    133                    (ZCL_CLUSTER_SIDE_SERVER != zclWriteAttrReq->clusterSide))
   \   0000000C   0x8802             LDRH     R2,[R0, #+0]
   \   0000000E   0x....             LDR      R3,??DataTable7  ;; 0x202
   \   00000010   0x429A             CMP      R2,R3
   \   00000012   0xD11F             BNE      ??thFanControlEventListener_0
   \   00000014   0x7882             LDRB     R2,[R0, #+2]
   \   00000016   0x2A00             CMP      R2,#+0
   \   00000018   0xD11C             BNE      ??thFanControlEventListener_0
    134              return;
    135          
    136            requestedValue = *((uint8_t*)(zclWriteAttrReq->attrValue));
   \   0000001A   0x6882             LDR      R2,[R0, #+8]
   \   0000001C   0x7812             LDRB     R2,[R2, #+0]
    137            if(ZCL_FAN_CONTROL_CLUSTER_FAN_MODE_SERVER_ATTRIBUTE_ID != zclWriteAttrReq->attrId)
   \   0000001E   0x8880             LDRH     R0,[R0, #+4]
   \   00000020   0x2800             CMP      R0,#+0
   \   00000022   0xD117             BNE      ??thFanControlEventListener_0
    138              return;
    139          
    140            switch(thFanControlClusterServerAttributes.fanModeSequence.value)
   \   00000024   0x2001             MOVS     R0,#+1
   \   00000026   0x....             LDR      R3,??DataTable7_2
   \   00000028   0x7ADB             LDRB     R3,[R3, #+11]
   \   0000002A   0x2B00             CMP      R3,#+0
   \   0000002C   0xD006             BEQ      ??thFanControlEventListener_1
   \   0000002E   0x2B01             CMP      R3,#+1
   \   00000030   0xD006             BEQ      ??thFanControlEventListener_2
   \   00000032   0x2B03             CMP      R3,#+3
   \   00000034   0xD006             BEQ      ??thFanControlEventListener_3
   \   00000036   0x2B04             CMP      R3,#+4
   \   00000038   0xD007             BEQ      ??thFanControlEventListener_4
   \   0000003A   0xE009             B        ??thFanControlEventListener_5
    141            {
    142              case ZCL_FC_FAN_SEQUENCE_OPERATION_LOW_MED_HIGH:
    143                if(ZCL_FC_FAN_MODE_AUTO == requestedValue)
   \                     ??thFanControlEventListener_1: (+1)
   \   0000003C   0x2A05             CMP      R2,#+5
   \   0000003E   0xE002             B.N      ??thFanControlEventListener_6
    144                  actionReq->denied = 1U;
    145                break;
    146              case ZCL_FC_FAN_SEQUENCE_OPERATION_LOW_HIGH:
    147                if((ZCL_FC_FAN_MODE_AUTO == requestedValue) || (ZCL_FC_FAN_MODE_MEDIUM == requestedValue))
   \                     ??thFanControlEventListener_2: (+1)
   \   00000040   0x2A05             CMP      R2,#+5
   \   00000042   0xD006             BEQ      ??thFanControlEventListener_7
    148                  actionReq->denied = 1U;
    149                break;
    150              case ZCL_FC_FAN_SEQUENCE_OPERATION_LOW_MED_HIGH_AUTO:
    151                actionReq->denied = 0U;
    152                break;
    153              case ZCL_FC_FAN_SEQUENCE_OPERATION_LOW_HIGH_AUTO:
    154                if(ZCL_FC_FAN_MODE_MEDIUM == requestedValue)
   \                     ??thFanControlEventListener_3: (+1)
   \   00000044   0x2A02             CMP      R2,#+2
   \                     ??thFanControlEventListener_6: (+1)
   \   00000046   0xD105             BNE      ??thFanControlEventListener_0
    155                  actionReq->denied = 1U;
   \   00000048   0xE003             B        ??thFanControlEventListener_7
    156                break;
    157              case ZCL_FC_FAN_SEQUENCE_OPERATION_ON_AUTO:
    158                if(ZCL_FC_FAN_MODE_AUTO != requestedValue)
   \                     ??thFanControlEventListener_4: (+1)
   \   0000004A   0x2A05             CMP      R2,#+5
   \   0000004C   0xD002             BEQ      ??thFanControlEventListener_0
    159                  actionReq->denied = 1U;
   \   0000004E   0xE000             B        ??thFanControlEventListener_7
    160                break;
    161              default:
    162                actionReq->denied = 0U;
   \                     ??thFanControlEventListener_5: (+1)
   \   00000050   0x2000             MOVS     R0,#+0
   \                     ??thFanControlEventListener_7: (+1)
   \   00000052   0x6088             STR      R0,[R1, #+8]
    163                break;
    164            }
    165          }
   \                     ??thFanControlEventListener_0: (+1)
   \   00000054   0x4770             BX       LR               ;; return
    166          
    167          /**************************************************************************//**
    168          \brief Occupancy notification from Occupancy (client/server) cluster
    169          
    170          \param[in] occupied - 0 - Not occupied, 1- occupied
    171          \param[out] - None
    172          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    173          void thFanControlOccupancyNotify(bool occupied)
    174          {
    175            if(ZCL_FC_FAN_MODE_SMART == thFanControlClusterServerAttributes.fanMode.value)
   \                     thFanControlOccupancyNotify: (+1)
   \   00000000   0x....             LDR      R1,??DataTable7_2
   \   00000002   0x7909             LDRB     R1,[R1, #+4]
   \   00000004   0x2906             CMP      R1,#+6
   \   00000006   0xD000             BEQ      ??thFanControlOccupancyNotify_0
   \   00000008   0x4770             BX       LR
    176            {
    177              if(occupied)    thFanControlsetFanOnOff(ZCL_FC_FAN_MODE_ON);
   \                     ??thFanControlOccupancyNotify_0: (+1)
   \   0000000A   0xB580             PUSH     {R7,LR}
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD000             BEQ      ??thFanControlOccupancyNotify_1
   \   00000010   0x2004             MOVS     R0,#+4
    178              else    thFanControlsetFanOnOff(ZCL_FC_FAN_MODE_OFF);
   \                     ??thFanControlOccupancyNotify_1: (+1)
   \   00000012   0x.... 0x....      BL       thFanControlsetFanOnOff
    179            }
    180          }
   \   00000016   0xBD01             POP      {R0,PC}          ;; return
    181          
    182          /**************************************************************************//**
    183          \brief Set the fan to ON or OFF (need to modified by the user)
    184          
    185          \param[in] fanState : 0 - off, non zero - ON
    186          \param[out] - None
    187          ******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    188          static void thFanControlsetFanOnOff(ZCL_FanControlFanMode_t fanState)
    189          { 
   \                     thFanControlsetFanOnOff: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB089             SUB      SP,SP,#+36
    190            /*The user has to implement the functionality to control the actual fan*/
    191            if(fanState)
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD00B             BEQ      ??thFanControlsetFanOnOff_0
    192            {
    193          #if APP_ENABLE_CONSOLE == 1
    194              LOG_STRING(AttrEventIndStr,"Fan is turned ON at speed 0x%x\r\n");
   \   00000008   0x4668             MOV      R0,SP
   \   0000000A   0xBF00             Nop      
   \   0000000C   0x....             ADR.N    R1,?_1
   \   0000000E   0x2224             MOVS     R2,#+36
   \   00000010   0x.... 0x....      BL       __aeabi_memcpy4
    195              appSnprintf(AttrEventIndStr,fanMotorControl);
   \   00000014   0x....             LDR      R0,??DataTable7_2
   \   00000016   0x7C01             LDRB     R1,[R0, #+16]
   \   00000018   0x4668             MOV      R0,SP
   \   0000001A   0x.... 0x....      BL       appSnprintf
   \   0000001E   0xE002             B        ??thFanControlsetFanOnOff_1
    196          #else
    197              (void)fanMotorControl;
    198          #endif
    199            }
    200          #if APP_ENABLE_CONSOLE == 1
    201            else
    202              appSnprintf("Fan is turned OFF\r\n");
   \                     ??thFanControlsetFanOnOff_0: (+1)
   \   00000020   0x....             ADR.N    R0,?_2
   \   00000022   0x.... 0x....      BL       appSnprintf
    203          #endif
    204          }
   \                     ??thFanControlsetFanOnOff_1: (+1)
   \   00000026   0xB009             ADD      SP,SP,#+36
   \   00000028   0xBD00             POP      {PC}             ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x00000202         DC32     0x202

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0x........         DC32     thFanControlAttrEventInd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0x........         DC32     thFanControlClusterServerAttributes

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x3C 0x2D          DC8 "<-Attr ID 0x%x event 0x%x\015\012"
   \              0x41 0x74    
   \              0x74 0x72    
   \              0x20 0x49    
   \              0x44 0x20    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0x20 0x65    
   \              0x76 0x65    
   \              0x6E 0x74    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x78 0x0D    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x46 0x61          DC8 "Fan is turned ON at speed 0x%x\015\012"
   \              0x6E 0x20    
   \              0x69 0x73    
   \              0x20 0x74    
   \              0x75 0x72    
   \              0x6E 0x65    
   \              0x64 0x20    
   \              0x4F 0x4E    
   \              0x20 0x61    
   \              0x74 0x20    
   \              0x73 0x70    
   \              0x65 0x65    
   \              0x64 0x20    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0x0D 0x0A    
   \              0x00         
   \   00000021   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x46 0x61          DC8 "Fan is turned OFF\015\012"
   \              0x6E 0x20    
   \              0x69 0x73    
   \              0x20 0x74    
   \              0x75 0x72    
   \              0x6E 0x65    
   \              0x64 0x20    
   \              0x4F 0x46    
   \              0x46 0x0D    
   \              0x0A 0x00    
    205          #endif // APP_DEVICE_TYPE_THERMOSTAT
    206          
    207          // eof thFanControlCluster.c

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   fanControlClusterInit
         8   -> SYS_SubscribeToEvent
         8   -> ZCL_GetCluster
      40   thFanControlAttrEventInd
        40   -> __aeabi_memcpy4
        40   -> appSnprintf
        40   -> thFanControlsetFanOnOff
       0   thFanControlEventListener
       8   thFanControlOccupancyNotify
         8   -> thFanControlsetFanOnOff
      40   thFanControlsetFanOnOff
        40   -> __aeabi_memcpy4
        40   -> appSnprintf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_2
      28  ?_0
      36  ?_1
      20  ?_2
      40  fanControlClusterInit
      74  thFanControlAttrEventInd
      36  thFanControlClusterServerAttributes
          fanMotorControl
          thFanControlEvent
      86  thFanControlEventListener
      24  thFanControlOccupancyNotify
      42  thFanControlsetFanOnOff

 
  36 bytes in section .data
 362 bytes in section .text
 
 362 bytes of CODE memory
  36 bytes of DATA memory

Errors: none
Warnings: none
