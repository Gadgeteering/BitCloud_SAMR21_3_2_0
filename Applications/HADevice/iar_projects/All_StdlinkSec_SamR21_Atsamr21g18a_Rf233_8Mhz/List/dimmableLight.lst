###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.4.8167/W32 for ARM        31/Mar/2015  18:40:20
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\dimmableLight\src\dimmableLight.c
#    Command line =  
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\dimmableLight\src\dimmableLight.c
#        -D BOARD_SAMR21 -D BOARD_QTOUCH_XPRO -D AT86RF233 -D ATSAMR21G18A -D
#        HAL_8MHz -D STACK_TYPE_ALL -D STDLINK_SECURITY_MODE -lC
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects\All_StdlinkSec_SamR21_Atsamr21g18a_Rf233_8Mhz/List\
#        --diag_suppress Pa050,Pe188 -o
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects\All_StdlinkSec_SamR21_Atsamr21g18a_Rf233_8Mhz/Obj\
#        --debug --endian=little --cpu=Cortex-M0+ -e --fpu=None --dlib_config
#        "C:\Program Files\IAR Systems\Embedded Workbench
#        7.30\arm\INC\c\DLib_Config_Full.h" --preinclude
#        MakerulesBc_All_StdlinkSec_Atsamr21g18a_Rf233_Iar.h -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/..\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../dimmableLight/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../dimmerSwitch/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../multiSensor/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../thermostat/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../ias_ace/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../combinedInterface/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../common/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../common/clusters/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/BSP/SAMR21/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/SystemEnvironment/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/lib\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/HAL/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/BSP\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/BSP/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/BSP/QTouch_XPRO/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/NWK/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/NWK/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZDO/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZDO/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/APS/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/APS/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/SystemEnvironment/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ConfigServer/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ConfigServer/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/PersistDataServer/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/PersistDataServer/std/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/PersistDataServer/wl/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Types/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Util/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Timer/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Task/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_ErrH/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Log/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Memory/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Init/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/S_Nv/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/S_XNv/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/D_Nv/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/D_XNv/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/D_XNv/src\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/S_XNv/src\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/Security/TrustCentre/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/Security/ServiceProvider/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/HAL/drivers/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/HAL/drivers/VCP/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/HAL/cortexm0+/atsamr21/common/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZCL/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZCL/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_ENV/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_HWI/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_HWD_PHY/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_HWD_PHY/RF231_RF212/PHY/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_HWD_PHY/RF231_RF212/MAC_HWD/include\
#        -Ohz --use_c++_inline
#    List file    =  
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects\All_StdlinkSec_SamR21_Atsamr21g18a_Rf233_8Mhz/List\dimmableLight.lst
#    Object file  =  
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects\All_StdlinkSec_SamR21_Atsamr21g18a_Rf233_8Mhz/Obj\dimmableLight.o
#
###############################################################################

D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\dimmableLight\src\dimmableLight.c
      1          /**************************************************************************//**
      2            \file dimmableLight.c
      3          
      4            \brief
      5              Dimmable Light implementation.
      6          
      7            \author
      8              Atmel Corporation: http://www.atmel.com \n
      9              Support email: avr@atmel.com
     10          
     11            Copyright (c) 2008-2015, Atmel Corporation. All rights reserved.
     12            Licensed under Atmel's Limited License Agreement (BitCloudTM).
     13          
     14            \internal
     15              History:
     16              26/12/14 Prashanth.Udumula - modified
     17          ******************************************************************************/
     18          #ifdef APP_DEVICE_TYPE_DIMMABLE_LIGHT
     19          
     20          /******************************************************************************
     21                                       Includes section
     22          ******************************************************************************/
     23          #include <dlClusters.h>
     24          #include <basicCluster.h>
     25          #include <identifyCluster.h>
     26          #include <dlOnOffCluster.h>
     27          #include <dlLevelControlCluster.h>
     28          #include <dlGroupsCluster.h>
     29          #include <dlScenesCluster.h>
     30          #include <zclDevice.h>
     31          #include <zclSecurityManager.h>
     32          #include <uartManager.h>
     33          #include <console.h>
     34          #include <pdsDataServer.h>
     35          #include <ezModeManager.h>
     36          #include <haClusters.h>
     37          #include <otauService.h>
     38          
     39          /*******************************************************************************
     40                              Static functions section
     41          *******************************************************************************/
     42          static void updateCommissioningStateCb(ZCL_Addressing_t *addressing, ZCL_UpdateCommissioningState_t *payload);
     43          
     44          /******************************************************************************
     45                              Local variables section
     46          ******************************************************************************/
     47          static ZCL_DeviceEndpoint_t dlEndpoint =
     48          {
     49            .simpleDescriptor =
     50            {
     51              .endpoint            = APP_SRC_ENDPOINT_ID,
     52              .AppProfileId        = PROFILE_ID_HOME_AUTOMATION,
     53              .AppDeviceId         = HA_DIMMABLE_LIGHT_DEVICE_ID,
     54              .AppInClustersCount  = ARRAY_SIZE(dlServerClusterIds),
     55              .AppInClustersList   = dlServerClusterIds,
     56          #ifdef OTAU_CLIENT
     57              .AppOutClustersCount = ARRAY_SIZE(dlClientClusterIds),
     58              .AppOutClustersList  = dlClientClusterIds,
     59          #else
     60              .AppOutClustersCount = 0,
     61              .AppOutClustersList  = NULL,
     62          #endif
     63            },
     64            .serverCluster = dlServerClusters,
     65          #ifdef OTAU_CLIENT
     66            .clientCluster = dlClientClusters,
     67          #else
     68            .clientCluster = NULL,
     69          #endif
     70          };
     71          
     72          static ZCL_LinkKeyDesc_t lightKeyDesc = {APS_UNIVERSAL_EXTENDED_ADDRESS  /*addr*/,
     73                                                   HA_LINK_KEY /*key*/};
     74          
     75          static IdentifySubscriber_t subcriber =
     76          {
     77            .updateCommissioningState = updateCommissioningStateCb
     78          };
     79          /******************************************************************************
     80                              Prototypes section
     81          ******************************************************************************/
     82          static void dlConfigureReportingResp(ZCL_Notify_t *ntfy);
     83          
     84          /******************************************************************************
     85                              Implementation section
     86          ******************************************************************************/
     87          /**************************************************************************//**
     88          \brief Device initialization routine
     89          ******************************************************************************/
     90          void appDeviceInit(void)
     91          {
     92            ZCL_RegisterEndpoint(&dlEndpoint);
     93          
     94          #if (APP_ENABLE_CONSOLE == 1) || (APP_DEVICE_EVENTS_LOGGING == 1)
     95            uartInit();
     96          #endif
     97          #if APP_ENABLE_CONSOLE == 1
     98            initConsole();
     99          #endif
    100            /* Subscribe the Commissioning update command for Target devices */
    101            identifySubscribe(&subcriber);
    102          
    103            basicClusterInit();
    104            identifyClusterInit();
    105            onOffClusterInit();
    106            levelControlClusterInit();
    107            groupsClusterInit();
    108            scenesClusterInit();
    109          
    110            if (PDS_IsAbleToRestore(APP_DL_SCENES_MEM_ID))
    111              PDS_Restore(APP_DL_SCENES_MEM_ID);
    112            if (PDS_IsAbleToRestore(APP_DL_ONOFF_MEM_ID))
    113              PDS_Restore(APP_DL_ONOFF_MEM_ID);
    114            if (PDS_IsAbleToRestore(APP_DL_LEVEL_CONTROL_MEM_ID))
    115              PDS_Restore(APP_DL_LEVEL_CONTROL_MEM_ID);
    116          
    117            ZCL_StartReporting();
    118          }
    119          
    120          /**************************************************************************//**
    121          \breif Performs security initialization actions
    122          ******************************************************************************/
    123          void appSecurityInit(void)
    124          {
    125            ZCL_Set_t zclSet;
    126          
    127            ZCL_ResetSecurity();
    128            zclSet.attr.id = ZCL_LINK_KEY_DESC_ID;
    129            zclSet.attr.value.linkKeyDesc = &lightKeyDesc;
    130            ZCL_Set(&zclSet);
    131          }
    132          
    133          /**************************************************************************//**
    134          \brief Device common task handler
    135          ******************************************************************************/
    136          void appDeviceTaskHandler(void)
    137          {
    138            switch (appDeviceState) // Actual device state when one joined network
    139            {
    140              case DEVICE_INITIAL_STATE:
    141                {
    142                  appDeviceState = DEVICE_ACTIVE_IDLE_STATE;
    143                }
    144          #ifdef OTAU_CLIENT
    145                startOtauClient(&dlClientClusters[DL_CLIENT_CLUSTERS_COUNT - 1]);
    146          #endif
    147                break;
    148              case DEVICE_ACTIVE_IDLE_STATE:
    149              default:
    150                break;
    151            }
    152          }
    153          
    154          /**************************************************************************//**
    155          \brief Gets bind request
    156          
    157          \return pointer to a bind request used by HA device
    158          ******************************************************************************/
    159          AppBindReq_t **getDeviceBindRequest(void)
    160          {
    161            return NULL;
    162          }
    163          
    164          /**************************************************************************//**
    165          \brief Stops application
    166          ******************************************************************************/
    167          void appStop(void)
    168          {
    169            identifyClusterStop();
    170            levelControlClusterStop();
    171          }
    172          
    173          /**************************************************************************//**
    174          \brief Asks device if it is an initiator
    175          
    176          \returns true if it is, false otherwise
    177          ******************************************************************************/
    178          bool appIsInitiator(void)
    179          {
    180            return false;
    181          }
    182          
    183          /**************************************************************************//**
    184          \brief EZ-Mode done callback
    185          
    186          \returns function which is called by EZ-Mode manager when it is done
    187          ******************************************************************************/
    188          void appEzModeDone(void)
    189          {}
    190          
    191          /**************************************************************************//**
    192          \brief Update Commissioning State received callback
    193          
    194          \param[in] addressing - pointer to addressing information;
    195          \param[in] payload - data pointer
    196          ******************************************************************************/
    197          static void updateCommissioningStateCb(ZCL_Addressing_t *addressing, ZCL_UpdateCommissioningState_t *payload)
    198          {
    199            sendConfigureReportingToNotify(APP_SRC_ENDPOINT_ID, APP_ENDPOINT_COMBINED_INTERFACE,
    200                                           ONOFF_CLUSTER_ID, ZCL_ONOFF_CLUSTER_ONOFF_SERVER_ATTRIBUTE_ID,
    201                                           ONOFF_VAL_MAX_REPORT_PERIOD * 2, dlConfigureReportingResp);
    202            (void)addressing, (void)payload;
    203          }
    204          /**************************************************************************//**
    205          \brief Indication of configure reporting response
    206          
    207          \param[in] ntfy - pointer to response
    208          ******************************************************************************/
    209          static void dlConfigureReportingResp(ZCL_Notify_t *ntfy)
    210          {
    211            sendConfigureReportingToNotify(APP_SRC_ENDPOINT_ID, APP_ENDPOINT_COMBINED_INTERFACE, 
    212                                           LEVEL_CONTROL_CLUSTER_ID,ZCL_LEVEL_CONTROL_CLUSTER_CURRENT_LEVEL_ATTRIBUTE_ID, 
    213                                           LEVEL_CONTROL_VAL_MAX_REPORT_PERIOD * 2, NULL);
    214            ZCL_StartReporting();
    215            (void)ntfy;
    216          }
    217          /**************************************************************************//**
    218          \brief ZDO Binding indication function
    219          
    220          \param[out] bindInd - ZDO bind indication parameters structure pointer. For details go to
    221                      ZDO_BindInd_t declaration
    222          ******************************************************************************/
    223          void ZDO_BindIndication(ZDO_BindInd_t *bindInd)
    224          {
    225            (void)bindInd;
    226          }
    227          
    228          /**************************************************************************//**
    229          \brief ZDO Unbinding indication function
    230          
    231          \param[out] unbindInd - ZDO unbind indication parameters structure pointer. For details go to
    232                      ZDO_UnbindInd_t declaration
    233          ******************************************************************************/
    234          void ZDO_UnbindIndication(ZDO_UnbindInd_t *unbindInd)
    235          {
    236            (void)unbindInd;
    237          }
    238          
    239          #endif // APP_DEVICE_TYPE_DIMMABLE_LIGHT
    240          // eof dimmableLight.c


 

 


Errors: none
Warnings: none
