###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.4.8167/W32 for ARM        31/Mar/2015  18:41:02
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\thermostat\src\thHumidityMeasurementCluster.c
#    Command line =  
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\thermostat\src\thHumidityMeasurementCluster.c
#        -D BOARD_SAMR21 -D BOARD_QTOUCH_XPRO -D AT86RF233 -D ATSAMR21G18A -D
#        HAL_8MHz -D STACK_TYPE_ALL -D STDLINK_SECURITY_MODE -lC
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects\All_StdlinkSec_SamR21_Atsamr21g18a_Rf233_8Mhz/List\
#        --diag_suppress Pa050,Pe188 -o
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects\All_StdlinkSec_SamR21_Atsamr21g18a_Rf233_8Mhz/Obj\
#        --debug --endian=little --cpu=Cortex-M0+ -e --fpu=None --dlib_config
#        "C:\Program Files\IAR Systems\Embedded Workbench
#        7.30\arm\INC\c\DLib_Config_Full.h" --preinclude
#        MakerulesBc_All_StdlinkSec_Atsamr21g18a_Rf233_Iar.h -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/..\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../dimmableLight/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../dimmerSwitch/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../multiSensor/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../thermostat/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../ias_ace/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../combinedInterface/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../common/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../common/clusters/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/BSP/SAMR21/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/SystemEnvironment/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/lib\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/HAL/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/BSP\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/BSP/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/BSP/QTouch_XPRO/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/NWK/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/NWK/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZDO/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZDO/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/APS/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/APS/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/SystemEnvironment/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ConfigServer/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ConfigServer/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/PersistDataServer/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/PersistDataServer/std/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/PersistDataServer/wl/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Types/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Util/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Timer/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Task/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_ErrH/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Log/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Memory/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Init/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/S_Nv/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/S_XNv/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/D_Nv/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/D_XNv/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/D_XNv/src\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/S_XNv/src\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/Security/TrustCentre/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/Security/ServiceProvider/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/HAL/drivers/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/HAL/drivers/VCP/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/HAL/cortexm0+/atsamr21/common/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZCL/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZCL/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_ENV/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_HWI/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_HWD_PHY/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_HWD_PHY/RF231_RF212/PHY/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_HWD_PHY/RF231_RF212/MAC_HWD/include\
#        -Ohz --use_c++_inline
#    List file    =  
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects\All_StdlinkSec_SamR21_Atsamr21g18a_Rf233_8Mhz/List\thHumidityMeasurementCluster.lst
#    Object file  =  
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects\All_StdlinkSec_SamR21_Atsamr21g18a_Rf233_8Mhz/Obj\thHumidityMeasurementCluster.o
#
###############################################################################

D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\thermostat\src\thHumidityMeasurementCluster.c
      1          /**************************************************************************//**
      2            \file thHumidityMeasurementCluster.c
      3          
      4            \brief
      5              Thermostat Relative Humidity Measurement cluster implementation.
      6          
      7            \author
      8              Atmel Corporation: http://www.atmel.com \n
      9              Support email: avr@atmel.com
     10          
     11            Copyright (c) 2008-2015, Atmel Corporation. All rights reserved.
     12            Licensed under Atmel's Limited License Agreement (BitCloudTM).
     13          
     14            \internal
     15              History:
     16              06.11.14 Viswanadham Kotla - Created.
     17          ******************************************************************************/
     18          #ifdef APP_DEVICE_TYPE_THERMOSTAT
     19          
     20          /******************************************************************************
     21                              Includes section
     22          ******************************************************************************/
     23          #include <thHumidityMeasurementCluster.h>
     24          #include <uartManager.h>
     25          #include <commandManager.h>
     26          #include <haClusters.h>
     27          
     28          /******************************************************************************
     29                              Global variables
     30          ******************************************************************************/

   \                                 In section .data, align 4
     31          ZCL_HumidityMeasurementClusterAttributes_t thHumidityMeasurementClusterServerAttributes =
   \                     thHumidityMeasurementClusterServerAttributes:
   \   00000000   0x0000             DC16 0
   \   00000002   0x21 0x33          DC8 33, 51
   \   00000004   0x0000 0x0000      DC16 0, 0, 15, 25, 0, 0, 0, 1, 2, 1
   \              0x000F 0x0019
   \              0x0000 0x0000
   \              0x0000 0x0001
   \              0x0002 0x0001
   \   00000018   0x21 0x12          DC8 33, 18
   \   0000001A   0x0000 0x0000      DC16 0, 0, 9999, 2
   \              0x270F 0x0002
   \   00000022   0x21 0x12          DC8 33, 18
   \   00000024   0x0000 0x0001      DC16 0, 1, 10000, 3
   \              0x2710 0x0003
   \   0000002C   0x21 0x13          DC8 33, 19
   \   0000002E   0x0000 0x0000      DC16 0, 0, 15, 25, 0, 0, 0, 0, 32768
   \              0x000F 0x0019
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x8000       
     32          {
     33            ZCL_DEFINE_HUMIDITY_MEASUREMENT_CLUSTER_SERVER_ATTRIBUTES(HUMIDITY_MEASUREMENT_VAL_MIN_REPORT_PERIOD, HUMIDITY_MEASUREMENT_VAL_MAX_REPORT_PERIOD)
     34          };
     35          
     36          /******************************************************************************
     37                              Local variables section
     38          ******************************************************************************/

   \                                 In section .bss, align 4
     39          static AttibuteReadCallback_t   readAttributeCallback;
   \                     readAttributeCallback:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     40          static AttributeWriteCallback_t writeAttributeCallback;
   \                     writeAttributeCallback:
   \   00000000                      DS8 4
     41          
     42          /******************************************************************************
     43                              Prototypes section
     44          ******************************************************************************/
     45          static void ZCL_ReadAttributeResp(ZCL_Notify_t *ntfy);
     46          static void ZCL_WriteAttributeResp(ZCL_Notify_t *ntfy);
     47          static void thHumidityMeasurementReportInd(ZCL_Addressing_t *addressing, uint8_t reportLength, uint8_t *reportPayload);
     48          static void ZCL_ConfigureReportingResp(ZCL_Notify_t *ntfy);
     49          
     50          /******************************************************************************
     51                              Implementation section
     52          ******************************************************************************/
     53          /**************************************************************************//**
     54          \brief Initializes Humidity Measurement cluster
     55          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     56          void humidityMeasurementClusterInit(void)
     57          {
   \                     humidityMeasurementClusterInit: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     58            ZCL_Cluster_t *cluster = ZCL_GetCluster(APP_SRC_ENDPOINT_ID, HUMIDITY_MEASUREMENT_CLUSTER_ID, ZCL_CLUSTER_SIDE_CLIENT);
   \   00000002   0x....             LDR      R4,??DataTable12  ;; 0x405
   \   00000004   0x2201             MOVS     R2,#+1
   \   00000006   0x0021             MOVS     R1,R4
   \   00000008   0x2019             MOVS     R0,#+25
   \   0000000A   0x.... 0x....      BL       ZCL_GetCluster
     59          
     60            if (cluster)
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD001             BEQ      ??humidityMeasurementClusterInit_0
     61              cluster->ZCL_ReportInd = thHumidityMeasurementReportInd;
   \   00000012   0x....             LDR      R1,??DataTable12_1
   \   00000014   0x6141             STR      R1,[R0, #+20]
     62            
     63            cluster = ZCL_GetCluster(APP_SRC_ENDPOINT_ID, HUMIDITY_MEASUREMENT_CLUSTER_ID, ZCL_CLUSTER_SIDE_SERVER);
     64          
     65            if (cluster)
   \                     ??humidityMeasurementClusterInit_0: (+1)
   \   00000016   0x2200             MOVS     R2,#+0
   \   00000018   0x0021             MOVS     R1,R4
   \   0000001A   0x2019             MOVS     R0,#+25
   \   0000001C   0x.... 0x....      BL       ZCL_GetCluster
   \   00000020   0x2800             CMP      R0,#+0
   \   00000022   0xD011             BEQ      ??humidityMeasurementClusterInit_1
     66            {
     67              thHumidityMeasurementClusterServerAttributes.measuredValue.value = APP_HUMIDITY_MEASUREMENT_MEASURED_VALUE_ATTRIBUTE_VALUE;
   \   00000024   0x....             LDR      R4,??DataTable12_2
   \   00000026   0x2080             MOVS     R0,#+128
   \   00000028   0x0140             LSLS     R0,R0,#+5        ;; #+4096
   \   0000002A   0x80A0             STRH     R0,[R4, #+4]
     68              thHumidityMeasurementClusterServerAttributes.minMeasuredValue.value = APP_HUMIDITY_MEASUREMENT_MIN_MEASURED_VALUE_ATTRIBUTE_VALUE;
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0x8360             STRH     R0,[R4, #+26]
     69              thHumidityMeasurementClusterServerAttributes.maxMeasuredValue.value = APP_HUMIDITY_MEASUREMENT_MAX_MEASURED_VALUE_ATTRIBUTE_VALUE;
   \   00000030   0x....             LDR      R0,??DataTable12_3  ;; 0x2710
   \   00000032   0x84A0             STRH     R0,[R4, #+36]
     70              thHumidityMeasurementClusterServerAttributes.tolerance.value = APP_HUMIDITY_MEASUREMENT_TOLERANCE_ATTRIBUTE_VALUE;//to be updated
   \   00000034   0x2080             MOVS     R0,#+128
   \   00000036   0x0040             LSLS     R0,R0,#+1        ;; #+256
   \   00000038   0x85E0             STRH     R0,[R4, #+46]
     71          
     72              ZCL_ReportOnChangeIfNeeded(&thHumidityMeasurementClusterServerAttributes.measuredValue);
   \   0000003A   0x0020             MOVS     R0,R4
   \   0000003C   0x.... 0x....      BL       ZCL_ReportOnChangeIfNeeded
     73              ZCL_ReportOnChangeIfNeeded(&thHumidityMeasurementClusterServerAttributes.tolerance);
   \   00000040   0x342A             ADDS     R4,R4,#+42
   \   00000042   0x0020             MOVS     R0,R4
   \   00000044   0x.... 0x....      BL       ZCL_ReportOnChangeIfNeeded
     74            }
     75          }
   \                     ??humidityMeasurementClusterInit_1: (+1)
   \   00000048   0xBD10             POP      {R4,PC}          ;; return
     76          
     77          /**************************************************************************//**
     78          \brief Update the measured Value
     79          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     80          void humidityMeasurementUpdateMeasuredValue(void)
     81          {
   \                     humidityMeasurementUpdateMeasuredValue: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     82            uint16_t measuredValue ;
     83          
     84            measuredValue = thHumidityMeasurementClusterServerAttributes.measuredValue.value + APP_HUMIDITY_MEASUREMENT_MEASURED_VALUE_PERIODIC_CHANGE;
   \   00000002   0x....             LDR      R0,??DataTable12_2
   \   00000004   0x8881             LDRH     R1,[R0, #+4]
   \   00000006   0x22FA             MOVS     R2,#+250
   \   00000008   0x0092             LSLS     R2,R2,#+2        ;; #+1000
   \   0000000A   0x1889             ADDS     R1,R1,R2
     85          
     86            if (measuredValue > thHumidityMeasurementClusterServerAttributes.maxMeasuredValue.value)
   \   0000000C   0x8C82             LDRH     R2,[R0, #+36]
   \   0000000E   0xB289             UXTH     R1,R1
   \   00000010   0x428A             CMP      R2,R1
   \   00000012   0xD200             BCS      ??humidityMeasurementUpdateMeasuredValue_0
     87              thHumidityMeasurementClusterServerAttributes.measuredValue.value =  thHumidityMeasurementClusterServerAttributes.minMeasuredValue.value;
   \   00000014   0x8B41             LDRH     R1,[R0, #+26]
     88            else
     89              thHumidityMeasurementClusterServerAttributes.measuredValue.value = measuredValue;
   \                     ??humidityMeasurementUpdateMeasuredValue_0: (+1)
   \   00000016   0x8081             STRH     R1,[R0, #+4]
     90          
     91            ZCL_ReportOnChangeIfNeeded(&thHumidityMeasurementClusterServerAttributes.measuredValue);
   \   00000018   0x.... 0x....      BL       ZCL_ReportOnChangeIfNeeded
     92          }
   \   0000001C   0xBD01             POP      {R0,PC}          ;; return
     93          
     94          /**************************************************************************//**
     95          \brief Update the tolerance value
     96          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     97          void humidityMeasurementUpdateTolerance(void)
     98          {
   \                     humidityMeasurementUpdateTolerance: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     99            thHumidityMeasurementClusterServerAttributes.tolerance.value = (int16_t)rand() % 25; //some rand value less than 25
   \   00000002   0x....             LDR      R4,??DataTable12_2
   \   00000004   0x.... 0x....      BL       rand
   \   00000008   0xB200             SXTH     R0,R0
   \   0000000A   0x2119             MOVS     R1,#+25
   \   0000000C   0x.... 0x....      BL       __aeabi_idivmod
   \   00000010   0x85E1             STRH     R1,[R4, #+46]
    100          
    101            ZCL_ReportOnChangeIfNeeded(&thHumidityMeasurementClusterServerAttributes.tolerance);
   \   00000012   0x342A             ADDS     R4,R4,#+42
   \   00000014   0x0020             MOVS     R0,R4
   \   00000016   0x.... 0x....      BL       ZCL_ReportOnChangeIfNeeded
    102          }
   \   0000001A   0xBD10             POP      {R4,PC}          ;; return
    103          
    104          /**************************************************************************//**
    105          \brief Sends Read Attribute command unicastly
    106          
    107          \param[in] mode - address mode;
    108          \param[in] addr - short address of destination node;
    109          \param[in] ep   - destination endpoint;
    110          \param[in] attr - attribute id;
    111          \param[in] cb   - callback function
    112          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    113          void humidityMeasurementReadAttribute(APS_AddrMode_t mode,ShortAddr_t addr, Endpoint_t ep,
    114            uint16_t attr, AttibuteReadCallback_t cb)
    115          {
   \                     humidityMeasurementReadAttribute: (+1)
   \   00000000   0xB5F1             PUSH     {R0,R4-R7,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
   \   00000004   0x000F             MOVS     R7,R1
   \   00000006   0x0015             MOVS     R5,R2
   \   00000008   0x001E             MOVS     R6,R3
    116            ZCL_Request_t *req;
    117            ZCL_NextElement_t element;
    118            ZCL_ReadAttributeReq_t readAttrReqElement;
    119          
    120            if (!(req = getFreeCommand()))
   \   0000000A   0x.... 0x....      BL       getFreeCommand
   \   0000000E   0x0004             MOVS     R4,R0
   \   00000010   0xD023             BEQ      ??humidityMeasurementReadAttribute_0
    121              return;
    122          
    123            readAttributeCallback = cb;
   \   00000012   0x980C             LDR      R0,[SP, #+48]
   \   00000014   0x....             LDR      R1,??DataTable12_4
   \   00000016   0x6008             STR      R0,[R1, #+0]
    124          
    125            readAttrReqElement.id = attr;
   \   00000018   0x4668             MOV      R0,SP
   \   0000001A   0x8086             STRH     R6,[R0, #+4]
    126          
    127            element.payloadLength = 0;
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0xAE02             ADD      R6,SP,#+8
   \   00000020   0x7070             STRB     R0,[R6, #+1]
    128            element.payload = req->requestPayload;
   \   00000022   0x6CE1             LDR      R1,[R4, #+76]
   \   00000024   0x9103             STR      R1,[SP, #+12]
    129            element.id = ZCL_READ_ATTRIBUTES_COMMAND_ID;
   \   00000026   0x7030             STRB     R0,[R6, #+0]
    130            element.content = &readAttrReqElement;
   \   00000028   0xA801             ADD      R0,SP,#+4
   \   0000002A   0x9004             STR      R0,[SP, #+16]
    131            ZCL_PutNextElement(&element);
   \   0000002C   0xA802             ADD      R0,SP,#+8
   \   0000002E   0x.... 0x....      BL       ZCL_PutNextElement
    132          
    133            fillCommandRequest(req, ZCL_READ_ATTRIBUTES_COMMAND_ID, element.payloadLength);
   \   00000032   0x7872             LDRB     R2,[R6, #+1]
   \   00000034   0x2100             MOVS     R1,#+0
   \   00000036   0x0020             MOVS     R0,R4
   \   00000038   0x.... 0x....      BL       fillCommandRequest
    134            fillDstAddressing(&req->dstAddressing, mode, addr, ep, HUMIDITY_MEASUREMENT_CLUSTER_ID);
   \   0000003C   0x....             LDR      R0,??DataTable12  ;; 0x405
   \   0000003E   0x9000             STR      R0,[SP, #+0]
   \   00000040   0x002B             MOVS     R3,R5
   \   00000042   0x003A             MOVS     R2,R7
   \   00000044   0x4668             MOV      R0,SP
   \   00000046   0x7E01             LDRB     R1,[R0, #+24]
   \   00000048   0x0020             MOVS     R0,R4
   \   0000004A   0x3020             ADDS     R0,R0,#+32
   \   0000004C   0x.... 0x....      BL       fillDstAddressing
    135            req->ZCL_Notify = ZCL_ReadAttributeResp;
   \   00000050   0x....             LDR      R0,??DataTable12_5
   \   00000052   0x61A0             STR      R0,[R4, #+24]
    136          
    137            commandManagerSendAttribute(req);
   \   00000054   0x0020             MOVS     R0,R4
   \   00000056   0x.... 0x....      BL       commandManagerSendAttribute
    138          }
   \                     ??humidityMeasurementReadAttribute_0: (+1)
   \   0000005A   0xB007             ADD      SP,SP,#+28
   \   0000005C   0xBDF0             POP      {R4-R7,PC}       ;; return
    139          
    140          /**************************************************************************//**
    141          \brief Sends Write Attribute command unicastly
    142          
    143          \param[in] mode - address mode;
    144          \param[in] addr - short address of destination node;
    145          \param[in] attr - attribute id;
    146          \param[in] ep   - destination endpoint;
    147          \param[in] type - attribute type;
    148          \param[in] cb   - callback function;
    149          \param[in] data - the pointer to memory with value to be written;
    150          \param[in] size - size of data parameter in octets
    151          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    152          void humidityMeasurementWriteAttribute(APS_AddrMode_t mode, ShortAddr_t addr, Endpoint_t ep,
    153            uint16_t attr, uint8_t type, AttributeWriteCallback_t cb, void *data, uint8_t size)
    154          {
   \                     humidityMeasurementWriteAttribute: (+1)
   \   00000000   0xB5F1             PUSH     {R0,R4-R7,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x000F             MOVS     R7,R1
   \   00000006   0x0015             MOVS     R5,R2
   \   00000008   0x001E             MOVS     R6,R3
    155            ZCL_Request_t *req;
    156            ZCL_WriteAttributeReq_t writeAttrReq;
    157          
    158            if (!(req = getFreeCommand()))
   \   0000000A   0x.... 0x....      BL       getFreeCommand
   \   0000000E   0x0004             MOVS     R4,R0
   \   00000010   0xD027             BEQ      ??humidityMeasurementWriteAttribute_0
    159              return;
    160          
    161            writeAttributeCallback = cb;
   \   00000012   0x9809             LDR      R0,[SP, #+36]
   \   00000014   0x....             LDR      R1,??DataTable12_6
   \   00000016   0x6008             STR      R0,[R1, #+0]
    162          
    163            writeAttrReq.id = attr;
   \   00000018   0x4668             MOV      R0,SP
   \   0000001A   0x8086             STRH     R6,[R0, #+4]
    164            writeAttrReq.type = type;
   \   0000001C   0x9808             LDR      R0,[SP, #+32]
   \   0000001E   0xA901             ADD      R1,SP,#+4
   \   00000020   0x7088             STRB     R0,[R1, #+2]
    165            memcpy(req->requestPayload, (uint8_t *)&writeAttrReq, sizeof(ZCL_WriteAttributeReq_t) - sizeof(uint8_t));
   \   00000022   0x2203             MOVS     R2,#+3
   \   00000024   0x6CE0             LDR      R0,[R4, #+76]
   \   00000026   0x.... 0x....      BL       __aeabi_memcpy
   \   0000002A   0x9E0B             LDR      R6,[SP, #+44]
    166            memcpy(req->requestPayload + sizeof(ZCL_WriteAttributeReq_t) - sizeof(uint8_t), (uint8_t *)data, size);
   \   0000002C   0x0032             MOVS     R2,R6
   \   0000002E   0x990A             LDR      R1,[SP, #+40]
   \   00000030   0x6CE0             LDR      R0,[R4, #+76]
   \   00000032   0x1CC0             ADDS     R0,R0,#+3
   \   00000034   0x.... 0x....      BL       __aeabi_memcpy
    167          
    168            fillCommandRequest(req, ZCL_WRITE_ATTRIBUTES_COMMAND_ID, size + sizeof(ZCL_WriteAttributeReq_t) - sizeof(uint8_t));
   \   00000038   0x1CF6             ADDS     R6,R6,#+3
   \   0000003A   0xB2F2             UXTB     R2,R6
   \   0000003C   0x2102             MOVS     R1,#+2
   \   0000003E   0x0020             MOVS     R0,R4
   \   00000040   0x.... 0x....      BL       fillCommandRequest
    169            fillDstAddressing(&req->dstAddressing, mode, addr, ep, HUMIDITY_MEASUREMENT_CLUSTER_ID);
   \   00000044   0x....             LDR      R0,??DataTable12  ;; 0x405
   \   00000046   0x9000             STR      R0,[SP, #+0]
   \   00000048   0x002B             MOVS     R3,R5
   \   0000004A   0x003A             MOVS     R2,R7
   \   0000004C   0x4668             MOV      R0,SP
   \   0000004E   0x7A01             LDRB     R1,[R0, #+8]
   \   00000050   0x0020             MOVS     R0,R4
   \   00000052   0x3020             ADDS     R0,R0,#+32
   \   00000054   0x.... 0x....      BL       fillDstAddressing
    170            req->ZCL_Notify = ZCL_WriteAttributeResp;
   \   00000058   0x....             LDR      R0,??DataTable12_7
   \   0000005A   0x61A0             STR      R0,[R4, #+24]
    171          
    172            commandManagerSendAttribute(req);
   \   0000005C   0x0020             MOVS     R0,R4
   \   0000005E   0x.... 0x....      BL       commandManagerSendAttribute
    173          }
   \                     ??humidityMeasurementWriteAttribute_0: (+1)
   \   00000062   0xBDF7             POP      {R0-R2,R4-R7,PC}  ;; return
    174          
    175          /**************************************************************************//**
    176          \brief Configure reporting for Humidity Measurement cluster
    177          
    178          \param[in] mode     - address mode;
    179          \param[in] addr     - short address of destination node;
    180          \param[in] ep       - destination endpoint;
    181          \param[in] attrId   - attribute id;
    182          \param[in] attrType - attribute type;
    183          \param[in] min      - the minimum reporting interval;
    184          \param[in] max      - the maximum reporting interval
    185          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    186          void humidityMeasurementConfigureReporting(APS_AddrMode_t mode, ShortAddr_t addr, Endpoint_t ep,
    187            ZCL_AttributeId_t attrId, uint8_t attrType, ZCL_ReportTime_t min, ZCL_ReportTime_t max)
    188          {
   \                     humidityMeasurementConfigureReporting: (+1)
   \   00000000   0xB5F1             PUSH     {R0,R4-R7,LR}
   \   00000002   0xB088             SUB      SP,SP,#+32
   \   00000004   0x000F             MOVS     R7,R1
   \   00000006   0x0015             MOVS     R5,R2
   \   00000008   0x001E             MOVS     R6,R3
    189            ZCL_Request_t *req;
    190            ZCL_NextElement_t element;
    191            ZCL_ConfigureReportingReq_t configureReportingReq;
    192          
    193            if (!(req = getFreeCommand()))
   \   0000000A   0x.... 0x....      BL       getFreeCommand
   \   0000000E   0x0004             MOVS     R4,R0
   \   00000010   0xD02A             BEQ      ??humidityMeasurementConfigureReporting_0
    194              return;
    195          
    196            configureReportingReq.direction            = ZCL_FRAME_CONTROL_DIRECTION_CLIENT_TO_SERVER;
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0xA904             ADD      R1,SP,#+16
   \   00000016   0x7008             STRB     R0,[R1, #+0]
    197            configureReportingReq.attributeId          = attrId;
   \   00000018   0x704E             STRB     R6,[R1, #+1]
   \   0000001A   0x0A36             LSRS     R6,R6,#+8
   \   0000001C   0x708E             STRB     R6,[R1, #+2]
    198            configureReportingReq.attributeType        = attrType;
   \   0000001E   0x9A0E             LDR      R2,[SP, #+56]
   \   00000020   0x70CA             STRB     R2,[R1, #+3]
    199            configureReportingReq.minReportingInterval = min;
   \   00000022   0x9A0F             LDR      R2,[SP, #+60]
   \   00000024   0x808A             STRH     R2,[R1, #+4]
    200            configureReportingReq.maxReportingInterval = max;
   \   00000026   0x9A10             LDR      R2,[SP, #+64]
   \   00000028   0x80CA             STRH     R2,[R1, #+6]
    201          
    202            element.payloadLength = 0;
   \   0000002A   0xAE01             ADD      R6,SP,#+4
   \   0000002C   0x7070             STRB     R0,[R6, #+1]
    203            element.payload = req->requestPayload;
   \   0000002E   0x6CE0             LDR      R0,[R4, #+76]
   \   00000030   0x9002             STR      R0,[SP, #+8]
    204            element.id = ZCL_CONFIGURE_REPORTING_COMMAND_ID;
   \   00000032   0x2006             MOVS     R0,#+6
   \   00000034   0x7030             STRB     R0,[R6, #+0]
    205            element.content = &configureReportingReq;
   \   00000036   0xA804             ADD      R0,SP,#+16
   \   00000038   0x9003             STR      R0,[SP, #+12]
    206            ZCL_PutNextElement(&element);
   \   0000003A   0xA801             ADD      R0,SP,#+4
   \   0000003C   0x.... 0x....      BL       ZCL_PutNextElement
    207          
    208            fillCommandRequest(req, ZCL_CONFIGURE_REPORTING_COMMAND_ID, element.payloadLength);
   \   00000040   0x7872             LDRB     R2,[R6, #+1]
   \   00000042   0x2106             MOVS     R1,#+6
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0x.... 0x....      BL       fillCommandRequest
    209            fillDstAddressing(&req->dstAddressing, mode, addr, ep, HUMIDITY_MEASUREMENT_CLUSTER_ID);
   \   0000004A   0x....             LDR      R0,??DataTable12  ;; 0x405
   \   0000004C   0x9000             STR      R0,[SP, #+0]
   \   0000004E   0x002B             MOVS     R3,R5
   \   00000050   0x003A             MOVS     R2,R7
   \   00000052   0xA808             ADD      R0,SP,#+32
   \   00000054   0x7801             LDRB     R1,[R0, #+0]
   \   00000056   0x0020             MOVS     R0,R4
   \   00000058   0x3020             ADDS     R0,R0,#+32
   \   0000005A   0x.... 0x....      BL       fillDstAddressing
    210            req->ZCL_Notify = ZCL_ConfigureReportingResp;
   \   0000005E   0x....             LDR      R0,??DataTable12_8
   \   00000060   0x61A0             STR      R0,[R4, #+24]
    211          
    212            commandManagerSendAttribute(req);
   \   00000062   0x0020             MOVS     R0,R4
   \   00000064   0x.... 0x....      BL       commandManagerSendAttribute
    213          }
   \                     ??humidityMeasurementConfigureReporting_0: (+1)
   \   00000068   0xB009             ADD      SP,SP,#+36
   \   0000006A   0xBDF0             POP      {R4-R7,PC}       ;; return
    214          
    215          /**************************************************************************//**
    216          \brief Report attribute indication handler
    217          
    218          \param[in] addressing - pointer to addressing information;
    219          \param[in] reportLength - data payload length;
    220          \param[in] reportPayload - data pointer
    221          ******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    222          static void thHumidityMeasurementReportInd(ZCL_Addressing_t *addressing, uint8_t reportLength, uint8_t *reportPayload)
    223          {
   \                     thHumidityMeasurementReportInd: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB08D             SUB      SP,SP,#+52
    224            ZCL_Report_t *rep = (ZCL_Report_t *)reportPayload;
    225            uint16_t reportValue;
    226          
    227            memcpy(&reportValue, &rep->value[0], sizeof(uint16_t));
   \   00000004   0x1CD2             ADDS     R2,R2,#+3
   \   00000006   0x4668             MOV      R0,SP
   \   00000008   0x7811             LDRB     R1,[R2, #0]
   \   0000000A   0x7001             STRB     R1,[R0, #0]
   \   0000000C   0x7851             LDRB     R1,[R2, #+1]
   \   0000000E   0x7041             STRB     R1,[R0, #+1]
    228            LOG_STRING(reportAttrIndStr, "<-Humidity Measurement Attr Report: t = %u\r\n");
   \   00000010   0xA801             ADD      R0,SP,#+4
   \   00000012   0xBF00             Nop      
   \   00000014   0x....             ADR.N    R1,?_0
   \   00000016   0x2230             MOVS     R2,#+48
   \   00000018   0x.... 0x....      BL       __aeabi_memcpy4
    229            appSnprintf(reportAttrIndStr, reportValue);
   \   0000001C   0x4668             MOV      R0,SP
   \   0000001E   0x8801             LDRH     R1,[R0, #+0]
   \   00000020   0xA801             ADD      R0,SP,#+4
   \   00000022   0x.... 0x....      BL       appSnprintf
    230          
    231            (void)addressing, (void)reportLength, (void)rep;
    232          }
   \   00000026   0xB00D             ADD      SP,SP,#+52
   \   00000028   0xBD00             POP      {PC}             ;; return
    233          
    234          /**************************************************************************//**
    235          \brief Indication of read attribute response
    236          
    237          \param[in] resp - pointer to response
    238          ******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    239          static void ZCL_ReadAttributeResp(ZCL_Notify_t *ntfy)
    240          {
   \                     ZCL_ReadAttributeResp: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB0A8             SUB      SP,SP,#+160
   \   00000004   0x0004             MOVS     R4,R0
    241            ZCL_NextElement_t element;
    242            ZCL_ReadAttributeResp_t *readAttributeResp;
    243            uint16_t attributeValue;
    244          
    245            if (ZCL_SUCCESS_STATUS == ntfy->status)
   \   00000006   0x7820             LDRB     R0,[R4, #+0]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD128             BNE      ??ZCL_ReadAttributeResp_0
    246            {
    247              element.id            = ZCL_READ_ATTRIBUTES_RESPONSE_COMMAND_ID;
   \   0000000C   0xA801             ADD      R0,SP,#+4
   \   0000000E   0x2101             MOVS     R1,#+1
   \   00000010   0x7001             STRB     R1,[R0, #+0]
    248              element.payloadLength = ntfy->responseLength;
   \   00000012   0x7A21             LDRB     R1,[R4, #+8]
   \   00000014   0x7041             STRB     R1,[R0, #+1]
    249              element.payload       = ntfy->responsePayload;
   \   00000016   0x68E0             LDR      R0,[R4, #+12]
   \   00000018   0x9002             STR      R0,[SP, #+8]
    250              element.content       = NULL;
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x9003             STR      R0,[SP, #+12]
    251          
    252              ZCL_GetNextElement(&element);
   \   0000001E   0xA801             ADD      R0,SP,#+4
   \   00000020   0x.... 0x....      BL       ZCL_GetNextElement
    253              readAttributeResp = (ZCL_ReadAttributeResp_t *) element.content;
   \   00000024   0x9C03             LDR      R4,[SP, #+12]
    254          
    255              if (readAttributeCallback)
   \   00000026   0x....             LDR      R0,??DataTable12_4
   \   00000028   0x6801             LDR      R1,[R0, #+0]
   \   0000002A   0x0008             MOVS     R0,R1
   \   0000002C   0xD001             BEQ      ??ZCL_ReadAttributeResp_1
    256                readAttributeCallback((void *)&readAttributeResp->value[0]);
   \   0000002E   0x1D20             ADDS     R0,R4,#+4
   \   00000030   0x4788             BLX      R1
    257          
    258              memcpy(&attributeValue, &readAttributeResp->value[0], sizeof(uint16_t));
   \                     ??ZCL_ReadAttributeResp_1: (+1)
   \   00000032   0x1D20             ADDS     R0,R4,#+4
   \   00000034   0x4669             MOV      R1,SP
   \   00000036   0x7802             LDRB     R2,[R0, #0]
   \   00000038   0x700A             STRB     R2,[R1, #0]
   \   0000003A   0x7842             LDRB     R2,[R0, #+1]
   \   0000003C   0x704A             STRB     R2,[R1, #+1]
    259              LOG_STRING(readAttrSuccessStr, " <-Read Humidity Measurement attribute (0x%x) response: success\r\n  t = %u\r\n");
   \   0000003E   0xA814             ADD      R0,SP,#+80
   \   00000040   0x....             ADR.N    R1,?_1
   \   00000042   0x224C             MOVS     R2,#+76
   \   00000044   0x.... 0x....      BL       __aeabi_memcpy4
    260              appSnprintf(readAttrSuccessStr, (unsigned)readAttributeResp->id, attributeValue);
   \   00000048   0x7821             LDRB     R1,[R4, #+0]
   \   0000004A   0x7860             LDRB     R0,[R4, #+1]
   \   0000004C   0x0600             LSLS     R0,R0,#+24
   \   0000004E   0x0C00             LSRS     R0,R0,#+16
   \   00000050   0x4301             ORRS     R1,R1,R0
   \   00000052   0x4668             MOV      R0,SP
   \   00000054   0x8802             LDRH     R2,[R0, #+0]
   \   00000056   0xA814             ADD      R0,SP,#+80
   \   00000058   0x.... 0x....      BL       appSnprintf
   \   0000005C   0xE008             B        ??ZCL_ReadAttributeResp_2
    261            }
    262            else
    263            {
    264              LOG_STRING(readAttrFailStr, " +Read Humidity Measurement attribute failed: status = 0x%x\r\n");
   \                     ??ZCL_ReadAttributeResp_0: (+1)
   \   0000005E   0xA804             ADD      R0,SP,#+16
   \   00000060   0x....             ADR.N    R1,?_2
   \   00000062   0x2240             MOVS     R2,#+64
   \   00000064   0x.... 0x....      BL       __aeabi_memcpy4
    265              appSnprintf(readAttrFailStr, (unsigned)ntfy->status);
   \   00000068   0x7821             LDRB     R1,[R4, #+0]
   \   0000006A   0xA804             ADD      R0,SP,#+16
   \   0000006C   0x.... 0x....      BL       appSnprintf
    266            }
    267          }
   \                     ??ZCL_ReadAttributeResp_2: (+1)
   \   00000070   0xB028             ADD      SP,SP,#+160
   \   00000072   0xBD10             POP      {R4,PC}          ;; return
    268          
    269          /**************************************************************************//**
    270          \brief Indication of write attribute response
    271          
    272          \param[in] resp - pointer to response
    273          ******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    274          static void ZCL_WriteAttributeResp(ZCL_Notify_t *ntfy)
    275          {
   \                     ZCL_WriteAttributeResp: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB0A0             SUB      SP,SP,#+128
   \   00000004   0x0004             MOVS     R4,R0
    276            if (ZCL_SUCCESS_STATUS == ntfy->status)
   \   00000006   0x7820             LDRB     R0,[R4, #+0]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD10D             BNE      ??ZCL_WriteAttributeResp_0
    277            {
    278              if (writeAttributeCallback)
   \   0000000C   0x....             LDR      R0,??DataTable12_6
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0x0001             MOVS     R1,R0
   \   00000012   0xD000             BEQ      ??ZCL_WriteAttributeResp_1
    279                writeAttributeCallback();
   \   00000014   0x4780             BLX      R0
    280          
    281              LOG_STRING(writeAttrSuccessStr, " <-Write Humidity Measurement attribute response: success\r\n");
   \                     ??ZCL_WriteAttributeResp_1: (+1)
   \   00000016   0xA810             ADD      R0,SP,#+64
   \   00000018   0x....             ADR.N    R1,?_3
   \   0000001A   0x223C             MOVS     R2,#+60
   \   0000001C   0x.... 0x....      BL       __aeabi_memcpy4
    282              appSnprintf(writeAttrSuccessStr);
   \   00000020   0xA810             ADD      R0,SP,#+64
   \   00000022   0x.... 0x....      BL       appSnprintf
   \   00000026   0xE009             B        ??ZCL_WriteAttributeResp_2
    283            }
    284            else
    285            {
    286              LOG_STRING(writeAttrFailStrTwo, " +Write Humidity Measurement attribute failed: status = 0x%x\r\n");
   \                     ??ZCL_WriteAttributeResp_0: (+1)
   \   00000028   0x4668             MOV      R0,SP
   \   0000002A   0xBF00             Nop      
   \   0000002C   0x....             ADR.N    R1,?_4
   \   0000002E   0x2240             MOVS     R2,#+64
   \   00000030   0x.... 0x....      BL       __aeabi_memcpy4
    287              appSnprintf(writeAttrFailStrTwo, (unsigned)ntfy->status);
   \   00000034   0x7821             LDRB     R1,[R4, #+0]
   \   00000036   0x4668             MOV      R0,SP
   \   00000038   0x.... 0x....      BL       appSnprintf
    288            }
    289          }
   \                     ??ZCL_WriteAttributeResp_2: (+1)
   \   0000003C   0xB020             ADD      SP,SP,#+128
   \   0000003E   0xBD10             POP      {R4,PC}          ;; return
    290          
    291          /**************************************************************************//**
    292          \brief Indication of configure reporting response
    293          
    294          \param[in] resp - pointer to response
    295          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    296          static void ZCL_ConfigureReportingResp(ZCL_Notify_t *ntfy)
    297          {
    298            (void)ntfy;
    299          }
   \                     ZCL_ConfigureReportingResp: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   0x00000405         DC32     0x405

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_1:
   \   00000000   0x........         DC32     thHumidityMeasurementReportInd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_2:
   \   00000000   0x........         DC32     thHumidityMeasurementClusterServerAttributes

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_3:
   \   00000000   0x00002710         DC32     0x2710

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_4:
   \   00000000   0x........         DC32     readAttributeCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_5:
   \   00000000   0x........         DC32     ZCL_ReadAttributeResp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_6:
   \   00000000   0x........         DC32     writeAttributeCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_7:
   \   00000000   0x........         DC32     ZCL_WriteAttributeResp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_8:
   \   00000000   0x........         DC32     ZCL_ConfigureReportingResp

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x3C 0x2D          DC8 "<-Humidity Measurement Attr Report: t = %u\015\012"
   \              0x48 0x75    
   \              0x6D 0x69    
   \              0x64 0x69    
   \              0x74 0x79    
   \              0x20 0x4D    
   \              0x65 0x61    
   \              0x73 0x75    
   \              0x72 0x65    
   \              0x6D 0x65    
   \              0x6E 0x74    
   \              0x20 0x41    
   \              0x74 0x74    
   \              0x72 0x20    
   \              0x52 0x65    
   \              0x70 0x6F    
   \              0x72 0x74    
   \              0x3A 0x20    
   \              0x74 0x20    
   \              0x3D 0x20    
   \              0x25 0x75    
   \              0x0D 0x0A    
   \              0x00         
   \   0000002D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x20 0x3C          DC8 20H, 3CH, 2DH, 52H, 65H, 61H, 64H, 20H
   \              0x2D 0x52    
   \              0x65 0x61    
   \              0x64 0x20    
   \   00000008   0x48 0x75          DC8 48H, 75H, 6DH, 69H, 64H, 69H, 74H, 79H
   \              0x6D 0x69    
   \              0x64 0x69    
   \              0x74 0x79    
   \   00000010   0x20 0x4D          DC8 20H, 4DH, 65H, 61H, 73H, 75H, 72H, 65H
   \              0x65 0x61    
   \              0x73 0x75    
   \              0x72 0x65    
   \   00000018   0x6D 0x65          DC8 6DH, 65H, 6EH, 74H, 20H, 61H, 74H, 74H
   \              0x6E 0x74    
   \              0x20 0x61    
   \              0x74 0x74    
   \   00000020   0x72 0x69          DC8 72H, 69H, 62H, 75H, 74H, 65H, 20H, 28H
   \              0x62 0x75    
   \              0x74 0x65    
   \              0x20 0x28    
   \   00000028   0x30 0x78          DC8 30H, 78H, 25H, 78H, 29H, 20H, 72H, 65H
   \              0x25 0x78    
   \              0x29 0x20    
   \              0x72 0x65    
   \   00000030   0x73 0x70          DC8 73H, 70H, 6FH, 6EH, 73H, 65H, 3AH, 20H
   \              0x6F 0x6E    
   \              0x73 0x65    
   \              0x3A 0x20    
   \   00000038   0x73 0x75          DC8 73H, 75H, 63H, 63H, 65H, 73H, 73H, 0DH
   \              0x63 0x63    
   \              0x65 0x73    
   \              0x73 0x0D    
   \   00000040   0x0A 0x20          DC8 0AH, 20H, 20H, 74H, 20H, 3DH, 20H, 25H
   \              0x20 0x74    
   \              0x20 0x3D    
   \              0x20 0x25    
   \   00000048   0x75 0x0D          DC8 75H, 0DH, 0AH, 0
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x20 0x2B          DC8 20H, 2BH, 52H, 65H, 61H, 64H, 20H, 48H
   \              0x52 0x65    
   \              0x61 0x64    
   \              0x20 0x48    
   \   00000008   0x75 0x6D          DC8 75H, 6DH, 69H, 64H, 69H, 74H, 79H, 20H
   \              0x69 0x64    
   \              0x69 0x74    
   \              0x79 0x20    
   \   00000010   0x4D 0x65          DC8 4DH, 65H, 61H, 73H, 75H, 72H, 65H, 6DH
   \              0x61 0x73    
   \              0x75 0x72    
   \              0x65 0x6D    
   \   00000018   0x65 0x6E          DC8 65H, 6EH, 74H, 20H, 61H, 74H, 74H, 72H
   \              0x74 0x20    
   \              0x61 0x74    
   \              0x74 0x72    
   \   00000020   0x69 0x62          DC8 69H, 62H, 75H, 74H, 65H, 20H, 66H, 61H
   \              0x75 0x74    
   \              0x65 0x20    
   \              0x66 0x61    
   \   00000028   0x69 0x6C          DC8 69H, 6CH, 65H, 64H, 3AH, 20H, 73H, 74H
   \              0x65 0x64    
   \              0x3A 0x20    
   \              0x73 0x74    
   \   00000030   0x61 0x74          DC8 61H, 74H, 75H, 73H, 20H, 3DH, 20H, 30H
   \              0x75 0x73    
   \              0x20 0x3D    
   \              0x20 0x30    
   \   00000038   0x78 0x25          DC8 78H, 25H, 78H, 0DH, 0AH, 0
   \              0x78 0x0D    
   \              0x0A 0x00    
   \   0000003E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_3:
   \   00000000   0x20 0x3C          DC8 20H, 3CH, 2DH, 57H, 72H, 69H, 74H, 65H
   \              0x2D 0x57    
   \              0x72 0x69    
   \              0x74 0x65    
   \   00000008   0x20 0x48          DC8 20H, 48H, 75H, 6DH, 69H, 64H, 69H, 74H
   \              0x75 0x6D    
   \              0x69 0x64    
   \              0x69 0x74    
   \   00000010   0x79 0x20          DC8 79H, 20H, 4DH, 65H, 61H, 73H, 75H, 72H
   \              0x4D 0x65    
   \              0x61 0x73    
   \              0x75 0x72    
   \   00000018   0x65 0x6D          DC8 65H, 6DH, 65H, 6EH, 74H, 20H, 61H, 74H
   \              0x65 0x6E    
   \              0x74 0x20    
   \              0x61 0x74    
   \   00000020   0x74 0x72          DC8 74H, 72H, 69H, 62H, 75H, 74H, 65H, 20H
   \              0x69 0x62    
   \              0x75 0x74    
   \              0x65 0x20    
   \   00000028   0x72 0x65          DC8 72H, 65H, 73H, 70H, 6FH, 6EH, 73H, 65H
   \              0x73 0x70    
   \              0x6F 0x6E    
   \              0x73 0x65    
   \   00000030   0x3A 0x20          DC8 3AH, 20H, 73H, 75H, 63H, 63H, 65H, 73H
   \              0x73 0x75    
   \              0x63 0x63    
   \              0x65 0x73    
   \   00000038   0x73 0x0D          DC8 73H, 0DH, 0AH, 0
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_4:
   \   00000000   0x20 0x2B          DC8 20H, 2BH, 57H, 72H, 69H, 74H, 65H, 20H
   \              0x57 0x72    
   \              0x69 0x74    
   \              0x65 0x20    
   \   00000008   0x48 0x75          DC8 48H, 75H, 6DH, 69H, 64H, 69H, 74H, 79H
   \              0x6D 0x69    
   \              0x64 0x69    
   \              0x74 0x79    
   \   00000010   0x20 0x4D          DC8 20H, 4DH, 65H, 61H, 73H, 75H, 72H, 65H
   \              0x65 0x61    
   \              0x73 0x75    
   \              0x72 0x65    
   \   00000018   0x6D 0x65          DC8 6DH, 65H, 6EH, 74H, 20H, 61H, 74H, 74H
   \              0x6E 0x74    
   \              0x20 0x61    
   \              0x74 0x74    
   \   00000020   0x72 0x69          DC8 72H, 69H, 62H, 75H, 74H, 65H, 20H, 66H
   \              0x62 0x75    
   \              0x74 0x65    
   \              0x20 0x66    
   \   00000028   0x61 0x69          DC8 61H, 69H, 6CH, 65H, 64H, 3AH, 20H, 73H
   \              0x6C 0x65    
   \              0x64 0x3A    
   \              0x20 0x73    
   \   00000030   0x74 0x61          DC8 74H, 61H, 74H, 75H, 73H, 20H, 3DH, 20H
   \              0x74 0x75    
   \              0x73 0x20    
   \              0x3D 0x20    
   \   00000038   0x30 0x78          DC8 30H, 78H, 25H, 78H, 0DH, 0AH, 0
   \              0x25 0x78    
   \              0x0D 0x0A    
   \              0x00         
   \   0000003F   0x00               DC8 0
    300          
    301          #endif // APP_DEVICE_TYPE_THERMOSTAT
    302          
    303          // eof thHumidityMeasuementCluster.c

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   ZCL_ConfigureReportingResp
     168   ZCL_ReadAttributeResp
       168   -- Indirect call
       168   -> ZCL_GetNextElement
       168   -> __aeabi_memcpy4
       168   -> appSnprintf
     136   ZCL_WriteAttributeResp
       136   -- Indirect call
       136   -> __aeabi_memcpy4
       136   -> appSnprintf
       8   humidityMeasurementClusterInit
         8   -> ZCL_GetCluster
         8   -> ZCL_ReportOnChangeIfNeeded
      56   humidityMeasurementConfigureReporting
        56   -> ZCL_PutNextElement
        56   -> commandManagerSendAttribute
        56   -> fillCommandRequest
        56   -> fillDstAddressing
        56   -> getFreeCommand
      48   humidityMeasurementReadAttribute
        48   -> ZCL_PutNextElement
        48   -> commandManagerSendAttribute
        48   -> fillCommandRequest
        48   -> fillDstAddressing
        48   -> getFreeCommand
       8   humidityMeasurementUpdateMeasuredValue
         8   -> ZCL_ReportOnChangeIfNeeded
       8   humidityMeasurementUpdateTolerance
         8   -> ZCL_ReportOnChangeIfNeeded
         8   -> rand
         8 __aeabi_idivmod
      32   humidityMeasurementWriteAttribute
        32   -> __aeabi_memcpy
        32   -> commandManagerSendAttribute
        32   -> fillCommandRequest
        32   -> fillDstAddressing
        32   -> getFreeCommand
      56   thHumidityMeasurementReportInd
        56   -> __aeabi_memcpy4
        56   -> appSnprintf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable12
       4  ??DataTable12_1
       4  ??DataTable12_2
       4  ??DataTable12_3
       4  ??DataTable12_4
       4  ??DataTable12_5
       4  ??DataTable12_6
       4  ??DataTable12_7
       4  ??DataTable12_8
      48  ?_0
      76  ?_1
      64  ?_2
      60  ?_3
      64  ?_4
       2  ZCL_ConfigureReportingResp
     116  ZCL_ReadAttributeResp
      64  ZCL_WriteAttributeResp
      74  humidityMeasurementClusterInit
     108  humidityMeasurementConfigureReporting
      94  humidityMeasurementReadAttribute
      30  humidityMeasurementUpdateMeasuredValue
      28  humidityMeasurementUpdateTolerance
     100  humidityMeasurementWriteAttribute
       4  readAttributeCallback
      64  thHumidityMeasurementClusterServerAttributes
      42  thHumidityMeasurementReportInd
       4  writeAttributeCallback

 
     8 bytes in section .bss
    64 bytes in section .data
 1 006 bytes in section .text
 
 1 006 bytes of CODE memory
    72 bytes of DATA memory

Errors: none
Warnings: none
