###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.4.8167/W32 for ARM        31/Mar/2015  18:40:52
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\BitCloud\Components\SystemEnvironment\src\sysMutex.c
#    Command line =  
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\BitCloud\Components\SystemEnvironment\src\sysMutex.c
#        -D BOARD_SAMR21 -D BOARD_QTOUCH_XPRO -D AT86RF233 -D ATSAMR21G18A -D
#        HAL_8MHz -D STACK_TYPE_ALL -D STDLINK_SECURITY_MODE -lC
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects\All_StdlinkSec_SamR21_Atsamr21g18a_Rf233_8Mhz/List\
#        --diag_suppress Pa050,Pe188 -o
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects\All_StdlinkSec_SamR21_Atsamr21g18a_Rf233_8Mhz/Obj\
#        --debug --endian=little --cpu=Cortex-M0+ -e --fpu=None --dlib_config
#        "C:\Program Files\IAR Systems\Embedded Workbench
#        7.30\arm\INC\c\DLib_Config_Full.h" --preinclude
#        MakerulesBc_All_StdlinkSec_Atsamr21g18a_Rf233_Iar.h -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/..\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../dimmableLight/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../dimmerSwitch/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../multiSensor/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../thermostat/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../ias_ace/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../combinedInterface/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../common/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../common/clusters/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/BSP/SAMR21/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/SystemEnvironment/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/lib\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/HAL/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/BSP\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/BSP/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/BSP/QTouch_XPRO/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/NWK/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/NWK/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZDO/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZDO/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/APS/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/APS/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/SystemEnvironment/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ConfigServer/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ConfigServer/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/PersistDataServer/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/PersistDataServer/std/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/PersistDataServer/wl/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Types/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Util/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Timer/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Task/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_ErrH/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Log/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Memory/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Init/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/S_Nv/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/S_XNv/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/D_Nv/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/D_XNv/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/D_XNv/src\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/S_XNv/src\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/Security/TrustCentre/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/Security/ServiceProvider/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/HAL/drivers/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/HAL/drivers/VCP/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/HAL/cortexm0+/atsamr21/common/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZCL/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZCL/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_ENV/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_HWI/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_HWD_PHY/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_HWD_PHY/RF231_RF212/PHY/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_HWD_PHY/RF231_RF212/MAC_HWD/include\
#        -Ohz --use_c++_inline
#    List file    =  
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects\All_StdlinkSec_SamR21_Atsamr21g18a_Rf233_8Mhz/List\sysMutex.lst
#    Object file  =  
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects\All_StdlinkSec_SamR21_Atsamr21g18a_Rf233_8Mhz/Obj\sysMutex.o
#
###############################################################################

D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\BitCloud\Components\SystemEnvironment\src\sysMutex.c
      1          /**************************************************************************//**
      2            \file sysMutex.c
      3          
      4            \brief Implementation of system asynchronous mutex.
      5          
      6            \author
      7              Atmel Corporation: http://www.atmel.com \n
      8              Support email: avr@atmel.com
      9          
     10            Copyright (c) 2008-2015, Atmel Corporation. All rights reserved.
     11            Licensed under Atmel's Limited License Agreement (BitCloudTM).
     12          
     13            \internal
     14             History:
     15              2012-11-23 Max Gekk - Created.
     16             Last change:
     17              $Id: sysMutex.c 27584 2015-01-09 14:45:42Z unithra.c $
     18           ******************************************************************************/
     19          /******************************************************************************
     20                                         Includes section
     21           ******************************************************************************/
     22          #include <sysMutex.h>
     23          #include <sysDbg.h>
     24          #include <sysUtils.h>
     25          #include <sysAssert.h>
     26          
     27          /******************************************************************************
     28                                      Implementations section
     29           ******************************************************************************/
     30          /**************************************************************************//**
     31            \brief Puts owner's structure to the mutex queue.
     32          
     33            \param[in] mutex - the pointer to a mutex.
     34            \param[in] owner - the pointer to owner's structure. Memory for this structure
     35                               is allocated by the owner. Memory can't be reused by owner
     36                               the mutex is locked by the owner.
     37          
     38            \return true - the locking operation finishes successfuly otherwise
     39                    false - the operation was postponed. The SYS_MutexLockConf() will be
     40                    called when the mutex is locked for this owner.
     41           ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     42          bool SYS_MutexLock(SYS_Mutex_t *const mutex, SYS_MutexOwner_t *const owner)
     43          {
   \                     SYS_MutexLock: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000E             MOVS     R6,R1
     44            const bool isUnlocked = (NULL == getQueueElem(mutex));
   \   00000006   0x6820             LDR      R0,[R4, #+0]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD101             BNE      ??SYS_MutexLock_0
   \   0000000C   0x2501             MOVS     R5,#+1
   \   0000000E   0xE000             B        ??SYS_MutexLock_1
   \                     ??SYS_MutexLock_0: (+1)
   \   00000010   0x2500             MOVS     R5,#+0
     45          
     46            SYS_E_ASSERT_FATAL(((NULL != mutex) && (NULL != owner)), SYSMUTEX_MUTEXLOCK0);
   \                     ??SYS_MutexLock_1: (+1)
   \   00000012   0x2C00             CMP      R4,#+0
   \   00000014   0xD001             BEQ      ??SYS_MutexLock_2
   \   00000016   0x2E00             CMP      R6,#+0
   \   00000018   0xD104             BNE      ??SYS_MutexLock_3
   \                     ??SYS_MutexLock_2: (+1)
   \   0000001A   0x....             LDR      R0,??DataTable2  ;; 0x8007
   \   0000001C   0x....             LDR      R1,??DataTable2_1
   \   0000001E   0x8008             STRH     R0,[R1, #+0]
   \   00000020   0x.... 0x....      BL       SYS_DefAssertCallbackFatal
     47            putQueueElem(mutex, &owner->service.qelem);
   \                     ??SYS_MutexLock_3: (+1)
   \   00000024   0x0031             MOVS     R1,R6
   \   00000026   0x0020             MOVS     R0,R4
   \   00000028   0x.... 0x....      BL       putQueueElem
     48          
     49            return isUnlocked;
   \   0000002C   0x0028             MOVS     R0,R5
   \   0000002E   0xBD70             POP      {R4-R6,PC}       ;; return
     50          }
     51          
     52          /**************************************************************************//**
     53            \brief Unlocks a mutex using synchronous request.
     54          
     55            \param[in] mutex - the pointer to a locked mutex.
     56            \param[in] owner - the pointer to owner's structure. Memory for this structure
     57                               can be reused after this operation.
     58          
     59            \return true - the locking operation finishes successfuly otherwise
     60                    false - the mutex is not locked by the owner.
     61           ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     62          bool SYS_MutexUnlock(SYS_Mutex_t *const mutex, SYS_MutexOwner_t *const owner)
     63          {
   \                     SYS_MutexUnlock: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
     64            QueueElement_t *qelem;
     65            SYS_MutexOwner_t *currentOwner;
     66          
     67            SYS_E_ASSERT_FATAL(((NULL != mutex) && (NULL != owner)), SYSMUTEX_MUTEXUNLOCK0);
   \   00000006   0x....             LDR      R6,??DataTable2_1
   \   00000008   0x2C00             CMP      R4,#+0
   \   0000000A   0xD001             BEQ      ??SYS_MutexUnlock_0
   \   0000000C   0x2D00             CMP      R5,#+0
   \   0000000E   0xD103             BNE      ??SYS_MutexUnlock_1
   \                     ??SYS_MutexUnlock_0: (+1)
   \   00000010   0x....             LDR      R0,??DataTable2_2  ;; 0x8008
   \   00000012   0x8030             STRH     R0,[R6, #+0]
   \   00000014   0x.... 0x....      BL       SYS_DefAssertCallbackFatal
     68          
     69            qelem = getQueueElem(mutex);
   \                     ??SYS_MutexUnlock_1: (+1)
   \   00000018   0x6820             LDR      R0,[R4, #+0]
     70            if (NULL == qelem)
   \   0000001A   0x2800             CMP      R0,#+0
   \   0000001C   0xD101             BNE      ??SYS_MutexUnlock_2
     71            {
     72              SYS_E_ASSERT_FATAL(false, SYSMUTEX_MUTEXUNLOCK1);
   \   0000001E   0x....             LDR      R0,??DataTable2_3  ;; 0x8009
   \   00000020   0xE002             B.N      ??SYS_MutexUnlock_3
     73              return false;
     74            }
     75          
     76            currentOwner = GET_PARENT_BY_FIELD(SYS_MutexOwner_t, service.qelem, qelem);
     77            if (owner != currentOwner)
   \                     ??SYS_MutexUnlock_2: (+1)
   \   00000022   0x4285             CMP      R5,R0
   \   00000024   0xD005             BEQ      ??SYS_MutexUnlock_4
     78            {
     79              SYS_E_ASSERT_FATAL(false, SYSMUTEX_MUTEXUNLOCK2);
   \   00000026   0x....             LDR      R0,??DataTable2_4  ;; 0x800a
   \                     ??SYS_MutexUnlock_3: (+1)
   \   00000028   0x8030             STRH     R0,[R6, #+0]
   \   0000002A   0x.... 0x....      BL       SYS_DefAssertCallbackFatal
     80              return false;
   \   0000002E   0x2000             MOVS     R0,#+0
   \   00000030   0xBD70             POP      {R4-R6,PC}
     81            }
     82            else
     83              deleteHeadQueueElem(mutex);
   \                     ??SYS_MutexUnlock_4: (+1)
   \   00000032   0x0020             MOVS     R0,R4
   \   00000034   0x.... 0x....      BL       deleteHeadQueueElem
     84          
     85            qelem = getQueueElem(mutex);
   \   00000038   0x6825             LDR      R5,[R4, #+0]
     86            if (NULL != qelem)
   \   0000003A   0x2D00             CMP      R5,#+0
   \   0000003C   0xD00A             BEQ      ??SYS_MutexUnlock_5
     87            {
     88              currentOwner = GET_PARENT_BY_FIELD(SYS_MutexOwner_t, service.qelem, qelem);
     89              SYS_E_ASSERT_FATAL(currentOwner->SYS_MutexLockConf, SYSMUTEX_MUTEXUNLOCK3);
   \   0000003E   0x68A8             LDR      R0,[R5, #+8]
   \   00000040   0x2800             CMP      R0,#+0
   \   00000042   0xD103             BNE      ??SYS_MutexUnlock_6
   \   00000044   0x....             LDR      R0,??DataTable2_5  ;; 0x800b
   \   00000046   0x8030             STRH     R0,[R6, #+0]
   \   00000048   0x.... 0x....      BL       SYS_DefAssertCallbackFatal
     90              currentOwner->SYS_MutexLockConf(mutex, currentOwner->context);
   \                     ??SYS_MutexUnlock_6: (+1)
   \   0000004C   0x6869             LDR      R1,[R5, #+4]
   \   0000004E   0x0020             MOVS     R0,R4
   \   00000050   0x68AA             LDR      R2,[R5, #+8]
   \   00000052   0x4790             BLX      R2
     91            }
     92          
     93            return true;
   \                     ??SYS_MutexUnlock_5: (+1)
   \   00000054   0x2001             MOVS     R0,#+1
   \   00000056   0xBD70             POP      {R4-R6,PC}       ;; return
     94          }
     95          
     96          /**************************************************************************//**
     97            \brief Checks whether mutex is locked.
     98          
     99            \ingroup sys
    100          
    101            \param[in] mutex - the pointer to a locked mutex.
    102            \param[in] owner - the pointer to owner's structure. Memory for this structure
    103                               can be reused after this operation.
    104          
    105            \return true - the mutex is locked by the owner,
    106                    false - the mutex is not locked by the owner.
    107           ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    108          bool SYS_IsMutexLocked(SYS_Mutex_t *const mutex, SYS_MutexOwner_t *const owner)
    109          {
   \                     SYS_IsMutexLocked: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x000C             MOVS     R4,R1
    110            SYS_E_ASSERT_FATAL(((NULL != mutex) && (NULL != owner)), SYSMUTEX_ISMUTEXLOCKED0);
   \   00000006   0x2D00             CMP      R5,#+0
   \   00000008   0xD001             BEQ      ??SYS_IsMutexLocked_0
   \   0000000A   0x2C00             CMP      R4,#+0
   \   0000000C   0xD104             BNE      ??SYS_IsMutexLocked_1
   \                     ??SYS_IsMutexLocked_0: (+1)
   \   0000000E   0x....             LDR      R0,??DataTable2_6  ;; 0x800c
   \   00000010   0x....             LDR      R1,??DataTable2_1
   \   00000012   0x8008             STRH     R0,[R1, #+0]
   \   00000014   0x.... 0x....      BL       SYS_DefAssertCallbackFatal
    111          
    112            return isQueueElem(mutex, &owner->service.qelem);
   \                     ??SYS_IsMutexLocked_1: (+1)
   \   00000018   0x0021             MOVS     R1,R4
   \   0000001A   0x0028             MOVS     R0,R5
   \   0000001C   0x.... 0x....      BL       isQueueElem
   \   00000020   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    113          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x00008007         DC32     0x8007

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     gAssertDbgCode

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x00008008         DC32     0x8008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x00008009         DC32     0x8009

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x0000800A         DC32     0x800a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x0000800B         DC32     0x800b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x0000800C         DC32     0x800c
    114          
    115          /** eof sysMutex.c */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   SYS_IsMutexLocked
        16   -> SYS_DefAssertCallbackFatal
        16   -> isQueueElem
      16   SYS_MutexLock
        16   -> SYS_DefAssertCallbackFatal
        16   -> putQueueElem
      16   SYS_MutexUnlock
        16   -- Indirect call
        16   -> SYS_DefAssertCallbackFatal
        16   -> deleteHeadQueueElem


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
      34  SYS_IsMutexLocked
      48  SYS_MutexLock
      88  SYS_MutexUnlock

 
 198 bytes in section .text
 
 198 bytes of CODE memory

Errors: none
Warnings: none
