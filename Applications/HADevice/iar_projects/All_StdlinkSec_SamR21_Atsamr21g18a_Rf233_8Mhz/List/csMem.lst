###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.4.8167/W32 for ARM        31/Mar/2015  18:40:17
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\BitCloud\Components\ConfigServer\src\csMem.c
#    Command line =  
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\BitCloud\Components\ConfigServer\src\csMem.c
#        -D BOARD_SAMR21 -D BOARD_QTOUCH_XPRO -D AT86RF233 -D ATSAMR21G18A -D
#        HAL_8MHz -D STACK_TYPE_ALL -D STDLINK_SECURITY_MODE -lC
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects\All_StdlinkSec_SamR21_Atsamr21g18a_Rf233_8Mhz/List\
#        --diag_suppress Pa050,Pe188 -o
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects\All_StdlinkSec_SamR21_Atsamr21g18a_Rf233_8Mhz/Obj\
#        --debug --endian=little --cpu=Cortex-M0+ -e --fpu=None --dlib_config
#        "C:\Program Files\IAR Systems\Embedded Workbench
#        7.30\arm\INC\c\DLib_Config_Full.h" --preinclude
#        MakerulesBc_All_StdlinkSec_Atsamr21g18a_Rf233_Iar.h -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/..\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../dimmableLight/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../dimmerSwitch/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../multiSensor/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../thermostat/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../ias_ace/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../combinedInterface/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../common/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../common/clusters/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/BSP/SAMR21/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/SystemEnvironment/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/lib\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/HAL/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/BSP\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/BSP/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/BSP/QTouch_XPRO/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/NWK/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/NWK/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZDO/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZDO/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/APS/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/APS/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/SystemEnvironment/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ConfigServer/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ConfigServer/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/PersistDataServer/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/PersistDataServer/std/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/PersistDataServer/wl/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Types/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Util/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Timer/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Task/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_ErrH/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Log/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Memory/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Init/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/S_Nv/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/S_XNv/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/D_Nv/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/D_XNv/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/D_XNv/src\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/S_XNv/src\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/Security/TrustCentre/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/Security/ServiceProvider/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/HAL/drivers/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/HAL/drivers/VCP/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/HAL/cortexm0+/atsamr21/common/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZCL/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZCL/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_ENV/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_HWI/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_HWD_PHY/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_HWD_PHY/RF231_RF212/PHY/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_HWD_PHY/RF231_RF212/MAC_HWD/include\
#        -Ohz --use_c++_inline
#    List file    =  
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects\All_StdlinkSec_SamR21_Atsamr21g18a_Rf233_8Mhz/List\csMem.lst
#    Object file  =  
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects\All_StdlinkSec_SamR21_Atsamr21g18a_Rf233_8Mhz/Obj\csMem.o
#
###############################################################################

D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\BitCloud\Components\ConfigServer\src\csMem.c
      1          /******************************************************************************
      2            \file csMem.c
      3          
      4            \brief
      5              BitCloud information bases memory
      6          
      7            \author
      8              Atmel Corporation: http://www.atmel.com \n
      9              Support email: avr@atmel.com
     10          
     11            Copyright (c) 2008-2015 , Atmel Corporation. All rights reserved.
     12            Licensed under Atmel's Limited License Agreement (BitCloudTM).
     13          
     14            \internal
     15              History:
     16              21.10.10 A. Razinkov - Created.
     17          ******************************************************************************/
     18          
     19          /******************************************************************************
     20                              Includes section
     21          ******************************************************************************/
     22          #include <csBuffers.h>
     23          #include <macenvMem.h>
     24          #ifndef _MAC2_
     25          #include <zdoZib.h>
     26          #endif
     27          #include <csSIB.h>
     28          #include <configServer.h>
     29          
     30          /******************************************************************************
     31                              External variables section
     32          ******************************************************************************/
     33          #if defined(_USE_KF_MAC_)
     34          extern uint64_t tal_pib_IeeeAddress;
     35          #endif // defined(_USE_KF_MAC_)
     36          
     37          /******************************************************************************
     38                              Global variables section
     39          ******************************************************************************/
     40          /* BitCloud information bases allocation */
     41          #if !defined(_USE_KF_MAC_)

   \                                 In section .bss, align 8
     42          PIB_t csPIB;
   \                     csPIB:
   \   00000000                      DS8 72
     43          #endif // defined(_USE_KF_MAC_)
     44          
     45          #ifndef _MAC2_
     46          NIB_t csNIB;
     47          ZIB_t csZIB;
   \                     csZIB:
   \   00000048                      DS8 24
   \                     csNIB:
   \   00000060                      DS8 152
     48          AIB_t csAIB;
   \                     csAIB:
   \   000000F8                      DS8 40
     49          #endif
     50          SIB_t csSIB;
   \                     csSIB:
   \   00000120                      DS8 88
     51          
     52          /* BitCloud memory buffers allocation */
     53          CS_StackBuffers_t stackBuffers;
   \                     stackBuffers:
   \   00000178                      DS8 9464
     54          
     55          /* FLASH memory allocation to store read-only parameters */
     56          
     57          /* Default information bases item values */
     58          #ifndef _MAC2_

   \                                 In section .text, align 8, keep-with-next
     59          NIB_t PROGMEM_DECLARE(defaultNIB) =
   \                     defaultNIB:
   \   00000000   0x0000 0x0000      DC16 0, 0, 0, 0
   \              0x0000 0x0000
   \   00000008   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   0000000C   0x00000000         DC32 0
   \   00000010   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000024   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000034   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000044   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000054   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000066   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 2, 2, 5, 5, 8, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x02    
   \              0x01 0x00    
   \              0x02 0x02    
   \              0x05 0x05    
   \              0x08 0x00    
   \              0x00 0x00    
   \   0000007A   0xFFFF 0x1234      DC16 65535, 4660
   \   0000007E   0x00 0x00          DC8 0, 0
   \   00000080   0x00000000         DC32 0, 0
   \              0x00000000   
   \   00000088   0x02 0x04          DC8 2, 4, 0, 5, 1, 0
   \              0x00 0x05    
   \              0x01 0x00    
   \   0000008E   0x0000             DC16 0
   \   00000090   0x00 0x00          DC8 0, 0, 1, 0, 0, 0, 0, 0
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
     60          {
     61          #if defined _SECURITY_
     62            .securityIB = {
     63              .securityLevel = CS_SECURITY_LEVEL,
     64              .secureAllFrames = CS_SECURITY_ALL_FRAMES
     65            },
     66          #endif
     67            .deviceType = CS_DEVICE_TYPE,
     68            .addrAlloc = CS_ADDRESS_ASSIGNMENT_METHOD,
     69            .symLink = true,
     70            .uniqueAddr = CS_NWK_UNIQUE_ADDR,
     71            .leaveReqAllowed = CS_NWK_LEAVE_REQ_ALLOWED,
     72            .stackProfile = CS_STACK_PROFILE,
     73            .protocolVersion = CS_PROTOCOL_VERSION,
     74            .maxDepth = CS_MAX_NETWORK_DEPTH,
     75            .maxNeighborRouteCost = CS_MAX_NEIGHBOR_ROUTE_COST,
     76            .maxLinkRouteCost = CS_MAX_LINK_ROUTE_COST,
     77          #if defined _NWK_THRESHOLD_ROUTING_
     78            .softLinkCostThreshold = CS_SOFT_LINK_COST_THRESHOLD,
     79          #endif /* _NWK_THRESHOLD_ROUTING_ */
     80            .channelPage = CS_CHANNEL_PAGE,
     81            .logicalChannel = 0,
     82            .networkAddress = CCPU_TO_LE16(CS_NWK_ADDR),
     83            .panId = CCPU_TO_LE16(CS_NWK_PANID),
     84            .extendedPanId = CCPU_TO_LE64(CS_NWK_EXT_PANID), /* uses as joined-to-network flag */
     85            .maxRouters = CS_MAX_CHILDREN_ROUTER_AMOUNT,
     86            .maxEndDevices = CS_MAX_CHILDREN_AMOUNT - CS_MAX_CHILDREN_ROUTER_AMOUNT
     87          };
     88          

   \                                 In section .text, align 4, keep-with-next
     89          ZIB_t PROGMEM_DECLARE(defaultZIB) =
   \                     defaultZIB:
   \   00000000   0x00200000         DC32 2097152
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 255, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x05    
   \              0xFF 0x00    
   \   00000016   0x0000             DC16 0
     90          {
     91            .permitJoinDuration = CS_PERMIT_DURATION,
     92            .channelMask = CS_CHANNEL_MASK,
     93            .zdpResponseTimeout = CS_ZDP_RESPONSE_TIMEOUT,
     94            .scanDuration = CS_SCAN_DURATION,
     95          };
     96          

   \                                 In section .text, align 8, keep-with-next
     97          AIB_t PROGMEM_DECLARE(defaultAIB) =
   \                     defaultAIB:
   \   00000000   0x02 0x03          DC8 2, 3, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000008   0xAAAAAAAA         DC32 2863311530, 2863311530
   \              0xAAAAAAAA   
   \   00000010   0xFFFF             DC16 65535
   \   00000012   0x00 0x07          DC8 0, 7, 7, 7, 7, 127, 122, 120, 90, 95, 7, 7, 7, 7, 7, 120, 127, 31
   \              0x07 0x07    
   \              0x07 0x7F    
   \              0x7A 0x78    
   \              0x5A 0x5F    
   \              0x07 0x07    
   \              0x07 0x07    
   \              0x07 0x78    
   \              0x7F 0x1F    
   \   00000024   0x03 0x00          DC8 3, 0, 0, 0
   \              0x00 0x00    
     98          {
     99            .nonMemberRadius = APS_AIB_NONMEMBER_RADIUS_DEFAULT_VALUE, /* See ZigBee spec r19, Table 2.24. */
    100            .maxFrameRetries = CS_APS_MAX_FRAME_RETRIES,
    101          #ifdef _APS_FRAGMENTATION_
    102            .fragWindowSize = CS_APS_MAX_TRANSMISSION_WINDOW_SIZE,
    103          #endif /* _APS_FRAGMENTATION_ */
    104          #ifdef _SECURITY_
    105            .trustCenterAddress = CCPU_TO_LE64(CS_APS_TRUST_CENTER_ADDRESS),
    106            .tcNwkAddr = CCPU_TO_LE16(CS_SHORT_TRUST_CENTER_ADDRESS),
    107          #ifdef _LINK_SECURITY_
    108            .securityPolicy = {0x00, 0x07, 0x07, 0x07,
    109          #ifdef _LIGHT_LINK_PROFILE_
    110                               0x07, 0x7F, 0x1a, 0x78,
    111          #else
    112                               0x07, 0x7F, 0x7a, 0x78,
    113          #endif // _LIGHT_LINK_PROFILE_
    114                               0x5a, 0x5f, 0x07, 0x07,
    115                               0x07, 0x07, 0x07, 0x78,
    116                               0x7F, 0x1F}
    117          #endif /* _LINK_SECURITY_ */
    118          #endif /* _SECURITY_ */
    119          };
    120          #endif /* !_MAC2_*/
    121          

   \                                 In section .text, align 8, keep-with-next
    122          SIB_t PROGMEM_DECLARE(defaultSIB) =
   \                     defaultSIB:
   \   00000000   0x000032C8         DC32 13000
   \   00000004   0x03 0x01          DC8 3, 1
   \   00000006   0x1234             DC16 4660
   \   00000008   0x00 0x03          DC8 0, 3, 3, 0, 0, 2, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0
   \              0x03 0x00    
   \              0x00 0x02    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x03    
   \              0x03 0x00    
   \              0x00 0x00    
   \   00000018   0x00002710         DC32 10000, 10000
   \              0x00002710   
   \   00000020   0x01 0x00          DC8 1, 0, 1, 0
   \              0x01 0x00    
   \   00000024   0x000003E8         DC32 1000
   \   00000028   0x04 0x00          DC8 4, 0, 0, 0
   \              0x00 0x00    
   \   0000002C   0x000003E8         DC32 1000
   \   00000030   0x10               DC8 16
   \   00000031   0x41 0x74          DC8 41H, 74H, 6DH, 65H, 6CH, 20H, 20H, 20H
   \              0x6D 0x65    
   \              0x6C 0x20    
   \              0x20 0x20    
   \   00000039   0x20 0x20          DC8 20H, 20H, 20H, 20H, 20H, 20H, 20H, 20H
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \   00000041   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000048   0x00000000         DC32 0, 0
   \              0x00000000   
   \   00000050   0x00 0x01          DC8 0, 1, 1, 0, 0, 0, 0, 0
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    123          {
    124            /* MAC parameters */
    125            .csMacTransactionTime = CS_MAC_TRANSACTION_TIME,
    126            .csRfTxPower = CS_RF_TX_POWER,
    127          #ifdef AT86RF212
    128            .csLbtMode = CS_LBT_MODE,
    129          #endif //AT86RF212
    130          #ifdef _FFD_
    131          #ifdef _PENDING_EMPTY_DATA_FRAME_
    132            .csMacSendEmptyDataFrame = CS_MAC_SEND_EMPTY_DATA_FRAME,
    133          #endif /*_PENDING_EMPTY_DATA_FRAME_*/
    134          #endif /*_FFD_*/
    135          #ifndef _MAC2_
    136          
    137            /* NWK parameters */
    138            .csNwkPanid = CCPU_TO_LE16(CS_NWK_PANID),
    139            .csNwkUseMulticast = CS_NWK_USE_MULTICAST,
    140            .csNwkMaxLinkStatusFailures = CS_NWK_MAX_LINK_STATUS_FAILURES,
    141            .csNwkEndDeviceMaxFailures = CS_NWK_END_DEVICE_MAX_FAILURES,
    142            .csNwkLogicalChannel = 0,
    143            .csNwkPredefinedPanid = CS_NWK_PREDEFINED_PANID,
    144            .csAddressAssignmentMethod = CS_ADDRESS_ASSIGNMENT_METHOD,
    145          #ifdef _NWK_CONCENTRATOR_
    146            .csNwkConcentratorDiscoveryTime = NWK_CONCENTRATOR_DISCOVERY_TIME,
    147          #endif
    148            .csJoinCtrl = {.method = NWK_JOIN_BY_DEFAULT},
    149            .csLeaveRejoinCtrl = NWK_DEFINE_LEAVE_CONTROL_DEFAULT,
    150            .csLeaveNonRejoinCtrl = NWK_DEFINE_LEAVE_CONTROL_DEFAULT,
    151            /* ZDO parameters */
    152            .csEndDeviceSleepPeriod = CS_END_DEVICE_SLEEP_PERIOD,
    153            .csFfdSleepPeriod = CS_FFD_SLEEP_PERIOD,
    154            .csRxOnWhenIdle = (CS_DEVICE_TYPE == DEVICE_TYPE_END_DEVICE) ? CS_RX_ON_WHEN_IDLE : true,
    155            .csComplexDescriptorAvailable = CS_COMPLEX_DESCRIPTOR_AVAILABLE,
    156            .csUserDescriptorAvailable = CS_USER_DESCRIPTOR_AVAILABLE,
    157            .csUserDescriptor = {.FieldLength = ZDP_USER_DESC_FIELD_SIZE, .FieldName = "Atmel           "},
    158            .csIndirectPollRate = CS_INDIRECT_POLL_RATE,
    159            .csZdoJoinAttempts = CS_ZDO_JOIN_ATTEMPTS,
    160            .csZdoJoinInterval = CS_ZDO_JOIN_INTERVAL,
    161            .csExtPANID = CCPU_TO_LE64(CS_EXT_PANID), /* user-defined PAN ID */
    162          
    163            /* PDS parameters*/
    164            .csDtrWakeup = CS_DTR_WAKEUP,
    165          
    166            /* ZCL parameters */
    167          #if ZCL_SUPPORT == 1
    168            #if APP_USE_OTAU == 1
    169            .csOtauDefaultServerAddress = CS_ZCL_OTAU_DEFAULT_UPGRADE_SERVER_IEEE_ADDRESS,
    170            .csOtauServerDiscoveryPeriod = CS_ZCL_OTAU_SERVER_DISCOVERY_PERIOD,
    171            .csOtauServerPageRequestUsage = CS_ZCL_OTAU_IMAGE_PAGE_REQUEST_ENABLE,
    172            .csOtauQueryInterval = CS_ZCL_OTAU_QUERY_INTERVAL,
    173            .csOtauMaxRetryCount = CS_ZCL_OTAU_MAX_RETRY_COUNT,
    174            #endif /* APP_USE_OTAU == 1 */
    175          #endif /* ZCL_SUPPORT == 1 */
    176          
    177              /* Security parameters */
    178          #ifdef _SECURITY_
    179            .csSecurityOn = CS_SECURITY_ON,
    180            .csZdoSecurityStatus = CS_ZDO_SECURITY_STATUS,
    181          #endif /* _SECURITY_ */
    182          #endif /* _MAC2_ */
    183          };
    184          
    185          #ifdef _SECURITY_

   \                                 In section .data, align 4
    186          uint8_t defaultKey[SECURITY_KEY_SIZE] = CS_NETWORK_KEY;
   \                     defaultKey:
   \   00000000   0xCC 0xCC          DC8 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204
   \              0xCC 0xCC    
   \              0xCC 0xCC    
   \              0xCC 0xCC    
   \              0xCC 0xCC    
   \              0xCC 0xCC    
   \              0xCC         
   \   0000000D   0xCC 0xCC          DC8 204, 204, 204
   \              0xCC         
    187          #endif /* _SECURITY_ */
    188          

   \                                 In section .rodata, align 4, keep-with-next
    189          CS_ReadOnlyItems_t PROGMEM_DECLARE(csReadOnlyItems) =
   \                     csReadOnlyItems:
   \   00000000   0x0085 0x006C      DC16 133, 108
   \   00000004   0x01 0x00          DC8 1, 0
   \   00000006   0x0000             DC16 0
   \   00000008   0x05 0x00          DC8 5, 0
   \   0000000A   0x0005             DC16 5
   \   0000000C   0x05 0x06          DC8 5, 6, 2, 5, 8, 4
   \              0x02 0x05    
   \              0x08 0x04    
   \   00000012   0x0005             DC16 5
   \   00000014   0x02 0x08          DC8 2, 8, 255, 0
   \              0xFF 0x00    
   \   00000018   0x00000014         DC32 20
   \   0000001C   0x08 0x08          DC8 8, 8, 3, 3, 4, 3, 7, 0
   \              0x03 0x03    
   \              0x04 0x03    
   \              0x07 0x00    
   \   00000024   0x00001A90         DC32 6800
   \   00000028   0x0E 0x00          DC8 14, 0
   \   0000002A   0x0000             DC16 0
   \   0000002C   0x05 0x3D          DC8 5, 61, 0, 0
   \              0x00 0x00    
   \   00000030   0x03020000         DC32 50462720
   \   00000034   0x1014             DC16 4116
   \   00000036   0x01 0x00          DC8 1, 0
   \   00000038   0x00002710         DC32 10000
   \   0000003C   0x01 0x00          DC8 1, 0
   \   0000003E   0x0005             DC16 5
   \   00000040   0x01 0x4F          DC8 1, 79, 80, 0, 3, 0, 0, 0
   \              0x50 0x00    
   \              0x03 0x00    
   \              0x00 0x00    
    190          {
    191            /* MAC parameters */
    192            .csMacFrameRxBufferSize = CS_MAC_FRAME_RX_BUFFER_SIZE,
    193          #ifdef _FFD_
    194            .csMacFrameDataReqBufferSize = CS_MAC_FRAME_DATA_REQ_BUFFER_SIZE,
    195          #endif
    196          #ifdef _MAC_BAN_NODE_
    197            .csMacBanTableSize = CS_BAN_TABLE_SIZE,
    198          #endif /* _MAC_BAN_NODE_ */
    199          
    200            /* NWK parameters */
    201          #ifndef _MAC2_
    202            .csNwkRouteCacheSize = CS_ROUTE_CACHE_SIZE,
    203            .csNeibTableSize = CS_NEIB_TABLE_SIZE,
    204            .csMacPanDescriptorAmount = CS_NEIB_TABLE_SIZE,
    205            .csMaxChildrenAmount = CS_MAX_CHILDREN_AMOUNT,
    206            .csMaxChildrenRouterAmount = CS_MAX_CHILDREN_ROUTER_AMOUNT,
    207            .csMaxNetworkDepth = CS_MAX_NETWORK_DEPTH,
    208            .csNwkBuffersAmount = CS_NWK_BUFFERS_AMOUNT,
    209            .csJoinIndObjAmount = CS_JOIN_IND_OBJ_AMOUNT,
    210            .csRouteTableSize = CS_ROUTE_TABLE_SIZE,
    211            .csAddressMapTableSize = CS_ADDRESS_MAP_TABLE_SIZE,
    212            .csRouteDiscoveryTableSize = CS_ROUTE_DISCOVERY_TABLE_SIZE,
    213            .csNwkBttSize = CS_NWK_BTT_SIZE,
    214            .csNwkMaxPermitJoinPeriodLogic = CS_NWK_MAX_PERMIT_JOIN_PERIOD_LOGIC,
    215            .csNwkLinkStatusCount = CS_NWK_LINK_STATUS_COUNT,
    216            .csNwkLinkStatusFragmentationPeriod = CS_NWK_LINK_STATUS_FRAGMENTATION_PERIOD,
    217          #ifdef _GROUP_TABLE_
    218            .csGroupTableSize = CS_GROUP_TABLE_SIZE,
    219          #endif /* _GROUP_TABLE_ */
    220          #ifdef _NWK_PASSIVE_ACK_
    221            .csPassiveAckAmount = CS_NWK_PASSIVE_ACK_AMOUNT,
    222          #endif /* _NWK_PASSIVE_ACK_ */
    223          
    224            /* ZDO parameters */
    225            .csZdoMaxSyncFailAmount = CS_ZDO_MAX_SYNC_FAIL_AMOUNT,
    226            .csZdoParentLinkRetryTreshold = CS_ZDO_PARENT_LINK_RETRY_THRESHOLD,
    227          
    228            /* APS parameters */
    229            .csApsDataReqBuffersAmount = CS_APS_DATA_REQ_BUFFERS_AMOUNT,
    230            .csApsAckFrameBuffesAmount = CS_APS_ACK_FRAME_BUFFERS_AMOUNT,
    231            .csDuplicateRejectionTableSize = CS_DUPLICATE_REJECTION_TABLE_SIZE,
    232          #ifdef _DUPLICATE_REJECTION_TABLE_BIT_MASK_ENABLE_
    233            .csApsDuplicateEntryCounterSize = CS_APS_DUPLICATE_ENTRY_COUNTER_SIZE,
    234          #endif /* _DUPLICATE_REJECTION_TABLE_BIT_MASK_ENABLE_ */
    235            .csApsDuplicateEntryLifeTime = CS_APS_DUPLICATE_ENTRY_LIFE_TIME,
    236          #ifdef _BINDING_
    237            .csApsBindingTableSize = CS_APS_BINDING_TABLE_SIZE,
    238          #endif /* _BINDING_ */
    239          #ifdef _APS_FRAGMENTATION_
    240            .csApsMaxBlocksAmount = CS_APS_MAX_BLOCKS_AMOUNT,
    241            .csApsBlockSize = CS_APS_BLOCK_SIZE,
    242            .csApsTxBlockSize = CS_APS_TX_BLOCK_SIZE,
    243            .csApsRxBlockSize = CS_APS_RX_BLOCK_SIZE,
    244          #endif /* _APS_FRAGMENTATION_ */
    245          
    246          #if ZCL_SUPPORT == 1
    247            .csZclMemoryBuffersAmount = CS_ZCL_MEMORY_BUFFERS_AMOUNT,
    248            .csZclMemoryBuffersSize = CS_ZCL_BUFFER_SIZE,
    249            #if APP_USE_OTAU == 1
    250              .csOtauDiscoveredServerAmount = CS_ZCL_OTAU_DISCOVERED_SERVER_AMOUNT,
    251               // server needs two buffers for incoming packets for each client session
    252              .csOtauClientSessionAmount = CS_ZCL_OTAU_CLIENT_SESSION_AMOUNT * 2,
    253              #if APP_SUPPORT_OTAU_PAGE_REQUEST == 1
    254                .csOtauServerPageRequestResponseSpacing = CS_ZCL_OTAU_IMAGE_PAGE_REQUEST_RESPONSE_SPACING,
    255                .csOtauServerPageSize = CS_ZCL_OTAU_IMAGE_PAGE_REQUEST_PAGE_SIZE,
    256              #endif /* APP_SUPPORT_OTAU_PAGE_REQUEST == 1 */
    257            #endif /* APP_USE_OTAU == 1 */
    258          #endif /* ZCL_SUPPORT == 1 */
    259          
    260          #ifdef _SECURITY_
    261            .csApsSecurityTimeoutPeriod = CS_APS_SECURITY_TIMEOUT_PERIOD,
    262            .csNwkSecurityKeysAmount = CS_NWK_SECURITY_KEYS_AMOUNT,
    263          #ifdef _TRUST_CENTRE_
    264            .csMaxTcAuthenticProcessAmount = CS_MAX_TC_AUTHENTIC_PROCESS_AMOUNT,
    265          #endif /* _TRUST_CENTRE_ */
    266          #ifdef _LINK_SECURITY_
    267            #ifdef _TRUST_CENTRE_
    268            .csMaxTcEstablishKeyAmount = CS_MAX_TC_ESTABLISH_KEY_AMOUNT,
    269            #endif /* _TRUST_CENTRE_ */
    270            .csApsKeyPairDescriptorsAmount = CS_APS_KEY_PAIR_DESCRIPTORS_AMOUNT,
    271          #endif /* _LINK_SECURITY_ */
    272          #endif /* _SECURITY_ */
    273          #ifdef _PERMISSIONS_
    274            .csPermissionsTableSize = CS_PERMISSIONS_TABLE_SIZE,
    275          #endif /* _PERMISSIONS_ */
    276            /* Other parameters */
    277            .csStackVersion = CS_STACK_VERSION,
    278            .csManufacturerCode = CCPU_TO_LE16(CS_MANUFACTURER_CODE),
    279            .csZdoCommandsAmount = CS_ZDO_COMMANDS_AMOUNT
    280          #endif /* !_MAC2_*/
    281          };
    282          
    283          /*
    284           * \brief Configuration Server items information table stored in FLASH.
    285           *        Table record contains informaion about corresponding item displacement and size.
    286           *        Records are automatically sorted by item location and type
    287           *        (atomic parameter or memory region).
    288           */
    289          #define RAM_PARAMETER(label, id, addr) [id] = {{(const void FLASH_PTR*)&(addr)}, sizeof(addr)},
    290          #define DUMMY_RAM_PARAMETER(label, id) [id] = {{NULL}, 0},
    291          #define FLASH_PARAMETER(label, id, addr) [id] = {{(const void FLASH_PTR*)&(addr)}, sizeof(addr)},
    292          #define DUMMY_FLASH_PARAMETER(label, id) [id] = {{NULL}, 0},
    293          #define MEMORY_REGION(label, id, addr) [id] = {{(const void FLASH_PTR*)&(addr)}, 0},
    294          #define DUMMY_MEMORY_REGION(label, id) [id] = {{NULL}, 0},
    295          

   \                                 In section .rodata, align 4, keep-with-next
    296          CS_MemoryItem_t PROGMEM_DECLARE(csVarItems[]) =
   \                     csVarItems:
   \   00000000   0x........         DC32 csPIB + 28H
   \   00000004   0x0008             DC16 8
   \   00000006   0x00 0x00          DC8 0, 0
   \   00000008   0x........         DC32 csPIB + 32H
   \   0000000C   0x0001             DC16 1
   \   0000000E   0x00 0x00          DC8 0, 0
   \   00000010   0x........         DC32 csSIB
   \   00000014   0x0004             DC16 4
   \   00000016   0x00 0x00          DC8 0, 0
   \   00000018   0x........         DC32 csSIB + 4H
   \   0000001C   0x0001             DC16 1
   \   0000001E   0x00 0x00          DC8 0, 0
   \   00000020   0x........         DC32 csNIB + 75H
   \   00000024   0x0001             DC16 1
   \   00000026   0x00 0x00          DC8 0, 0
   \   00000028   0x........         DC32 csNIB + 76H
   \   0000002C   0x0001             DC16 1
   \   0000002E   0x00 0x00          DC8 0, 0
   \   00000030   0x........         DC32 csNIB + 80H
   \   00000034   0x0008             DC16 8
   \   00000036   0x00 0x00          DC8 0, 0
   \   00000038   0x........         DC32 csNIB + 7AH
   \   0000003C   0x0002             DC16 2
   \   0000003E   0x00 0x00          DC8 0, 0
   \   00000040   0x........         DC32 csNIB
   \   00000044   0x0002             DC16 2
   \   00000046   0x00 0x00          DC8 0, 0
   \   00000048   0x........         DC32 csNIB + 9H
   \   0000004C   0x0001             DC16 1
   \   0000004E   0x00 0x00          DC8 0, 0
   \   00000050   0x........         DC32 csNIB + 71H
   \   00000054   0x0001             DC16 1
   \   00000056   0x00 0x00          DC8 0, 0
   \   00000058   0x........         DC32 csNIB + 92H
   \   0000005C   0x0001             DC16 1
   \   0000005E   0x00 0x00          DC8 0, 0
   \   00000060   0x........         DC32 csNIB + 77H
   \   00000064   0x0001             DC16 1
   \   00000066   0x00 0x00          DC8 0, 0
   \   00000068   0x........         DC32 csSIB + 8H
   \   0000006C   0x0001             DC16 1
   \   0000006E   0x00 0x00          DC8 0, 0
   \   00000070   0x........         DC32 csSIB + 9H
   \   00000074   0x0001             DC16 1
   \   00000076   0x00 0x00          DC8 0, 0
   \   00000078   0x........         DC32 csSIB + 0AH
   \   0000007C   0x0001             DC16 1
   \   0000007E   0x00 0x00          DC8 0, 0
   \   00000080   0x........         DC32 csSIB + 0BH
   \   00000084   0x0001             DC16 1
   \   00000086   0x00 0x00          DC8 0, 0
   \   00000088   0x........         DC32 csSIB + 6H
   \   0000008C   0x0002             DC16 2
   \   0000008E   0x00 0x00          DC8 0, 0
   \   00000090   0x........         DC32 csSIB + 0CH
   \   00000094   0x0001             DC16 1
   \   00000096   0x00 0x00          DC8 0, 0
   \   00000098   0x........         DC32 csSIB + 0DH
   \   0000009C   0x0001             DC16 1
   \   0000009E   0x00 0x00          DC8 0, 0
   \   000000A0   0x........         DC32 csNIB + 73H
   \   000000A4   0x0001             DC16 1
   \   000000A6   0x00 0x00          DC8 0, 0
   \   000000A8   0x........         DC32 csNIB + 72H
   \   000000AC   0x0001             DC16 1
   \   000000AE   0x00 0x00          DC8 0, 0
   \   000000B0   0x........         DC32 csZIB + 13H
   \   000000B4   0x0001             DC16 1
   \   000000B6   0x00 0x00          DC8 0, 0
   \   000000B8   0x........         DC32 csZIB + 14H
   \   000000BC   0x0001             DC16 1
   \   000000BE   0x00 0x00          DC8 0, 0
   \   000000C0   0x........         DC32 csSIB + 48H
   \   000000C4   0x0008             DC16 8
   \   000000C6   0x00 0x00          DC8 0, 0
   \   000000C8   0x........         DC32 csZIB
   \   000000CC   0x0004             DC16 4
   \   000000CE   0x00 0x00          DC8 0, 0
   \   000000D0   0x........         DC32 csSIB + 24H
   \   000000D4   0x0004             DC16 4
   \   000000D6   0x00 0x00          DC8 0, 0
   \   000000D8   0x........         DC32 csSIB + 18H
   \   000000DC   0x0004             DC16 4
   \   000000DE   0x00 0x00          DC8 0, 0
   \   000000E0   0x........         DC32 csSIB + 1CH
   \   000000E4   0x0004             DC16 4
   \   000000E6   0x00 0x00          DC8 0, 0
   \   000000E8   0x........         DC32 csSIB + 20H
   \   000000EC   0x0001             DC16 1
   \   000000EE   0x00 0x00          DC8 0, 0
   \   000000F0   0x........         DC32 csSIB + 21H
   \   000000F4   0x0001             DC16 1
   \   000000F6   0x00 0x00          DC8 0, 0
   \   000000F8   0x........         DC32 csSIB + 22H
   \   000000FC   0x0001             DC16 1
   \   000000FE   0x00 0x00          DC8 0, 0
   \   00000100   0x........         DC32 csSIB + 30H
   \   00000104   0x0011             DC16 17
   \   00000106   0x00 0x00          DC8 0, 0
   \   00000108   0x........         DC32 csNIB + 6EH
   \   0000010C   0x0001             DC16 1
   \   0000010E   0x00 0x00          DC8 0, 0
   \   00000110   0x........         DC32 csSIB + 28H
   \   00000114   0x0001             DC16 1
   \   00000116   0x00 0x00          DC8 0, 0
   \   00000118   0x........         DC32 csSIB + 2CH
   \   0000011C   0x0004             DC16 4
   \   0000011E   0x00 0x00          DC8 0, 0
   \   00000120   0x........         DC32 csAIB + 1H
   \   00000124   0x0001             DC16 1
   \   00000126   0x00 0x00          DC8 0, 0
   \   00000128   0x........         DC32 csZIB + 16H
   \   0000012C   0x0002             DC16 2
   \   0000012E   0x00 0x00          DC8 0, 0
   \   00000130   0x........         DC32 csSIB + 50H
   \   00000134   0x0001             DC16 1
   \   00000136   0x00 0x00          DC8 0, 0
   \   00000138   0x........         DC32 csSIB + 5H
   \   0000013C   0x0001             DC16 1
   \   0000013E   0x00 0x00          DC8 0, 0
   \   00000140   0x00000000         DC32 0H
   \   00000144   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000148   0x00000000         DC32 0H
   \   0000014C   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000150   0x........         DC32 csAIB + 24H
   \   00000154   0x0001             DC16 1
   \   00000156   0x00 0x00          DC8 0, 0
   \   00000158   0x00000000         DC32 0H
   \   0000015C   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000160   0x00000000         DC32 0H
   \   00000164   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000168   0x00000000         DC32 0H
   \   0000016C   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000170   0x00000000         DC32 0H
   \   00000174   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000178   0x........         DC32 defaultKey
   \   0000017C   0x0010             DC16 16
   \   0000017E   0x00 0x00          DC8 0, 0
   \   00000180   0x........         DC32 csSIB + 51H
   \   00000184   0x0001             DC16 1
   \   00000186   0x00 0x00          DC8 0, 0
   \   00000188   0x........         DC32 csNIB + 8BH
   \   0000018C   0x0001             DC16 1
   \   0000018E   0x00 0x00          DC8 0, 0
   \   00000190   0x........         DC32 csNIB + 8CH
   \   00000194   0x0001             DC16 1
   \   00000196   0x00 0x00          DC8 0, 0
   \   00000198   0x........         DC32 csSIB + 52H
   \   0000019C   0x0001             DC16 1
   \   0000019E   0x00 0x00          DC8 0, 0
   \   000001A0   0x........         DC32 csAIB + 8H
   \   000001A4   0x0008             DC16 8
   \   000001A6   0x00 0x00          DC8 0, 0
   \   000001A8   0x........         DC32 csAIB + 10H
   \   000001AC   0x0002             DC16 2
   \   000001AE   0x00 0x00          DC8 0, 0
   \   000001B0   0x........         DC32 csSIB + 0EH
   \   000001B4   0x0005             DC16 5
   \   000001B6   0x00 0x00          DC8 0, 0
   \   000001B8   0x........         DC32 csSIB + 13H
   \   000001BC   0x0001             DC16 1
   \   000001BE   0x00 0x00          DC8 0, 0
   \   000001C0   0x........         DC32 csSIB + 14H
   \   000001C4   0x0001             DC16 1
   \   000001C6   0x00 0x00          DC8 0, 0
   \   000001C8   0x00000000         DC32 0H
   \   000001CC   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   000001D0   0x00000000         DC32 0H
   \   000001D4   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   000001D8   0x00000000         DC32 0H
   \   000001DC   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   000001E0   0x00000000         DC32 0H
   \   000001E4   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   000001E8   0x00000000         DC32 0H
   \   000001EC   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   000001F0   0x00000000         DC32 0H
   \   000001F4   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   000001F8   0x00000000         DC32 0H
   \   000001FC   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000200   0x........         DC32 csPIB + 38H
   \   00000204   0x0001             DC16 1
   \   00000206   0x00 0x00          DC8 0, 0
    297          {
    298            #include "csVarTable.h"
    299          };
    300          

   \                                 In section .rodata, align 4, keep-with-next
    301          CS_MemoryItem_t PROGMEM_DECLARE(csConstItems[]) =
   \                     csConstItems:
   \   00000000   0x........         DC32 csReadOnlyItems
   \   00000004   0x0002             DC16 2
   \   00000006   0x00 0x00          DC8 0, 0
   \   00000008   0x........         DC32 csReadOnlyItems + 4H
   \   0000000C   0x0001             DC16 1
   \   0000000E   0x00 0x00          DC8 0, 0
   \   00000010   0x........         DC32 csReadOnlyItems + 8H
   \   00000014   0x0001             DC16 1
   \   00000016   0x00 0x00          DC8 0, 0
   \   00000018   0x........         DC32 csReadOnlyItems + 6H
   \   0000001C   0x0002             DC16 2
   \   0000001E   0x00 0x00          DC8 0, 0
   \   00000020   0x........         DC32 csReadOnlyItems + 0CH
   \   00000024   0x0001             DC16 1
   \   00000026   0x00 0x00          DC8 0, 0
   \   00000028   0x........         DC32 csReadOnlyItems + 0DH
   \   0000002C   0x0001             DC16 1
   \   0000002E   0x00 0x00          DC8 0, 0
   \   00000030   0x........         DC32 csReadOnlyItems + 0EH
   \   00000034   0x0001             DC16 1
   \   00000036   0x00 0x00          DC8 0, 0
   \   00000038   0x........         DC32 csReadOnlyItems + 0FH
   \   0000003C   0x0001             DC16 1
   \   0000003E   0x00 0x00          DC8 0, 0
   \   00000040   0x........         DC32 csReadOnlyItems + 10H
   \   00000044   0x0001             DC16 1
   \   00000046   0x00 0x00          DC8 0, 0
   \   00000048   0x........         DC32 csReadOnlyItems + 11H
   \   0000004C   0x0001             DC16 1
   \   0000004E   0x00 0x00          DC8 0, 0
   \   00000050   0x........         DC32 csReadOnlyItems + 12H
   \   00000054   0x0002             DC16 2
   \   00000056   0x00 0x00          DC8 0, 0
   \   00000058   0x........         DC32 csReadOnlyItems + 0AH
   \   0000005C   0x0002             DC16 2
   \   0000005E   0x00 0x00          DC8 0, 0
   \   00000060   0x........         DC32 csReadOnlyItems + 14H
   \   00000064   0x0001             DC16 1
   \   00000066   0x00 0x00          DC8 0, 0
   \   00000068   0x........         DC32 csReadOnlyItems + 15H
   \   0000006C   0x0001             DC16 1
   \   0000006E   0x00 0x00          DC8 0, 0
   \   00000070   0x........         DC32 csReadOnlyItems + 34H
   \   00000074   0x0002             DC16 2
   \   00000076   0x00 0x00          DC8 0, 0
   \   00000078   0x........         DC32 csReadOnlyItems + 20H
   \   0000007C   0x0001             DC16 1
   \   0000007E   0x00 0x00          DC8 0, 0
   \   00000080   0x........         DC32 csReadOnlyItems + 21H
   \   00000084   0x0001             DC16 1
   \   00000086   0x00 0x00          DC8 0, 0
   \   00000088   0x........         DC32 csReadOnlyItems + 22H
   \   0000008C   0x0001             DC16 1
   \   0000008E   0x00 0x00          DC8 0, 0
   \   00000090   0x........         DC32 csReadOnlyItems + 30H
   \   00000094   0x0004             DC16 4
   \   00000096   0x00 0x00          DC8 0, 0
   \   00000098   0x........         DC32 csReadOnlyItems + 16H
   \   0000009C   0x0001             DC16 1
   \   0000009E   0x00 0x00          DC8 0, 0
   \   000000A0   0x........         DC32 csReadOnlyItems + 18H
   \   000000A4   0x0004             DC16 4
   \   000000A6   0x00 0x00          DC8 0, 0
   \   000000A8   0x........         DC32 csReadOnlyItems + 1CH
   \   000000AC   0x0001             DC16 1
   \   000000AE   0x00 0x00          DC8 0, 0
   \   000000B0   0x........         DC32 csReadOnlyItems + 1DH
   \   000000B4   0x0001             DC16 1
   \   000000B6   0x00 0x00          DC8 0, 0
   \   000000B8   0x........         DC32 csReadOnlyItems + 28H
   \   000000BC   0x0001             DC16 1
   \   000000BE   0x00 0x00          DC8 0, 0
   \   000000C0   0x........         DC32 csReadOnlyItems + 29H
   \   000000C4   0x0001             DC16 1
   \   000000C6   0x00 0x00          DC8 0, 0
   \   000000C8   0x........         DC32 csReadOnlyItems + 2AH
   \   000000CC   0x0002             DC16 2
   \   000000CE   0x00 0x00          DC8 0, 0
   \   000000D0   0x........         DC32 csReadOnlyItems + 2CH
   \   000000D4   0x0001             DC16 1
   \   000000D6   0x00 0x00          DC8 0, 0
   \   000000D8   0x........         DC32 csReadOnlyItems + 2DH
   \   000000DC   0x0001             DC16 1
   \   000000DE   0x00 0x00          DC8 0, 0
   \   000000E0   0x00000000         DC32 0H
   \   000000E4   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   000000E8   0x00000000         DC32 0H
   \   000000EC   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   000000F0   0x00000000         DC32 0H
   \   000000F4   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   000000F8   0x00000000         DC32 0H
   \   000000FC   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000100   0x........         DC32 csReadOnlyItems + 36H
   \   00000104   0x0001             DC16 1
   \   00000106   0x00 0x00          DC8 0, 0
   \   00000108   0x........         DC32 csReadOnlyItems + 38H
   \   0000010C   0x0004             DC16 4
   \   0000010E   0x00 0x00          DC8 0, 0
   \   00000110   0x........         DC32 csReadOnlyItems + 3CH
   \   00000114   0x0001             DC16 1
   \   00000116   0x00 0x00          DC8 0, 0
   \   00000118   0x00000000         DC32 0H
   \   0000011C   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000120   0x........         DC32 csReadOnlyItems + 3EH
   \   00000124   0x0002             DC16 2
   \   00000126   0x00 0x00          DC8 0, 0
   \   00000128   0x........         DC32 csReadOnlyItems + 40H
   \   0000012C   0x0001             DC16 1
   \   0000012E   0x00 0x00          DC8 0, 0
   \   00000130   0x........         DC32 csReadOnlyItems + 1EH
   \   00000134   0x0001             DC16 1
   \   00000136   0x00 0x00          DC8 0, 0
   \   00000138   0x........         DC32 csReadOnlyItems + 1FH
   \   0000013C   0x0001             DC16 1
   \   0000013E   0x00 0x00          DC8 0, 0
   \   00000140   0x........         DC32 csReadOnlyItems + 41H
   \   00000144   0x0001             DC16 1
   \   00000146   0x00 0x00          DC8 0, 0
   \   00000148   0x........         DC32 csReadOnlyItems + 42H
   \   0000014C   0x0001             DC16 1
   \   0000014E   0x00 0x00          DC8 0, 0
   \   00000150   0x........         DC32 csReadOnlyItems + 43H
   \   00000154   0x0001             DC16 1
   \   00000156   0x00 0x00          DC8 0, 0
   \   00000158   0x........         DC32 csReadOnlyItems + 44H
   \   0000015C   0x0001             DC16 1
   \   0000015E   0x00 0x00          DC8 0, 0
   \   00000160   0x00000000         DC32 0H
   \   00000164   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000168   0x........         DC32 csReadOnlyItems + 24H
   \   0000016C   0x0004             DC16 4
   \   0000016E   0x00 0x00          DC8 0, 0
   \   00000170   0x........         DC32 csReadOnlyItems + 2H
   \   00000174   0x0002             DC16 2
   \   00000176   0x00 0x00          DC8 0, 0
    302          {
    303            #include "csConstTable.h"
    304          };
    305          

   \                                 In section .rodata, align 4, keep-with-next
    306          CS_MemoryItem_t PROGMEM_DECLARE(csMemItems[]) =
   \                     csMemItems:
   \   00000000   0x........         DC32 stackBuffers
   \   00000004   0x0000             DC16 0
   \   00000006   0x00 0x00          DC8 0, 0
   \   00000008   0x........         DC32 stackBuffers + 1B0H
   \   0000000C   0x0000             DC16 0
   \   0000000E   0x00 0x00          DC8 0, 0
   \   00000010   0x........         DC32 stackBuffers + 0F8H
   \   00000014   0x0000             DC16 0
   \   00000016   0x00 0x00          DC8 0, 0
   \   00000018   0x........         DC32 stackBuffers + 250H
   \   0000001C   0x0000             DC16 0
   \   0000001E   0x00 0x00          DC8 0, 0
   \   00000020   0x........         DC32 stackBuffers + 198H
   \   00000024   0x0000             DC16 0
   \   00000026   0x00 0x00          DC8 0, 0
   \   00000028   0x00000000         DC32 0H
   \   0000002C   0x0000             DC16 0
   \   0000002E   0x00 0x00          DC8 0, 0
   \   00000030   0x........         DC32 stackBuffers + 278H
   \   00000034   0x0000             DC16 0
   \   00000036   0x00 0x00          DC8 0, 0
   \   00000038   0x........         DC32 stackBuffers + 1398H
   \   0000003C   0x0000             DC16 0
   \   0000003E   0x00 0x00          DC8 0, 0
   \   00000040   0x........         DC32 stackBuffers + 14D8H
   \   00000044   0x0000             DC16 0
   \   00000046   0x00 0x00          DC8 0, 0
   \   00000048   0x........         DC32 stackBuffers + 0D38H
   \   0000004C   0x0000             DC16 0
   \   0000004E   0x00 0x00          DC8 0, 0
   \   00000050   0x........         DC32 stackBuffers + 0D90H
   \   00000054   0x0000             DC16 0
   \   00000056   0x00 0x00          DC8 0, 0
   \   00000058   0x........         DC32 stackBuffers + 0D60H
   \   0000005C   0x0000             DC16 0
   \   0000005E   0x00 0x00          DC8 0, 0
   \   00000060   0x........         DC32 stackBuffers + 0DE0H
   \   00000064   0x0000             DC16 0
   \   00000066   0x00 0x00          DC8 0, 0
   \   00000068   0x........         DC32 stackBuffers + 0EB0H
   \   0000006C   0x0000             DC16 0
   \   0000006E   0x00 0x00          DC8 0, 0
   \   00000070   0x........         DC32 stackBuffers + 12B0H
   \   00000074   0x0000             DC16 0
   \   00000076   0x00 0x00          DC8 0, 0
   \   00000078   0x00000000         DC32 0H
   \   0000007C   0x0000             DC16 0
   \   0000007E   0x00 0x00          DC8 0, 0
   \   00000080   0x00000000         DC32 0H
   \   00000084   0x0000             DC16 0
   \   00000086   0x00 0x00          DC8 0, 0
   \   00000088   0x........         DC32 stackBuffers + 0E20H
   \   0000008C   0x0000             DC16 0
   \   0000008E   0x00 0x00          DC8 0, 0
   \   00000090   0x........         DC32 stackBuffers + 14F8H
   \   00000094   0x0000             DC16 0
   \   00000096   0x00 0x00          DC8 0, 0
   \   00000098   0x........         DC32 stackBuffers + 19F8H
   \   0000009C   0x0000             DC16 0
   \   0000009E   0x00 0x00          DC8 0, 0
   \   000000A0   0x........         DC32 stackBuffers + 1C80H
   \   000000A4   0x0000             DC16 0
   \   000000A6   0x00 0x00          DC8 0, 0
   \   000000A8   0x00000000         DC32 0H
   \   000000AC   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   000000B0   0x00000000         DC32 0H
   \   000000B4   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   000000B8   0x00000000         DC32 0H
   \   000000BC   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   000000C0   0x00000000         DC32 0H
   \   000000C4   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   000000C8   0x........         DC32 csNIB + 8AH
   \   000000CC   0x0000             DC16 0
   \   000000CE   0x00 0x00          DC8 0, 0
   \   000000D0   0x........         DC32 stackBuffers + 0E40H
   \   000000D4   0x0000             DC16 0
   \   000000D6   0x00 0x00          DC8 0, 0
   \   000000D8   0x........         DC32 stackBuffers + 0E60H
   \   000000DC   0x0000             DC16 0
   \   000000DE   0x00 0x00          DC8 0, 0
   \   000000E0   0x........         DC32 stackBuffers + 1728H
   \   000000E4   0x0000             DC16 0
   \   000000E6   0x00 0x00          DC8 0, 0
   \   000000E8   0x00000000         DC32 0H
   \   000000EC   0x0000             DC16 0
   \   000000EE   0x00 0x00          DC8 0, 0
   \   000000F0   0x........         DC32 stackBuffers + 1808H
   \   000000F4   0x0000             DC16 0
   \   000000F6   0x00 0x00          DC8 0, 0
   \   000000F8   0x........         DC32 stackBuffers + 18F8H
   \   000000FC   0x0000             DC16 0
   \   000000FE   0x00 0x00          DC8 0, 0
   \   00000100   0x........         DC32 stackBuffers + 1920H
   \   00000104   0x0000             DC16 0
   \   00000106   0x00 0x00          DC8 0, 0
   \   00000108   0x........         DC32 stackBuffers + 1F00H
   \   0000010C   0x0000             DC16 0
   \   0000010E   0x00 0x00          DC8 0, 0
   \   00000110   0x........         DC32 stackBuffers + 1F40H
   \   00000114   0x0000             DC16 0
   \   00000116   0x00 0x00          DC8 0, 0
   \   00000118   0x........         DC32 stackBuffers + 85H
   \   0000011C   0x0000             DC16 0
   \   0000011E   0x00 0x00          DC8 0, 0
    307          {
    308            #include "csMemTable.h"
    309          };
    310          
    311          #undef RAM_PARAMETER
    312          #undef DUMMY_RAM_PARAMETER
    313          #undef FLASH_PARAMETER
    314          #undef DUMMY_FLASH_PARAMETER
    315          #undef MEMORY_REGION
    316          #undef DUMMY_MEMORY_REGION
    317          
    318          /******************************************************************************
    319                              Implementation section
    320          ******************************************************************************/
    321          
    322          /******************************************************************************
    323          \brief Set Configuration Server memory to its default state
    324          ******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    325          void csSetToDefault(void)
    326          {
   \                     csSetToDefault: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    327            /* Restore information bases default values from FLASH */
    328          #if defined(_USE_KF_MAC_)
    329            tal_pib_IeeeAddress = CCPU_TO_LE64(CS_UID);
    330            maxFrameTransmissionTime = CS_MAX_FRAME_TRANSMISSION_TIME;
    331          #else
    332            memset(&csPIB, 0x00, sizeof(PIB_t));
   \   00000002   0x....             LDR      R4,??DataTable8
   \   00000004   0x2148             MOVS     R1,#+72
   \   00000006   0x0020             MOVS     R0,R4
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
    333            csPIB.macAttr.extAddr = CCPU_TO_LE64(CS_UID);
   \   0000000C   0x0022             MOVS     R2,R4
   \   0000000E   0x3228             ADDS     R2,R2,#+40
   \   00000010   0x2080             MOVS     R0,#+128
   \   00000012   0x0040             LSLS     R0,R0,#+1        ;; #+256
   \   00000014   0x2100             MOVS     R1,#+0
   \   00000016   0xC203             STM      R2!,{R0,R1}
   \   00000018   0x3A08             SUBS     R2,R2,#+8
    334            csPIB.macAttr.maxFrameTransmissionTime = CS_MAX_FRAME_TRANSMISSION_TIME;
   \   0000001A   0x2005             MOVS     R0,#+5
   \   0000001C   0x7290             STRB     R0,[R2, #+10]
    335          #endif // defined(_USE_KF_MAC_)
    336          
    337          #ifndef _MAC2_
    338            memcpy_P(&csNIB, &defaultNIB, sizeof(NIB_t));
   \   0000001E   0x2298             MOVS     R2,#+152
   \   00000020   0x....             ADR.N    R1,defaultNIB
   \   00000022   0x0020             MOVS     R0,R4
   \   00000024   0x3060             ADDS     R0,R0,#+96
   \   00000026   0x.... 0x....      BL       __aeabi_memcpy4
    339            memcpy_P(&csZIB, &defaultZIB, sizeof(ZIB_t));
   \   0000002A   0x2218             MOVS     R2,#+24
   \   0000002C   0x....             ADR.N    R1,defaultZIB
   \   0000002E   0x0020             MOVS     R0,R4
   \   00000030   0x3048             ADDS     R0,R0,#+72
   \   00000032   0x.... 0x....      BL       __aeabi_memcpy4
    340            memcpy_P(&csAIB, &defaultAIB, sizeof(AIB_t));
   \   00000036   0x2228             MOVS     R2,#+40
   \   00000038   0x....             ADR.N    R1,defaultAIB
   \   0000003A   0x0020             MOVS     R0,R4
   \   0000003C   0x30F8             ADDS     R0,R0,#+248
   \   0000003E   0x.... 0x....      BL       __aeabi_memcpy4
    341          #endif
    342            memcpy_P(&csSIB, &defaultSIB, sizeof(SIB_t));
   \   00000042   0x2258             MOVS     R2,#+88
   \   00000044   0x....             ADR.N    R1,defaultSIB
   \   00000046   0x2090             MOVS     R0,#+144
   \   00000048   0x0040             LSLS     R0,R0,#+1        ;; #+288
   \   0000004A   0x1820             ADDS     R0,R4,R0
   \   0000004C   0x.... 0x....      BL       __aeabi_memcpy4
    343            memset(&stackBuffers, 0x00, sizeof(CS_StackBuffers_t));
   \   00000050   0x....             LDR      R1,??DataTable8_1  ;; 0x24f8
   \   00000052   0x20BC             MOVS     R0,#+188
   \   00000054   0x0040             LSLS     R0,R0,#+1        ;; #+376
   \   00000056   0x1820             ADDS     R0,R4,R0
   \   00000058   0x.... 0x....      BL       __aeabi_memclr4
    344          }
   \   0000005C   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   0x........         DC32     csPIB

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_1:
   \   00000000   0x000024F8         DC32     0x24f8
    345          
    346          /* eof csMem.c */
    347          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   csSetToDefault
         8   -> __aeabi_memclr4
         8   -> __aeabi_memcpy4


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable8
       4  ??DataTable8_1
     376  csConstItems
     288  csMemItems
    9840  csPIB
          csZIB
          csNIB
          csAIB
          csSIB
          stackBuffers
      72  csReadOnlyItems
      94  csSetToDefault
     520  csVarItems
      40  defaultAIB
      16  defaultKey
     152  defaultNIB
      88  defaultSIB
      24  defaultZIB

 
 9 840 bytes in section .bss
    16 bytes in section .data
 1 256 bytes in section .rodata
   406 bytes in section .text
 
   406 bytes of CODE  memory
 1 256 bytes of CONST memory
 9 856 bytes of DATA  memory

Errors: none
Warnings: none
