###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.4.8167/W32 for ARM        31/Mar/2015  18:41:05
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\thermostat\src\thScenes.c
#    Command line =  
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\thermostat\src\thScenes.c
#        -D BOARD_SAMR21 -D BOARD_QTOUCH_XPRO -D AT86RF233 -D ATSAMR21G18A -D
#        HAL_8MHz -D STACK_TYPE_ALL -D STDLINK_SECURITY_MODE -lC
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects\All_StdlinkSec_SamR21_Atsamr21g18a_Rf233_8Mhz/List\
#        --diag_suppress Pa050,Pe188 -o
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects\All_StdlinkSec_SamR21_Atsamr21g18a_Rf233_8Mhz/Obj\
#        --debug --endian=little --cpu=Cortex-M0+ -e --fpu=None --dlib_config
#        "C:\Program Files\IAR Systems\Embedded Workbench
#        7.30\arm\INC\c\DLib_Config_Full.h" --preinclude
#        MakerulesBc_All_StdlinkSec_Atsamr21g18a_Rf233_Iar.h -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/..\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../dimmableLight/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../dimmerSwitch/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../multiSensor/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../thermostat/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../ias_ace/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../combinedInterface/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../common/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../common/clusters/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/BSP/SAMR21/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/SystemEnvironment/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/lib\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/HAL/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/BSP\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/BSP/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/BSP/QTouch_XPRO/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/NWK/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/NWK/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZDO/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZDO/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/APS/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/APS/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/SystemEnvironment/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ConfigServer/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ConfigServer/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/PersistDataServer/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/PersistDataServer/std/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/PersistDataServer/wl/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Types/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Util/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Timer/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Task/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_ErrH/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Log/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Memory/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/Infrastructure/N_Init/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/S_Nv/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/S_XNv/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/D_Nv/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/D_XNv/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/D_XNv/src\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZLLPlatform/ZLL/S_XNv/src\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/Security/TrustCentre/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/Security/ServiceProvider/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/HAL/drivers/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/HAL/drivers/VCP/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/HAL/cortexm0+/atsamr21/common/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZCL/include/private\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/ZCL/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_ENV/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_HWI/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_HWD_PHY/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_HWD_PHY/RF231_RF212/PHY/include\
#        -I
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects/../../../BitCloud/Components/MAC_PHY/MAC_HWD_PHY/RF231_RF212/MAC_HWD/include\
#        -Ohz --use_c++_inline
#    List file    =  
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects\All_StdlinkSec_SamR21_Atsamr21g18a_Rf233_8Mhz/List\thScenes.lst
#    Object file  =  
#        D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\iar_projects\All_StdlinkSec_SamR21_Atsamr21g18a_Rf233_8Mhz/Obj\thScenes.o
#
###############################################################################

D:\support_project\Qtouch_samr21_validation\BitCloud_SAMR21_3_2_0\BitCloud_SAMR21_3_2_0\Applications\HADevice\thermostat\src\thScenes.c
      1          /**************************************************************************//**
      2            \file thScenes.c
      3          
      4            \brief
      5              Thermostat Scenes implementation.
      6          
      7            \author
      8              Atmel Corporation: http://www.atmel.com \n
      9              Support email: avr@atmel.com
     10          
     11            Copyright (c) 2008-2015, Atmel Corporation. All rights reserved.
     12            Licensed under Atmel's Limited License Agreement (BitCloudTM).
     13          
     14            \internal
     15              History:
     16              21.11.14 Viswanadham Kotla - Created.
     17          ******************************************************************************/
     18          #ifdef APP_DEVICE_TYPE_THERMOSTAT
     19          
     20          /******************************************************************************
     21                              Includes section
     22          ******************************************************************************/
     23          #include <thScenes.h>
     24          
     25          /******************************************************************************
     26                              Global variables section
     27          ******************************************************************************/

   \                                 In section .bss, align 4
     28          Scene_t scenePool[MAX_SCENES_AMOUNT];
   \                     scenePool:
   \   00000000                      DS8 192
     29          
     30          /******************************************************************************
     31                              Implementation section
     32          ******************************************************************************/
     33          /**************************************************************************//**
     34          \brief Initializes scene
     35          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     36          void initScenes(void)
     37          {
   \                     initScenes: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     38            memset(scenePool, 0, sizeof(Scene_t) * MAX_SCENES_AMOUNT);
   \   00000002   0x21C0             MOVS     R1,#+192
   \   00000004   0x....             LDR      R0,??DataTable4
   \   00000006   0x.... 0x....      BL       __aeabi_memclr4
     39          }
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return
     40          
     41          /**************************************************************************//**
     42          \brief Allocates scene
     43          
     44          \returns the pointer to allocated scene if allocation is successful,
     45            NULL otherwise
     46          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     47          Scene_t *allocateScene(void)
     48          {
     49            uint8_t i = 0;
     50          
     51            for (i = 0; i < MAX_SCENES_AMOUNT; i++)
   \                     allocateScene: (+1)
   \   00000000   0x2100             MOVS     R1,#+0
     52            {
     53              if (!scenePool[i].busy)
   \                     ??allocateScene_0: (+1)
   \   00000002   0x....             LDR      R0,??DataTable4
   \   00000004   0x220C             MOVS     R2,#+12
   \   00000006   0x434A             MULS     R2,R1,R2
   \   00000008   0x1880             ADDS     R0,R0,R2
   \   0000000A   0x7802             LDRB     R2,[R0, #+0]
   \   0000000C   0x2A00             CMP      R2,#+0
   \   0000000E   0xD102             BNE      ??allocateScene_1
     54              {
     55                scenePool[i].busy = true;
   \   00000010   0x2101             MOVS     R1,#+1
   \   00000012   0x7001             STRB     R1,[R0, #+0]
     56                return &scenePool[i];
   \   00000014   0x4770             BX       LR
     57              }
     58            }
   \                     ??allocateScene_1: (+1)
   \   00000016   0x1C49             ADDS     R1,R1,#+1
   \   00000018   0xB2C9             UXTB     R1,R1
   \   0000001A   0x2910             CMP      R1,#+16
   \   0000001C   0xD3F1             BCC      ??allocateScene_0
     59          
     60            return NULL;
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0x4770             BX       LR               ;; return
     61          }
     62          
     63          /**************************************************************************//**
     64          \brief Frees scene
     65          
     66          \param[in] scene - the pointer to the scene to be freed
     67          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     68          void freeScene(Scene_t *scene)
     69          {
   \                     freeScene: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     70            memset(scene, 0, sizeof(Scene_t));
   \   00000002   0x210C             MOVS     R1,#+12
   \   00000004   0x.... 0x....      BL       __aeabi_memclr
     71          }
   \   00000008   0xBD01             POP      {R0,PC}          ;; return
     72          
     73          /**************************************************************************//**
     74          \brief Gets appropriate scene by group id and scene id
     75          
     76          \param[in] group - group id
     77          \param[in] scene - scene id
     78          
     79          \returns the pointer to scene if it is found, NULL otherwise
     80          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     81          Scene_t *findSceneBySceneAndGroup(uint16_t group, uint8_t scene)
     82          {
   \                     findSceneBySceneAndGroup: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0002             MOVS     R2,R0
     83            for (uint8_t i = 0; i < MAX_SCENES_AMOUNT; i++)
   \   00000004   0x2300             MOVS     R3,#+0
     84            {
     85              if ((scenePool[i].groupId == group) && (scenePool[i].sceneId == scene))
   \                     ??findSceneBySceneAndGroup_0: (+1)
   \   00000006   0x....             LDR      R0,??DataTable4
   \   00000008   0x240C             MOVS     R4,#+12
   \   0000000A   0x435C             MULS     R4,R3,R4
   \   0000000C   0x1900             ADDS     R0,R0,R4
   \   0000000E   0x8844             LDRH     R4,[R0, #+2]
   \   00000010   0x4294             CMP      R4,R2
   \   00000012   0xD102             BNE      ??findSceneBySceneAndGroup_1
   \   00000014   0x7844             LDRB     R4,[R0, #+1]
   \   00000016   0x428C             CMP      R4,R1
   \   00000018   0xD004             BEQ      ??findSceneBySceneAndGroup_2
     86                return &scenePool[i];
     87            }
   \                     ??findSceneBySceneAndGroup_1: (+1)
   \   0000001A   0x1C5B             ADDS     R3,R3,#+1
   \   0000001C   0xB2DB             UXTB     R3,R3
   \   0000001E   0x2B10             CMP      R3,#+16
   \   00000020   0xD3F1             BCC      ??findSceneBySceneAndGroup_0
     88          
     89            return NULL;
   \   00000022   0x2000             MOVS     R0,#+0
   \                     ??findSceneBySceneAndGroup_2: (+1)
   \   00000024   0xBD10             POP      {R4,PC}          ;; return
     90          }
     91          
     92          /**************************************************************************//**
     93          \brief Removes all scenes associated with the given group
     94          
     95          \param[in] group - group id
     96          
     97          \return amount of removed scenes
     98          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     99          uint8_t removeScenesByGroup(uint16_t group)
    100          {
   \                     removeScenesByGroup: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
    101            uint8_t amount = 0;
   \   00000004   0x2600             MOVS     R6,#+0
   \   00000006   0x2500             MOVS     R5,#+0
    102          
    103            for (uint8_t i = 0; i < MAX_SCENES_AMOUNT; i++)
    104            {
    105              if (scenePool[i].groupId == group)
   \                     ??removeScenesByGroup_0: (+1)
   \   00000008   0x....             LDR      R0,??DataTable4
   \   0000000A   0x210C             MOVS     R1,#+12
   \   0000000C   0x4371             MULS     R1,R6,R1
   \   0000000E   0x1840             ADDS     R0,R0,R1
   \   00000010   0x8841             LDRH     R1,[R0, #+2]
   \   00000012   0x42A1             CMP      R1,R4
   \   00000014   0xD102             BNE      ??removeScenesByGroup_1
    106              {
    107                freeScene(&scenePool[i]);
   \   00000016   0x.... 0x....      BL       freeScene
    108                amount++;
   \   0000001A   0x1C6D             ADDS     R5,R5,#+1
    109              }
    110            }
   \                     ??removeScenesByGroup_1: (+1)
   \   0000001C   0x1C76             ADDS     R6,R6,#+1
   \   0000001E   0x2E10             CMP      R6,#+16
   \   00000020   0xD3F2             BCC      ??removeScenesByGroup_0
    111          
    112            return amount;
   \   00000022   0xB2E8             UXTB     R0,R5
   \   00000024   0xBD70             POP      {R4-R6,PC}       ;; return
    113          }
    114          
    115          /**************************************************************************//**
    116          \brief Gets next scene by group id
    117          
    118          \param[in] scene - the pointer to current scene or NULL to get the first busy scene
    119          \param[in] group - group id
    120          
    121          \returns the pointer to scene if it is found, NULL otherwise
    122          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    123          Scene_t *getNextSceneByGroup(Scene_t *scene, uint16_t group)
    124          {
   \                     getNextSceneByGroup: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0x0002             MOVS     R2,R0
    125            if (!scene)
   \   00000004   0x....             LDR      R3,??DataTable4
   \   00000006   0x2400             MOVS     R4,#+0
   \   00000008   0x2A00             CMP      R2,#+0
   \   0000000A   0xD10D             BNE      ??getNextSceneByGroup_0
    126            {
    127              for (uint8_t i = 0; i < MAX_SCENES_AMOUNT; i++)
    128              {
    129                if (scenePool[i].busy && (scenePool[i].groupId == group))
   \                     ??getNextSceneByGroup_1: (+1)
   \   0000000C   0x200C             MOVS     R0,#+12
   \   0000000E   0x4360             MULS     R0,R4,R0
   \   00000010   0x1818             ADDS     R0,R3,R0
   \   00000012   0x7802             LDRB     R2,[R0, #+0]
   \   00000014   0x2A00             CMP      R2,#+0
   \   00000016   0xD002             BEQ      ??getNextSceneByGroup_2
   \   00000018   0x8842             LDRH     R2,[R0, #+2]
   \   0000001A   0x428A             CMP      R2,R1
   \   0000001C   0xD01A             BEQ      ??getNextSceneByGroup_3
    130                  return &scenePool[i];
    131              }
   \                     ??getNextSceneByGroup_2: (+1)
   \   0000001E   0x1C64             ADDS     R4,R4,#+1
   \   00000020   0xB2E4             UXTB     R4,R4
   \   00000022   0x2C10             CMP      R4,#+16
   \   00000024   0xD215             BCS      ??getNextSceneByGroup_4
   \   00000026   0xE7F1             B        ??getNextSceneByGroup_1
    132              return NULL;
    133            }
    134          
    135            if ((scene < scenePool) || (scene > &scenePool[MAX_SCENES_AMOUNT - 1]))
   \                     ??getNextSceneByGroup_0: (+1)
   \   00000028   0x429A             CMP      R2,R3
   \   0000002A   0xD312             BCC      ??getNextSceneByGroup_4
   \   0000002C   0x0018             MOVS     R0,R3
   \   0000002E   0x30B4             ADDS     R0,R0,#+180
   \   00000030   0x4290             CMP      R0,R2
   \   00000032   0xD30E             BCC      ??getNextSceneByGroup_4
    136              return NULL;
    137          
    138            for (uint8_t i = 0; i < MAX_SCENES_AMOUNT; i++)
    139            {
    140              if ((scene < &scenePool[i]) && (scenePool[i].busy) && (scenePool[i].groupId == group))
   \                     ??getNextSceneByGroup_5: (+1)
   \   00000034   0x200C             MOVS     R0,#+12
   \   00000036   0x4360             MULS     R0,R4,R0
   \   00000038   0x1818             ADDS     R0,R3,R0
   \   0000003A   0x4282             CMP      R2,R0
   \   0000003C   0xD205             BCS      ??getNextSceneByGroup_6
   \   0000003E   0x7805             LDRB     R5,[R0, #+0]
   \   00000040   0x2D00             CMP      R5,#+0
   \   00000042   0xD002             BEQ      ??getNextSceneByGroup_6
   \   00000044   0x8845             LDRH     R5,[R0, #+2]
   \   00000046   0x428D             CMP      R5,R1
   \   00000048   0xD004             BEQ      ??getNextSceneByGroup_3
    141                return &scenePool[i];
    142            }
   \                     ??getNextSceneByGroup_6: (+1)
   \   0000004A   0x1C64             ADDS     R4,R4,#+1
   \   0000004C   0xB2E4             UXTB     R4,R4
   \   0000004E   0x2C10             CMP      R4,#+16
   \   00000050   0xD3F0             BCC      ??getNextSceneByGroup_5
    143          
    144            return NULL;
   \                     ??getNextSceneByGroup_4: (+1)
   \   00000052   0x2000             MOVS     R0,#+0
   \                     ??getNextSceneByGroup_3: (+1)
   \   00000054   0xBD30             POP      {R4,R5,PC}       ;; return
    145          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     scenePool
    146          
    147          #endif // APP_DEVICE_TYPE_THERMOSTAT
    148          // eof thScenes.c
    149          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   allocateScene
       8   findSceneBySceneAndGroup
       8   freeScene
         8   -> __aeabi_memclr
      12   getNextSceneByGroup
       8   initScenes
         8   -> __aeabi_memclr4
      16   removeScenesByGroup
        16   -> freeScene


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
      34  allocateScene
      38  findSceneBySceneAndGroup
      10  freeScene
      86  getNextSceneByGroup
      12  initScenes
      38  removeScenesByGroup
     192  scenePool

 
 192 bytes in section .bss
 222 bytes in section .text
 
 222 bytes of CODE memory
 192 bytes of DATA memory

Errors: none
Warnings: none
